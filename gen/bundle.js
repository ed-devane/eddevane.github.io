/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var e={56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},i=[],c=0;c<e.length;c++){var l=e[c],s=a.base?l[0]+a.base:l[0],u=r[s]||0,p="".concat(s," ").concat(u);r[s]=u+1;var d=t(p),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)n[d].references++,n[d].updater(f);else{var m=o(f,a);a.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var c=t(r[i]);n[c].references--}for(var l=a(e,o),s=0;s<r.length;s++){var u=t(r[s]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}r=l}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},159:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},249:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(601),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([e.id,"/* CSS Variables from original */\n:root{\n  --bg-canvas:#e5e7eb;\n  --bg-panel:#0c1428;\n  --fg:#e2e8f0;\n  --muted:#94a3b8;\n  --border:#1f2937;\n}\n\n/* Reset and body */\nhtml, body, #root { \n  height:100%; \n  margin:0; \n  background:var(--bg-canvas); \n  color:var(--fg); \n  font-family: ui-sans-serif, system-ui, sans-serif;\n}\n\nbutton { cursor:pointer }\n\n/* Real-time parameter system animations */\n@keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.5; }\n}\n\n/* Original button styles */\n.btn { \n  padding:6px 8px; \n  border-radius:8px; \n  border:0; \n  font-size:12px;\n}\n\n.btn-blue{ background:#0ea5e9; color:#fff }\n.btn-green{ background:#22c55e; color:#052e16; font-weight:800 }\n.btn-amber{ background:#f59e0b; color:#1f2937; font-weight:800 }\n.btn-red{ background:#dc2626; color:#fff; font-weight:800 }\n.btn-ghost{ background:#111827; color:#e2e8f0; border:1px solid #334155; }\n\n/* Main Layout - Simple 3 column structure */\n.app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    background: var(--bg-canvas);\n    color: var(--fg);\n}\n\n/* Toolbar */\n.toolbar {\n    height: 50px;\n    background: var(--bg-panel);\n    border-bottom: 1px solid var(--border);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    flex-shrink: 0;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1001;\n    width: 100%;\n}\n\n.toolbar h1 {\n    font-size: 18px;\n    font-weight: 700;\n    color: #22c55e;\n}\n\n.toolbar-actions {\n    display: flex;\n    gap: 8px;\n}\n\n/* Main Content - 3 columns: palette, canvas, inspector */\n.main-content {\n    flex: 1;\n    display: flex;\n    height: calc(100vh - 50px);\n    overflow: hidden;\n    width: 100%;\n    margin-top: 50px;\n}\n\n/* Module Palette - Left panel */\n.module-palette {\n    width: 250px;\n    background: var(--bg-panel);\n    border-right: 1px solid var(--border);\n    padding: 12px;\n    overflow-y: auto;\n    flex-shrink: 0;\n}\n\n.module-palette h2 {\n    font-size: 14px;\n    font-weight: 700;\n    color: var(--fg);\n    margin-bottom: 16px;\n}\n\n.module-categories {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n\n.category h3 {\n    font-size: 12px;\n    color: #22c55e;\n    margin-bottom: 8px;\n    text-transform: uppercase;\n    font-weight: 700;\n}\n\n.module-list {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.module-item {\n    padding: 8px 12px;\n    background: #111827;\n    border: 1px solid #334155;\n    border-radius: 8px;\n    font-size: 12px;\n    cursor: pointer;\n    transition: all 0.2s;\n    color: var(--fg);\n    font-weight: 500;\n}\n\n.module-item:hover {\n    background: #1e293b;\n    border-color: #22c55e;\n    color: #22c55e;\n}\n\n/* Patch Canvas - Center panel */\n.patch-canvas {\n    width: calc(100vw - 570px); /* Full viewport minus left sidebar (250px) + wider right sidebar (320px) */\n    position: relative;\n    overflow: auto;\n    background: #e5e7eb;\n    cursor: grab;\n    min-height: 100%;\n}\n\n.patch-canvas.panning {\n    cursor: grabbing;\n}\n\n.patch-canvas.subpatch-context {\n    background: #9ca3af; /* Darker shade when inside subpatch */\n}\n\n.patch-svg {\n    width: 100%;\n    height: 100%;\n}\n\n/* Inspector - Right panel */\n.inspector {\n    background: var(--bg-panel);\n    border-left: 1px solid var(--border);\n    padding: 12px;\n    overflow-y: auto;\n    position: fixed;\n    top: 50px;\n    right: 0;\n    width: 320px;\n    height: calc(100vh - 50px);\n    z-index: 1000;\n}\n\n.inspector h2 {\n    font-size: 14px;\n    font-weight: 700;\n    color: var(--fg);\n    margin-bottom: 8px;\n}\n\n.inspector-content {\n    font-size: 12px;\n    color: var(--muted);\n}\n\n.module-desc {\n    font-size: 12px;\n    color: var(--muted);\n    margin-bottom: 16px;\n    font-style: italic;\n}\n\n.params {\n    margin-top: 12px;\n}\n\n.params h3 {\n    font-size: 12px;\n    color: var(--muted);\n    margin-bottom: 8px;\n    font-weight: 700;\n}\n\n.param {\n    margin-bottom: 8px;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.param label {\n    font-size: 12px;\n    color: #cbd5e1;\n    margin-bottom: 4px;\n    display: block;\n}\n\n.param input,\n.param select {\n    width: 100%;\n    padding: 6px;\n    border-radius: 8px;\n    border: 1px solid #334155;\n    background: #0f172a;\n    color: var(--fg);\n    font-size: 12px;\n}\n\n.param input:focus,\n.param select:focus {\n    outline: none;\n    border-color: #22c55e;\n    box-shadow: 0 0 0 1px #22c55e;\n}\n\n.param select option {\n    background: #0f172a;\n    color: var(--fg);\n}\n\n/* Original Module Node Styles */\n.node { \n    position: absolute; \n    border-radius: 10px; \n    background: #0b1220; \n    box-shadow: 0 6px 16px rgba(0,0,0,0.35); \n    user-select: none; \n    cursor: move; \n    z-index: 10; \n    overflow: visible;\n}\n\n.node.selected {\n    box-shadow: 0 6px 16px rgba(0,0,0,0.35), 0 0 0 2px #22c55e;\n}\n\n.node-head{ \n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2px 6px;\n    height: 24px;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n}\n\n/* Original Jack Styles */\n.jack { \n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: 2px solid #1f2937;\n    cursor: pointer; \n    position: absolute; \n    z-index: 20;\n}\n\n.jack-audio { \n    background: #10b981;\n}\n\n.jack-ctrl { \n    background: #9333ea;\n}\n\n.jack-armed { \n    box-shadow: 0 0 0 2px #22d3ee inset;\n}\n\n.jack-label { \n    position: absolute; \n    font-size: 10px; \n    white-space: nowrap; \n    pointer-events: none; \n    color: #cbd5e1;\n}\n\n/* Cable styles */\n.cables { \n    position: absolute; \n    left: 0; \n    top: 0; \n    z-index: 30;\n}\n\n.cable-hit { \n    cursor: pointer;\n}\n\n.cable-selected { \n    filter: drop-shadow(0 0 2px #22c55e);\n}\n\n.cable:hover {\n    opacity: 1 !important;\n    stroke-width: 3px;\n}\n\n/* Delete button styles */\n.delete-btn:hover rect {\n    opacity: 1;\n    fill: #374151;\n    stroke: #6b7280;\n}\n\n.delete-btn:hover text {\n    fill: #ffffff;\n}\n\n.delete-btn:active rect {\n    fill: #4b5563;\n}\n\n/* Toolbar button updates */\n.toolbar button {\n    font-size: 12px;\n    padding: 6px 8px;\n    border-radius: 8px;\n    border: 0;\n}\n\n.toolbar button.primary {\n    background: #22c55e;\n    color: #052e16;\n    font-weight: 800;\n}\n\n/* Scrollbar styling for better visibility */\n::-webkit-scrollbar {\n    width: 12px;\n    height: 12px;\n}\n\n::-webkit-scrollbar-track {\n    background: #1f2937;\n    border-radius: 6px;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #4b5563;\n    border-radius: 6px;\n    border: 2px solid #1f2937;\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: #6b7280;\n}\n\n::-webkit-scrollbar-corner {\n    background: #1f2937;\n}\n\n/* For Firefox */\n* {\n    scrollbar-width: auto;\n    scrollbar-color: #4b5563 #1f2937;\n}\n\n/* Modal Styles for WavetableEditor and other modals */\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modal-content {\n    background: #1e293b;\n    border-radius: 12px;\n    padding: 20px;\n    max-width: 90vw;\n    max-height: 90vh;\n    overflow-y: auto;\n    position: relative;\n}\n\n.modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid #334155;\n}\n\n.modal-header h2 {\n    margin: 0;\n    color: #f1f5f9;\n}\n\n.close-btn {\n    background: transparent;\n    border: none;\n    color: #94a3b8;\n    font-size: 24px;\n    cursor: pointer;\n    padding: 4px 8px;\n    transition: color 0.2s;\n}\n\n.close-btn:hover {\n    color: #f1f5f9;\n}",""]);const c=i},287:(e,n)=>{var t=Symbol.for("react.element"),a=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),c=Symbol.for("react.provider"),l=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),p=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),f=Symbol.iterator,m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},_=Object.assign,g={};function h(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||m}function v(){}function b(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||m}h.prototype.isReactComponent={},h.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=h.prototype;var y=b.prototype=new v;y.constructor=b,_(y,h.prototype),y.isPureReactComponent=!0;var k=Array.isArray,S=Object.prototype.hasOwnProperty,x={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function w(e,n,a){var o,r={},i=null,c=null;if(null!=n)for(o in void 0!==n.ref&&(c=n.ref),void 0!==n.key&&(i=""+n.key),n)S.call(n,o)&&!E.hasOwnProperty(o)&&(r[o]=n[o]);var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){for(var s=Array(l),u=0;u<l;u++)s[u]=arguments[u+2];r.children=s}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===r[o]&&(r[o]=l[o]);return{$$typeof:t,type:e,key:i,ref:c,props:r,_owner:x.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var C=/\/+/g;function R(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return n[e]})}(""+e.key):n.toString(36)}function L(e,n,o,r,i){var c=typeof e;"undefined"!==c&&"boolean"!==c||(e=null);var l=!1;if(null===e)l=!0;else switch(c){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case a:l=!0}}if(l)return i=i(l=e),e=""===r?"."+R(l,0):r,k(i)?(o="",null!=e&&(o=e.replace(C,"$&/")+"/"),L(i,n,o,"",function(e){return e})):null!=i&&(P(i)&&(i=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),n.push(i)),1;if(l=0,r=""===r?".":r+":",k(e))for(var s=0;s<e.length;s++){var u=r+R(c=e[s],s);l+=L(c,n,o,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),s=0;!(c=e.next()).done;)l+=L(c=c.value,n,o,u=r+R(c,s++),i);else if("object"===c)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function I(e,n,t){if(null==e)return e;var a=[],o=0;return L(e,a,"","",function(e){return n.call(t,e,o++)}),a}function M(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)},function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var D={current:null},A={transition:null},T={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:A,ReactCurrentOwner:x};function O(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:I,forEach:function(e,n,t){I(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return I(e,function(){n++}),n},toArray:function(e){return I(e,function(e){return e})||[]},only:function(e){if(!P(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=h,n.Fragment=o,n.Profiler=i,n.PureComponent=b,n.StrictMode=r,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T,n.act=O,n.cloneElement=function(e,n,a){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=_({},e.props),r=e.key,i=e.ref,c=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,c=x.current),void 0!==n.key&&(r=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(s in n)S.call(n,s)&&!E.hasOwnProperty(s)&&(o[s]=void 0===n[s]&&void 0!==l?l[s]:n[s])}var s=arguments.length-2;if(1===s)o.children=a;else if(1<s){l=Array(s);for(var u=0;u<s;u++)l[u]=arguments[u+2];o.children=l}return{$$typeof:t,type:e.type,key:r,ref:i,props:o,_owner:c}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},n.createElement=w,n.createFactory=function(e){var n=w.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:s,render:e}},n.isValidElement=P,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:M}},n.memo=function(e,n){return{$$typeof:p,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=A.transition;A.transition={};try{e()}finally{A.transition=n}},n.unstable_act=O,n.useCallback=function(e,n){return D.current.useCallback(e,n)},n.useContext=function(e){return D.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return D.current.useDeferredValue(e)},n.useEffect=function(e,n){return D.current.useEffect(e,n)},n.useId=function(){return D.current.useId()},n.useImperativeHandle=function(e,n,t){return D.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return D.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return D.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return D.current.useMemo(e,n)},n.useReducer=function(e,n,t){return D.current.useReducer(e,n,t)},n.useRef=function(e){return D.current.useRef(e)},n.useState=function(e){return D.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return D.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return D.current.useTransition()},n.version="18.3.1"},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t}).join("")},n.i=function(e,t,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);a&&i[u[0]]||(void 0!==r&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=r),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},338:(e,n,t)=>{var a=t(961);n.createRoot=a.createRoot,n.hydrateRoot=a.hydrateRoot},463:(e,n)=>{function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var a=t-1>>>1,o=e[a];if(!(0<r(o,n)))break e;e[a]=n,e[t]=o,t=a}}function a(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var a=0,o=e.length,i=o>>>1;a<i;){var c=2*(a+1)-1,l=e[c],s=c+1,u=e[s];if(0>r(l,t))s<o&&0>r(u,l)?(e[a]=u,e[s]=t,a=s):(e[a]=l,e[c]=t,a=c);else{if(!(s<o&&0>r(u,t)))break e;e[a]=u,e[s]=t,a=s}}}return n}function r(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var c=Date,l=c.now();n.unstable_now=function(){return c.now()-l}}var s=[],u=[],p=1,d=null,f=3,m=!1,_=!1,g=!1,h="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var n=a(u);null!==n;){if(null===n.callback)o(u);else{if(!(n.startTime<=e))break;o(u),n.sortIndex=n.expirationTime,t(s,n)}n=a(u)}}function k(e){if(g=!1,y(e),!_)if(null!==a(s))_=!0,A(S);else{var n=a(u);null!==n&&T(k,n.startTime-e)}}function S(e,t){_=!1,g&&(g=!1,v(P),P=-1),m=!0;var r=f;try{for(y(t),d=a(s);null!==d&&(!(d.expirationTime>t)||e&&!L());){var i=d.callback;if("function"==typeof i){d.callback=null,f=d.priorityLevel;var c=i(d.expirationTime<=t);t=n.unstable_now(),"function"==typeof c?d.callback=c:d===a(s)&&o(s),y(t)}else o(s);d=a(s)}if(null!==d)var l=!0;else{var p=a(u);null!==p&&T(k,p.startTime-t),l=!1}return l}finally{d=null,f=r,m=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,E=!1,w=null,P=-1,C=5,R=-1;function L(){return!(n.unstable_now()-R<C)}function I(){if(null!==w){var e=n.unstable_now();R=e;var t=!0;try{t=w(!0,e)}finally{t?x():(E=!1,w=null)}}else E=!1}if("function"==typeof b)x=function(){b(I)};else if("undefined"!=typeof MessageChannel){var M=new MessageChannel,D=M.port2;M.port1.onmessage=I,x=function(){D.postMessage(null)}}else x=function(){h(I,0)};function A(e){w=e,E||(E=!0,x())}function T(e,t){P=h(function(){e(n.unstable_now())},t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){_||m||(_=!0,A(S))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return a(s)},n.unstable_next=function(e){switch(f){case 1:case 2:case 3:var n=3;break;default:n=f}var t=f;f=n;try{return e()}finally{f=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=f;f=e;try{return n()}finally{f=t}},n.unstable_scheduleCallback=function(e,o,r){var i=n.unstable_now();switch(r="object"==typeof r&&null!==r&&"number"==typeof(r=r.delay)&&0<r?i+r:i,e){case 1:var c=-1;break;case 2:c=250;break;case 5:c=1073741823;break;case 4:c=1e4;break;default:c=5e3}return e={id:p++,callback:o,priorityLevel:e,startTime:r,expirationTime:c=r+c,sortIndex:-1},r>i?(e.sortIndex=r,t(u,e),null===a(s)&&e===a(u)&&(g?(v(P),P=-1):g=!0,T(k,r-i))):(e.sortIndex=c,t(s,e),_||m||(_=!0,A(S))),e},n.unstable_shouldYield=L,n.unstable_wrapCallback=function(e){var n=f;return function(){var t=f;f=n;try{return e.apply(this,arguments)}finally{f=t}}}},540:(e,n,t)=>{e.exports=t(287)},551:(e,n,t)=>{var a=t(540),o=t(982);function r(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,c={};function l(e,n){s(e,n),s(e+"Capture",n)}function s(e,n){for(c[e]=n,e=0;e<n.length;e++)i.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),p=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},m={};function _(e,n,t,a,o,r,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=a,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=r,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){g[e]=new _(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var n=e[0];g[n]=new _(n,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){g[e]=new _(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){g[e]=new _(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){g[e]=new _(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){g[e]=new _(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){g[e]=new _(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){g[e]=new _(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){g[e]=new _(e,5,!1,e.toLowerCase(),null,!1,!1)});var h=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,n,t,a){var o=g.hasOwnProperty(n)?g[n]:null;(null!==o?0!==o.type:a||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,a){if(null==n||function(e,n,t,a){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,a))return!0;if(a)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,a)&&(t=null),a||null===o?function(e){return!!p.call(m,e)||!p.call(f,e)&&(d.test(e)?m[e]=!0:(f[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,a=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,a?e.setAttributeNS(a,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var n=e.replace(h,v);g[n]=new _(n,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var n=e.replace(h,v);g[n]=new _(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var n=e.replace(h,v);g[n]=new _(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){g[e]=new _(e,1,!1,e.toLowerCase(),null,!1,!1)}),g.xlinkHref=new _("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){g[e]=new _(e,1,!1,e.toLowerCase(),null,!0,!0)});var y=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),S=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),w=Symbol.for("react.profiler"),P=Symbol.for("react.provider"),C=Symbol.for("react.context"),R=Symbol.for("react.forward_ref"),L=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),M=Symbol.for("react.memo"),D=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var A=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var T=Symbol.iterator;function O(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=T&&e[T]||e["@@iterator"])?e:null}var B,z=Object.assign;function F(e){if(void 0===B)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);B=n&&n[1]||""}return"\n"+B+e}var N=!1;function G(e,n){if(!e||N)return"";N=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var a=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){a=e}e.call(n.prototype)}else{try{throw Error()}catch(e){a=e}e()}}catch(n){if(n&&a&&"string"==typeof n.stack){for(var o=n.stack.split("\n"),r=a.stack.split("\n"),i=o.length-1,c=r.length-1;1<=i&&0<=c&&o[i]!==r[c];)c--;for(;1<=i&&0<=c;i--,c--)if(o[i]!==r[c]){if(1!==i||1!==c)do{if(i--,0>--c||o[i]!==r[c]){var l="\n"+o[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=c);break}}}finally{N=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?F(e):""}function q(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return G(e.type,!1);case 11:return G(e.type.render,!1);case 1:return G(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case w:return"Profiler";case E:return"StrictMode";case L:return"Suspense";case I:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case R:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case M:return null!==(n=e.displayName||null)?n:U(e.type)||"Memo";case D:n=e._payload,e=e._init;try{return U(e(n))}catch(e){}}return null}function W(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(n);case 8:return n===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function H(e){e._valueTracker||(e._valueTracker=function(e){var n=j(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),a=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,r=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){a=""+e,r.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function $(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==t&&(n.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Y(e,n){var t=n.checked;return z({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function X(e,n){var t=null==n.defaultValue?"":n.defaultValue,a=null!=n.checked?n.checked:n.defaultChecked;t=V(null!=n.value?n.value:t),e._wrapperState={initialChecked:a,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Z(e,n){null!=(n=n.checked)&&b(e,"checked",n,!1)}function Q(e,n){Z(e,n);var t=V(n.value),a=n.type;if(null!=t)"number"===a?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,V(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function J(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var a=n.type;if(!("submit"!==a&&"reset"!==a||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&K(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,a){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&a&&(e[t].defaultSelected=!0)}else{for(t=""+V(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(a&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function ae(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(r(91));return z({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(r(92));if(ne(t)){if(1<t.length)throw Error(r(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:V(t)}}function re(e,n){var t=V(n.value),a=V(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=a&&(e.defaultValue=""+a)}function ie(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ce(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ce(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var se,ue,pe=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,a){MSApp.execUnsafeLocalFunction(function(){return ue(e,n)})}:ue);function de(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function _e(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||fe.hasOwnProperty(e)&&fe[e]?(""+n).trim():n+"px"}function ge(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var a=0===t.indexOf("--"),o=_e(t,n[t],a);"float"===t&&(t="cssFloat"),a?e.setProperty(t,o):e[t]=o}}Object.keys(fe).forEach(function(e){me.forEach(function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),fe[n]=fe[e]})});var he=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,n){if(n){if(he[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(r(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(r(62))}}function be(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,xe=null,Ee=null;function we(e){if(e=yo(e)){if("function"!=typeof Se)throw Error(r(280));var n=e.stateNode;n&&(n=So(n),Se(e.stateNode,e.type,n))}}function Pe(e){xe?Ee?Ee.push(e):Ee=[e]:xe=e}function Ce(){if(xe){var e=xe,n=Ee;if(Ee=xe=null,we(e),n)for(e=0;e<n.length;e++)we(n[e])}}function Re(e,n){return e(n)}function Le(){}var Ie=!1;function Me(e,n,t){if(Ie)return e(n,t);Ie=!0;try{return Re(e,n,t)}finally{Ie=!1,(null!==xe||null!==Ee)&&(Le(),Ce())}}function De(e,n){var t=e.stateNode;if(null===t)return null;var a=So(t);if(null===a)return null;t=a[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(r(231,n,typeof t));return t}var Ae=!1;if(u)try{var Te={};Object.defineProperty(Te,"passive",{get:function(){Ae=!0}}),window.addEventListener("test",Te,Te),window.removeEventListener("test",Te,Te)}catch(ue){Ae=!1}function Oe(e,n,t,a,o,r,i,c,l){var s=Array.prototype.slice.call(arguments,3);try{n.apply(t,s)}catch(e){this.onError(e)}}var Be=!1,ze=null,Fe=!1,Ne=null,Ge={onError:function(e){Be=!0,ze=e}};function qe(e,n,t,a,o,r,i,c,l){Be=!1,ze=null,Oe.apply(Ge,arguments)}function Ue(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{!!(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function We(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ve(e){if(Ue(e)!==e)throw Error(r(188))}function je(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Ue(e)))throw Error(r(188));return n!==e?null:e}for(var t=e,a=n;;){var o=t.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(a=o.return)){t=a;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===t)return Ve(o),e;if(i===a)return Ve(o),n;i=i.sibling}throw Error(r(188))}if(t.return!==a.return)t=o,a=i;else{for(var c=!1,l=o.child;l;){if(l===t){c=!0,t=o,a=i;break}if(l===a){c=!0,a=o,t=i;break}l=l.sibling}if(!c){for(l=i.child;l;){if(l===t){c=!0,t=i,a=o;break}if(l===a){c=!0,a=i,t=o;break}l=l.sibling}if(!c)throw Error(r(189))}}if(t.alternate!==a)throw Error(r(190))}if(3!==t.tag)throw Error(r(188));return t.stateNode.current===t?e:n}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=He(e);if(null!==n)return n;e=e.sibling}return null}var $e=o.unstable_scheduleCallback,Ke=o.unstable_cancelCallback,Ye=o.unstable_shouldYield,Xe=o.unstable_requestPaint,Ze=o.unstable_now,Qe=o.unstable_getCurrentPriorityLevel,Je=o.unstable_ImmediatePriority,en=o.unstable_UserBlockingPriority,nn=o.unstable_NormalPriority,tn=o.unstable_LowPriority,an=o.unstable_IdlePriority,on=null,rn=null,cn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ln(e)/sn|0)|0},ln=Math.log,sn=Math.LN2,un=64,pn=4194304;function dn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function fn(e,n){var t=e.pendingLanes;if(0===t)return 0;var a=0,o=e.suspendedLanes,r=e.pingedLanes,i=268435455&t;if(0!==i){var c=i&~o;0!==c?a=dn(c):0!==(r&=i)&&(a=dn(r))}else 0!==(i=t&~o)?a=dn(i):0!==r&&(a=dn(r));if(0===a)return 0;if(0!==n&&n!==a&&0===(n&o)&&((o=a&-a)>=(r=n&-n)||16===o&&4194240&r))return n;if(4&a&&(a|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=a;0<n;)o=1<<(t=31-cn(n)),a|=e[t],n&=~o;return a}function mn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function _n(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gn(){var e=un;return!(4194240&(un<<=1))&&(un=64),e}function hn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function vn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-cn(n)]=t}function bn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var a=31-cn(t),o=1<<a;o&n|e[a]&n&&(e[a]|=n),t&=~o}}var yn=0;function kn(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var Sn,xn,En,wn,Pn,Cn=!1,Rn=[],Ln=null,In=null,Mn=null,Dn=new Map,An=new Map,Tn=[],On="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Bn(e,n){switch(e){case"focusin":case"focusout":Ln=null;break;case"dragenter":case"dragleave":In=null;break;case"mouseover":case"mouseout":Mn=null;break;case"pointerover":case"pointerout":Dn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":An.delete(n.pointerId)}}function zn(e,n,t,a,o,r){return null===e||e.nativeEvent!==r?(e={blockedOn:n,domEventName:t,eventSystemFlags:a,nativeEvent:r,targetContainers:[o]},null!==n&&null!==(n=yo(n))&&xn(n),e):(e.eventSystemFlags|=a,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function Fn(e){var n=bo(e.target);if(null!==n){var t=Ue(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=We(t)))return e.blockedOn=n,void Pn(e.priority,function(){En(t)})}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Nn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Xn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=yo(t))&&xn(n),e.blockedOn=t,!1;var a=new(t=e.nativeEvent).constructor(t.type,t);ye=a,t.target.dispatchEvent(a),ye=null,n.shift()}return!0}function Gn(e,n,t){Nn(e)&&t.delete(n)}function qn(){Cn=!1,null!==Ln&&Nn(Ln)&&(Ln=null),null!==In&&Nn(In)&&(In=null),null!==Mn&&Nn(Mn)&&(Mn=null),Dn.forEach(Gn),An.forEach(Gn)}function Un(e,n){e.blockedOn===n&&(e.blockedOn=null,Cn||(Cn=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,qn)))}function Wn(e){function n(n){return Un(n,e)}if(0<Rn.length){Un(Rn[0],e);for(var t=1;t<Rn.length;t++){var a=Rn[t];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Ln&&Un(Ln,e),null!==In&&Un(In,e),null!==Mn&&Un(Mn,e),Dn.forEach(n),An.forEach(n),t=0;t<Tn.length;t++)(a=Tn[t]).blockedOn===e&&(a.blockedOn=null);for(;0<Tn.length&&null===(t=Tn[0]).blockedOn;)Fn(t),null===t.blockedOn&&Tn.shift()}var Vn=y.ReactCurrentBatchConfig,jn=!0;function Hn(e,n,t,a){var o=yn,r=Vn.transition;Vn.transition=null;try{yn=1,Kn(e,n,t,a)}finally{yn=o,Vn.transition=r}}function $n(e,n,t,a){var o=yn,r=Vn.transition;Vn.transition=null;try{yn=4,Kn(e,n,t,a)}finally{yn=o,Vn.transition=r}}function Kn(e,n,t,a){if(jn){var o=Xn(e,n,t,a);if(null===o)Va(e,n,a,Yn,t),Bn(e,a);else if(function(e,n,t,a,o){switch(n){case"focusin":return Ln=zn(Ln,e,n,t,a,o),!0;case"dragenter":return In=zn(In,e,n,t,a,o),!0;case"mouseover":return Mn=zn(Mn,e,n,t,a,o),!0;case"pointerover":var r=o.pointerId;return Dn.set(r,zn(Dn.get(r)||null,e,n,t,a,o)),!0;case"gotpointercapture":return r=o.pointerId,An.set(r,zn(An.get(r)||null,e,n,t,a,o)),!0}return!1}(o,e,n,t,a))a.stopPropagation();else if(Bn(e,a),4&n&&-1<On.indexOf(e)){for(;null!==o;){var r=yo(o);if(null!==r&&Sn(r),null===(r=Xn(e,n,t,a))&&Va(e,n,a,Yn,t),r===o)break;o=r}null!==o&&a.stopPropagation()}else Va(e,n,a,null,t)}}var Yn=null;function Xn(e,n,t,a){if(Yn=null,null!==(e=bo(e=ke(a))))if(null===(n=Ue(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=We(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Yn=e,null}function Zn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Qe()){case Je:return 1;case en:return 4;case nn:case tn:return 16;case an:return 536870912;default:return 16}default:return 16}}var Qn=null,Jn=null,et=null;function nt(){if(et)return et;var e,n,t=Jn,a=t.length,o="value"in Qn?Qn.value:Qn.textContent,r=o.length;for(e=0;e<a&&t[e]===o[e];e++);var i=a-e;for(n=1;n<=i&&t[a-n]===o[r-n];n++);return et=o.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function at(){return!0}function ot(){return!1}function rt(e){function n(n,t,a,o,r){for(var i in this._reactName=n,this._targetInst=a,this.type=t,this.nativeEvent=o,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?at:ot,this.isPropagationStopped=ot,this}return z(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=at)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=at)},persist:function(){},isPersistent:at}),n}var it,ct,lt,st={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=rt(st),pt=z({},st,{view:0,detail:0}),dt=rt(pt),ft=z({},pt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(it=e.screenX-lt.screenX,ct=e.screenY-lt.screenY):ct=it=0,lt=e),it)},movementY:function(e){return"movementY"in e?e.movementY:ct}}),mt=rt(ft),_t=rt(z({},ft,{dataTransfer:0})),gt=rt(z({},pt,{relatedTarget:0})),ht=rt(z({},st,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=z({},st,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bt=rt(vt),yt=rt(z({},st,{data:0})),kt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},St={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Et(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=xt[e])&&!!n[e]}function wt(){return Et}var Pt=z({},pt,{key:function(e){if(e.key){var n=kt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?St[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ct=rt(Pt),Rt=rt(z({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Lt=rt(z({},pt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wt})),It=rt(z({},st,{propertyName:0,elapsedTime:0,pseudoElement:0})),Mt=z({},ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dt=rt(Mt),At=[9,13,27,32],Tt=u&&"CompositionEvent"in window,Ot=null;u&&"documentMode"in document&&(Ot=document.documentMode);var Bt=u&&"TextEvent"in window&&!Ot,zt=u&&(!Tt||Ot&&8<Ot&&11>=Ot),Ft=String.fromCharCode(32),Nt=!1;function Gt(e,n){switch(e){case"keyup":return-1!==At.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function qt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ut=!1,Wt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Wt[e.type]:"textarea"===n}function jt(e,n,t,a){Pe(a),0<(n=Ha(n,"onChange")).length&&(t=new ut("onChange","change",null,t,a),e.push({event:t,listeners:n}))}var Ht=null,$t=null;function Kt(e){Fa(e,0)}function Yt(e){if($(ko(e)))return e}function Xt(e,n){if("change"===e)return n}var Zt=!1;if(u){var Qt;if(u){var Jt="oninput"in document;if(!Jt){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),Jt="function"==typeof ea.oninput}Qt=Jt}else Qt=!1;Zt=Qt&&(!document.documentMode||9<document.documentMode)}function na(){Ht&&(Ht.detachEvent("onpropertychange",ta),$t=Ht=null)}function ta(e){if("value"===e.propertyName&&Yt($t)){var n=[];jt(n,$t,e,ke(e)),Me(Kt,n)}}function aa(e,n,t){"focusin"===e?(na(),$t=t,(Ht=n).attachEvent("onpropertychange",ta)):"focusout"===e&&na()}function oa(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yt($t)}function ra(e,n){if("click"===e)return Yt(n)}function ia(e,n){if("input"===e||"change"===e)return Yt(n)}var ca="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function la(e,n){if(ca(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),a=Object.keys(n);if(t.length!==a.length)return!1;for(a=0;a<t.length;a++){var o=t[a];if(!p.call(n,o)||!ca(e[o],n[o]))return!1}return!0}function sa(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,n){var t,a=sa(e);for(e=0;a;){if(3===a.nodeType){if(t=e+a.textContent.length,e<=n&&t>=n)return{node:a,offset:n-e};e=t}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=sa(a)}}function pa(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?pa(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function da(){for(var e=window,n=K();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=K((e=n.contentWindow).document)}return n}function fa(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function ma(e){var n=da(),t=e.focusedElem,a=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&pa(t.ownerDocument.documentElement,t)){if(null!==a&&fa(t))if(n=a.start,void 0===(e=a.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var o=t.textContent.length,r=Math.min(a.start,o);a=void 0===a.end?r:Math.min(a.end,o),!e.extend&&r>a&&(o=a,a=r,r=o),o=ua(t,r);var i=ua(t,a);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((n=n.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),r>a?(e.addRange(n),e.extend(i.node,i.offset)):(n.setEnd(i.node,i.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var _a=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ha=null,va=null,ba=!1;function ya(e,n,t){var a=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;ba||null==ga||ga!==K(a)||(a="selectionStart"in(a=ga)&&fa(a)?{start:a.selectionStart,end:a.selectionEnd}:{anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},va&&la(va,a)||(va=a,0<(a=Ha(ha,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:a}),n.target=ga)))}function ka(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Sa={animationend:ka("Animation","AnimationEnd"),animationiteration:ka("Animation","AnimationIteration"),animationstart:ka("Animation","AnimationStart"),transitionend:ka("Transition","TransitionEnd")},xa={},Ea={};function wa(e){if(xa[e])return xa[e];if(!Sa[e])return e;var n,t=Sa[e];for(n in t)if(t.hasOwnProperty(n)&&n in Ea)return xa[e]=t[n];return e}u&&(Ea=document.createElement("div").style,"AnimationEvent"in window||(delete Sa.animationend.animation,delete Sa.animationiteration.animation,delete Sa.animationstart.animation),"TransitionEvent"in window||delete Sa.transitionend.transition);var Pa=wa("animationend"),Ca=wa("animationiteration"),Ra=wa("animationstart"),La=wa("transitionend"),Ia=new Map,Ma="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Da(e,n){Ia.set(e,n),l(n,[e])}for(var Aa=0;Aa<Ma.length;Aa++){var Ta=Ma[Aa];Da(Ta.toLowerCase(),"on"+(Ta[0].toUpperCase()+Ta.slice(1)))}Da(Pa,"onAnimationEnd"),Da(Ca,"onAnimationIteration"),Da(Ra,"onAnimationStart"),Da("dblclick","onDoubleClick"),Da("focusin","onFocus"),Da("focusout","onBlur"),Da(La,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Oa="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ba=new Set("cancel close invalid load scroll toggle".split(" ").concat(Oa));function za(e,n,t){var a=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,a,o,i,c,l,s){if(qe.apply(this,arguments),Be){if(!Be)throw Error(r(198));var u=ze;Be=!1,ze=null,Fe||(Fe=!0,Ne=u)}}(a,n,void 0,e),e.currentTarget=null}function Fa(e,n){n=!!(4&n);for(var t=0;t<e.length;t++){var a=e[t],o=a.event;a=a.listeners;e:{var r=void 0;if(n)for(var i=a.length-1;0<=i;i--){var c=a[i],l=c.instance,s=c.currentTarget;if(c=c.listener,l!==r&&o.isPropagationStopped())break e;za(o,c,s),r=l}else for(i=0;i<a.length;i++){if(l=(c=a[i]).instance,s=c.currentTarget,c=c.listener,l!==r&&o.isPropagationStopped())break e;za(o,c,s),r=l}}}if(Fe)throw e=Ne,Fe=!1,Ne=null,e}function Na(e,n){var t=n[go];void 0===t&&(t=n[go]=new Set);var a=e+"__bubble";t.has(a)||(Wa(n,e,2,!1),t.add(a))}function Ga(e,n,t){var a=0;n&&(a|=4),Wa(t,e,a,n)}var qa="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[qa]){e[qa]=!0,i.forEach(function(n){"selectionchange"!==n&&(Ba.has(n)||Ga(n,!1,e),Ga(n,!0,e))});var n=9===e.nodeType?e:e.ownerDocument;null===n||n[qa]||(n[qa]=!0,Ga("selectionchange",!1,n))}}function Wa(e,n,t,a){switch(Zn(n)){case 1:var o=Hn;break;case 4:o=$n;break;default:o=Kn}t=o.bind(null,n,t,e),o=void 0,!Ae||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),a?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function Va(e,n,t,a,o){var r=a;if(!(1&n||2&n||null===a))e:for(;;){if(null===a)return;var i=a.tag;if(3===i||4===i){var c=a.stateNode.containerInfo;if(c===o||8===c.nodeType&&c.parentNode===o)break;if(4===i)for(i=a.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===o||8===l.nodeType&&l.parentNode===o))return;i=i.return}for(;null!==c;){if(null===(i=bo(c)))return;if(5===(l=i.tag)||6===l){a=r=i;continue e}c=c.parentNode}}a=a.return}Me(function(){var a=r,o=ke(t),i=[];e:{var c=Ia.get(e);if(void 0!==c){var l=ut,s=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=Ct;break;case"focusin":s="focus",l=gt;break;case"focusout":s="blur",l=gt;break;case"beforeblur":case"afterblur":l=gt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=mt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=_t;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Lt;break;case Pa:case Ca:case Ra:l=ht;break;case La:l=It;break;case"scroll":l=dt;break;case"wheel":l=Dt;break;case"copy":case"cut":case"paste":l=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Rt}var u=!!(4&n),p=!u&&"scroll"===e,d=u?null!==c?c+"Capture":null:c;u=[];for(var f,m=a;null!==m;){var _=(f=m).stateNode;if(5===f.tag&&null!==_&&(f=_,null!==d&&null!=(_=De(m,d))&&u.push(ja(m,_,f))),p)break;m=m.return}0<u.length&&(c=new l(c,s,null,t,o),i.push({event:c,listeners:u}))}}if(!(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(c="mouseover"===e||"pointerover"===e)||t===ye||!(s=t.relatedTarget||t.fromElement)||!bo(s)&&!s[_o])&&(l||c)&&(c=o.window===o?o:(c=o.ownerDocument)?c.defaultView||c.parentWindow:window,l?(l=a,null!==(s=(s=t.relatedTarget||t.toElement)?bo(s):null)&&(s!==(p=Ue(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(l=null,s=a),l!==s)){if(u=mt,_="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(u=Rt,_="onPointerLeave",d="onPointerEnter",m="pointer"),p=null==l?c:ko(l),f=null==s?c:ko(s),(c=new u(_,m+"leave",l,t,o)).target=p,c.relatedTarget=f,_=null,bo(o)===a&&((u=new u(d,m+"enter",s,t,o)).target=f,u.relatedTarget=p,_=u),p=_,l&&s)e:{for(d=s,m=0,f=u=l;f;f=$a(f))m++;for(f=0,_=d;_;_=$a(_))f++;for(;0<m-f;)u=$a(u),m--;for(;0<f-m;)d=$a(d),f--;for(;m--;){if(u===d||null!==d&&u===d.alternate)break e;u=$a(u),d=$a(d)}u=null}else u=null;null!==l&&Ka(i,c,l,u,!1),null!==s&&null!==p&&Ka(i,p,s,u,!0)}if("select"===(l=(c=a?ko(a):window).nodeName&&c.nodeName.toLowerCase())||"input"===l&&"file"===c.type)var g=Xt;else if(Vt(c))if(Zt)g=ia;else{g=oa;var h=aa}else(l=c.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===c.type||"radio"===c.type)&&(g=ra);switch(g&&(g=g(e,a))?jt(i,g,t,o):(h&&h(e,c,a),"focusout"===e&&(h=c._wrapperState)&&h.controlled&&"number"===c.type&&ee(c,"number",c.value)),h=a?ko(a):window,e){case"focusin":(Vt(h)||"true"===h.contentEditable)&&(ga=h,ha=a,va=null);break;case"focusout":va=ha=ga=null;break;case"mousedown":ba=!0;break;case"contextmenu":case"mouseup":case"dragend":ba=!1,ya(i,t,o);break;case"selectionchange":if(_a)break;case"keydown":case"keyup":ya(i,t,o)}var v;if(Tt)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Ut?Gt(e,t)&&(b="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(b="onCompositionStart");b&&(zt&&"ko"!==t.locale&&(Ut||"onCompositionStart"!==b?"onCompositionEnd"===b&&Ut&&(v=nt()):(Jn="value"in(Qn=o)?Qn.value:Qn.textContent,Ut=!0)),0<(h=Ha(a,b)).length&&(b=new yt(b,e,null,t,o),i.push({event:b,listeners:h}),(v||null!==(v=qt(t)))&&(b.data=v))),(v=Bt?function(e,n){switch(e){case"compositionend":return qt(n);case"keypress":return 32!==n.which?null:(Nt=!0,Ft);case"textInput":return(e=n.data)===Ft&&Nt?null:e;default:return null}}(e,t):function(e,n){if(Ut)return"compositionend"===e||!Tt&&Gt(e,n)?(e=nt(),et=Jn=Qn=null,Ut=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return zt&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(a=Ha(a,"onBeforeInput")).length&&(o=new yt("onBeforeInput","beforeinput",null,t,o),i.push({event:o,listeners:a}),o.data=v)}Fa(i,n)})}function ja(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Ha(e,n){for(var t=n+"Capture",a=[];null!==e;){var o=e,r=o.stateNode;5===o.tag&&null!==r&&(o=r,null!=(r=De(e,t))&&a.unshift(ja(e,r,o)),null!=(r=De(e,n))&&a.push(ja(e,r,o))),e=e.return}return a}function $a(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,n,t,a,o){for(var r=n._reactName,i=[];null!==t&&t!==a;){var c=t,l=c.alternate,s=c.stateNode;if(null!==l&&l===a)break;5===c.tag&&null!==s&&(c=s,o?null!=(l=De(t,r))&&i.unshift(ja(t,l,c)):o||null!=(l=De(t,r))&&i.push(ja(t,l,c))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}var Ya=/\r\n?/g,Xa=/\u0000|\uFFFD/g;function Za(e){return("string"==typeof e?e:""+e).replace(Ya,"\n").replace(Xa,"")}function Qa(e,n,t){if(n=Za(n),Za(e)!==n&&t)throw Error(r(425))}function Ja(){}var eo=null,no=null;function to(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ao="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,ro="function"==typeof Promise?Promise:void 0,io="function"==typeof queueMicrotask?queueMicrotask:void 0!==ro?function(e){return ro.resolve(null).then(e).catch(co)}:ao;function co(e){setTimeout(function(){throw e})}function lo(e,n){var t=n,a=0;do{var o=t.nextSibling;if(e.removeChild(t),o&&8===o.nodeType)if("/$"===(t=o.data)){if(0===a)return e.removeChild(o),void Wn(n);a--}else"$"!==t&&"$?"!==t&&"$!"!==t||a++;t=o}while(t);Wn(n)}function so(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function uo(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var po=Math.random().toString(36).slice(2),fo="__reactFiber$"+po,mo="__reactProps$"+po,_o="__reactContainer$"+po,go="__reactEvents$"+po,ho="__reactListeners$"+po,vo="__reactHandles$"+po;function bo(e){var n=e[fo];if(n)return n;for(var t=e.parentNode;t;){if(n=t[_o]||t[fo]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=uo(e);null!==e;){if(t=e[fo])return t;e=uo(e)}return n}t=(e=t).parentNode}return null}function yo(e){return!(e=e[fo]||e[_o])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ko(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function So(e){return e[mo]||null}var xo=[],Eo=-1;function wo(e){return{current:e}}function Po(e){0>Eo||(e.current=xo[Eo],xo[Eo]=null,Eo--)}function Co(e,n){Eo++,xo[Eo]=e.current,e.current=n}var Ro={},Lo=wo(Ro),Io=wo(!1),Mo=Ro;function Do(e,n){var t=e.type.contextTypes;if(!t)return Ro;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===n)return a.__reactInternalMemoizedMaskedChildContext;var o,r={};for(o in t)r[o]=n[o];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=r),r}function Ao(e){return null!=e.childContextTypes}function To(){Po(Io),Po(Lo)}function Oo(e,n,t){if(Lo.current!==Ro)throw Error(r(168));Co(Lo,n),Co(Io,t)}function Bo(e,n,t){var a=e.stateNode;if(n=n.childContextTypes,"function"!=typeof a.getChildContext)return t;for(var o in a=a.getChildContext())if(!(o in n))throw Error(r(108,W(e)||"Unknown",o));return z({},t,a)}function zo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ro,Mo=Lo.current,Co(Lo,e),Co(Io,Io.current),!0}function Fo(e,n,t){var a=e.stateNode;if(!a)throw Error(r(169));t?(e=Bo(e,n,Mo),a.__reactInternalMemoizedMergedChildContext=e,Po(Io),Po(Lo),Co(Lo,e)):Po(Io),Co(Io,t)}var No=null,Go=!1,qo=!1;function Uo(e){null===No?No=[e]:No.push(e)}function Wo(){if(!qo&&null!==No){qo=!0;var e=0,n=yn;try{var t=No;for(yn=1;e<t.length;e++){var a=t[e];do{a=a(!0)}while(null!==a)}No=null,Go=!1}catch(n){throw null!==No&&(No=No.slice(e+1)),$e(Je,Wo),n}finally{yn=n,qo=!1}}return null}var Vo=[],jo=0,Ho=null,$o=0,Ko=[],Yo=0,Xo=null,Zo=1,Qo="";function Jo(e,n){Vo[jo++]=$o,Vo[jo++]=Ho,Ho=e,$o=n}function er(e,n,t){Ko[Yo++]=Zo,Ko[Yo++]=Qo,Ko[Yo++]=Xo,Xo=e;var a=Zo;e=Qo;var o=32-cn(a)-1;a&=~(1<<o),t+=1;var r=32-cn(n)+o;if(30<r){var i=o-o%5;r=(a&(1<<i)-1).toString(32),a>>=i,o-=i,Zo=1<<32-cn(n)+o|t<<o|a,Qo=r+e}else Zo=1<<r|t<<o|a,Qo=e}function nr(e){null!==e.return&&(Jo(e,1),er(e,1,0))}function tr(e){for(;e===Ho;)Ho=Vo[--jo],Vo[jo]=null,$o=Vo[--jo],Vo[jo]=null;for(;e===Xo;)Xo=Ko[--Yo],Ko[Yo]=null,Qo=Ko[--Yo],Ko[Yo]=null,Zo=Ko[--Yo],Ko[Yo]=null}var ar=null,or=null,rr=!1,ir=null;function cr(e,n){var t=Ms(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function lr(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ar=e,or=so(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ar=e,or=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Xo?{id:Zo,overflow:Qo}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Ms(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ar=e,or=null,!0);default:return!1}}function sr(e){return!(!(1&e.mode)||128&e.flags)}function ur(e){if(rr){var n=or;if(n){var t=n;if(!lr(e,n)){if(sr(e))throw Error(r(418));n=so(t.nextSibling);var a=ar;n&&lr(e,n)?cr(a,t):(e.flags=-4097&e.flags|2,rr=!1,ar=e)}}else{if(sr(e))throw Error(r(418));e.flags=-4097&e.flags|2,rr=!1,ar=e}}}function pr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ar=e}function dr(e){if(e!==ar)return!1;if(!rr)return pr(e),rr=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!to(e.type,e.memoizedProps)),n&&(n=or)){if(sr(e))throw fr(),Error(r(418));for(;n;)cr(e,n),n=so(n.nextSibling)}if(pr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){or=so(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}or=null}}else or=ar?so(e.stateNode.nextSibling):null;return!0}function fr(){for(var e=or;e;)e=so(e.nextSibling)}function mr(){or=ar=null,rr=!1}function _r(e){null===ir?ir=[e]:ir.push(e)}var gr=y.ReactCurrentBatchConfig;function hr(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(r(309));var a=t.stateNode}if(!a)throw Error(r(147,e));var o=a,i=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=o.refs;null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!=typeof e)throw Error(r(284));if(!t._owner)throw Error(r(290,e))}return e}function vr(e,n){throw e=Object.prototype.toString.call(n),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function br(e){return(0,e._init)(e._payload)}function yr(e){function n(n,t){if(e){var a=n.deletions;null===a?(n.deletions=[t],n.flags|=16):a.push(t)}}function t(t,a){if(!e)return null;for(;null!==a;)n(t,a),a=a.sibling;return null}function a(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=As(e,n)).index=0,e.sibling=null,e}function i(n,t,a){return n.index=a,e?null!==(a=n.alternate)?(a=a.index)<t?(n.flags|=2,t):a:(n.flags|=2,t):(n.flags|=1048576,t)}function c(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,a){return null===n||6!==n.tag?((n=zs(t,e.mode,a)).return=e,n):((n=o(n,t)).return=e,n)}function s(e,n,t,a){var r=t.type;return r===x?p(e,n,t.props.children,a,t.key):null!==n&&(n.elementType===r||"object"==typeof r&&null!==r&&r.$$typeof===D&&br(r)===n.type)?((a=o(n,t.props)).ref=hr(e,n,t),a.return=e,a):((a=Ts(t.type,t.key,t.props,null,e.mode,a)).ref=hr(e,n,t),a.return=e,a)}function u(e,n,t,a){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Fs(t,e.mode,a)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function p(e,n,t,a,r){return null===n||7!==n.tag?((n=Os(t,e.mode,a,r)).return=e,n):((n=o(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=zs(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return(t=Ts(n.type,n.key,n.props,null,e.mode,t)).ref=hr(e,null,n),t.return=e,t;case S:return(n=Fs(n,e.mode,t)).return=e,n;case D:return d(e,(0,n._init)(n._payload),t)}if(ne(n)||O(n))return(n=Os(n,e.mode,t,null)).return=e,n;vr(e,n)}return null}function f(e,n,t,a){var o=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==o?null:l(e,n,""+t,a);if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return t.key===o?s(e,n,t,a):null;case S:return t.key===o?u(e,n,t,a):null;case D:return f(e,n,(o=t._init)(t._payload),a)}if(ne(t)||O(t))return null!==o?null:p(e,n,t,a,null);vr(e,t)}return null}function m(e,n,t,a,o){if("string"==typeof a&&""!==a||"number"==typeof a)return l(n,e=e.get(t)||null,""+a,o);if("object"==typeof a&&null!==a){switch(a.$$typeof){case k:return s(n,e=e.get(null===a.key?t:a.key)||null,a,o);case S:return u(n,e=e.get(null===a.key?t:a.key)||null,a,o);case D:return m(e,n,t,(0,a._init)(a._payload),o)}if(ne(a)||O(a))return p(n,e=e.get(t)||null,a,o,null);vr(n,a)}return null}function _(o,r,c,l){for(var s=null,u=null,p=r,_=r=0,g=null;null!==p&&_<c.length;_++){p.index>_?(g=p,p=null):g=p.sibling;var h=f(o,p,c[_],l);if(null===h){null===p&&(p=g);break}e&&p&&null===h.alternate&&n(o,p),r=i(h,r,_),null===u?s=h:u.sibling=h,u=h,p=g}if(_===c.length)return t(o,p),rr&&Jo(o,_),s;if(null===p){for(;_<c.length;_++)null!==(p=d(o,c[_],l))&&(r=i(p,r,_),null===u?s=p:u.sibling=p,u=p);return rr&&Jo(o,_),s}for(p=a(o,p);_<c.length;_++)null!==(g=m(p,o,_,c[_],l))&&(e&&null!==g.alternate&&p.delete(null===g.key?_:g.key),r=i(g,r,_),null===u?s=g:u.sibling=g,u=g);return e&&p.forEach(function(e){return n(o,e)}),rr&&Jo(o,_),s}function g(o,c,l,s){var u=O(l);if("function"!=typeof u)throw Error(r(150));if(null==(l=u.call(l)))throw Error(r(151));for(var p=u=null,_=c,g=c=0,h=null,v=l.next();null!==_&&!v.done;g++,v=l.next()){_.index>g?(h=_,_=null):h=_.sibling;var b=f(o,_,v.value,s);if(null===b){null===_&&(_=h);break}e&&_&&null===b.alternate&&n(o,_),c=i(b,c,g),null===p?u=b:p.sibling=b,p=b,_=h}if(v.done)return t(o,_),rr&&Jo(o,g),u;if(null===_){for(;!v.done;g++,v=l.next())null!==(v=d(o,v.value,s))&&(c=i(v,c,g),null===p?u=v:p.sibling=v,p=v);return rr&&Jo(o,g),u}for(_=a(o,_);!v.done;g++,v=l.next())null!==(v=m(_,o,g,v.value,s))&&(e&&null!==v.alternate&&_.delete(null===v.key?g:v.key),c=i(v,c,g),null===p?u=v:p.sibling=v,p=v);return e&&_.forEach(function(e){return n(o,e)}),rr&&Jo(o,g),u}return function e(a,r,i,l){if("object"==typeof i&&null!==i&&i.type===x&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case k:e:{for(var s=i.key,u=r;null!==u;){if(u.key===s){if((s=i.type)===x){if(7===u.tag){t(a,u.sibling),(r=o(u,i.props.children)).return=a,a=r;break e}}else if(u.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===D&&br(s)===u.type){t(a,u.sibling),(r=o(u,i.props)).ref=hr(a,u,i),r.return=a,a=r;break e}t(a,u);break}n(a,u),u=u.sibling}i.type===x?((r=Os(i.props.children,a.mode,l,i.key)).return=a,a=r):((l=Ts(i.type,i.key,i.props,null,a.mode,l)).ref=hr(a,r,i),l.return=a,a=l)}return c(a);case S:e:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){t(a,r.sibling),(r=o(r,i.children||[])).return=a,a=r;break e}t(a,r);break}n(a,r),r=r.sibling}(r=Fs(i,a.mode,l)).return=a,a=r}return c(a);case D:return e(a,r,(u=i._init)(i._payload),l)}if(ne(i))return _(a,r,i,l);if(O(i))return g(a,r,i,l);vr(a,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==r&&6===r.tag?(t(a,r.sibling),(r=o(r,i)).return=a,a=r):(t(a,r),(r=zs(i,a.mode,l)).return=a,a=r),c(a)):t(a,r)}}var kr=yr(!0),Sr=yr(!1),xr=wo(null),Er=null,wr=null,Pr=null;function Cr(){Pr=wr=Er=null}function Rr(e){var n=xr.current;Po(xr),e._currentValue=n}function Lr(e,n,t){for(;null!==e;){var a=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==a&&(a.childLanes|=n)):null!==a&&(a.childLanes&n)!==n&&(a.childLanes|=n),e===t)break;e=e.return}}function Ir(e,n){Er=e,Pr=wr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(bc=!0),e.firstContext=null)}function Mr(e){var n=e._currentValue;if(Pr!==e)if(e={context:e,memoizedValue:n,next:null},null===wr){if(null===Er)throw Error(r(308));wr=e,Er.dependencies={lanes:0,firstContext:e}}else wr=wr.next=e;return n}var Dr=null;function Ar(e){null===Dr?Dr=[e]:Dr.push(e)}function Tr(e,n,t,a){var o=n.interleaved;return null===o?(t.next=t,Ar(n)):(t.next=o.next,o.next=t),n.interleaved=t,Or(e,a)}function Or(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Br=!1;function zr(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fr(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Nr(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Gr(e,n,t){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,2&Rl){var o=a.pending;return null===o?n.next=n:(n.next=o.next,o.next=n),a.pending=n,Or(e,t)}return null===(o=a.interleaved)?(n.next=n,Ar(a)):(n.next=o.next,o.next=n),a.interleaved=n,Or(e,t)}function qr(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,4194240&t)){var a=n.lanes;t|=a&=e.pendingLanes,n.lanes=t,bn(e,t)}}function Ur(e,n){var t=e.updateQueue,a=e.alternate;if(null!==a&&t===(a=a.updateQueue)){var o=null,r=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===r?o=r=i:r=r.next=i,t=t.next}while(null!==t);null===r?o=r=n:r=r.next=n}else o=r=n;return t={baseState:a.baseState,firstBaseUpdate:o,lastBaseUpdate:r,shared:a.shared,effects:a.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Wr(e,n,t,a){var o=e.updateQueue;Br=!1;var r=o.firstBaseUpdate,i=o.lastBaseUpdate,c=o.shared.pending;if(null!==c){o.shared.pending=null;var l=c,s=l.next;l.next=null,null===i?r=s:i.next=s,i=l;var u=e.alternate;null!==u&&(c=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===c?u.firstBaseUpdate=s:c.next=s,u.lastBaseUpdate=l)}if(null!==r){var p=o.baseState;for(i=0,u=s=l=null,c=r;;){var d=c.lane,f=c.eventTime;if((a&d)===d){null!==u&&(u=u.next={eventTime:f,lane:0,tag:c.tag,payload:c.payload,callback:c.callback,next:null});e:{var m=e,_=c;switch(d=n,f=t,_.tag){case 1:if("function"==typeof(m=_.payload)){p=m.call(f,p,d);break e}p=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(d="function"==typeof(m=_.payload)?m.call(f,p,d):m))break e;p=z({},p,d);break e;case 2:Br=!0}}null!==c.callback&&0!==c.lane&&(e.flags|=64,null===(d=o.effects)?o.effects=[c]:d.push(c))}else f={eventTime:f,lane:d,tag:c.tag,payload:c.payload,callback:c.callback,next:null},null===u?(s=u=f,l=p):u=u.next=f,i|=d;if(null===(c=c.next)){if(null===(c=o.shared.pending))break;c=(d=c).next,d.next=null,o.lastBaseUpdate=d,o.shared.pending=null}}if(null===u&&(l=p),o.baseState=l,o.firstBaseUpdate=s,o.lastBaseUpdate=u,null!==(n=o.shared.interleaved)){o=n;do{i|=o.lane,o=o.next}while(o!==n)}else null===r&&(o.shared.lanes=0);Bl|=i,e.lanes=i,e.memoizedState=p}}function Vr(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var a=e[n],o=a.callback;if(null!==o){if(a.callback=null,a=t,"function"!=typeof o)throw Error(r(191,o));o.call(a)}}}var jr={},Hr=wo(jr),$r=wo(jr),Kr=wo(jr);function Yr(e){if(e===jr)throw Error(r(174));return e}function Xr(e,n){switch(Co(Kr,n),Co($r,e),Co(Hr,jr),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Po(Hr),Co(Hr,n)}function Zr(){Po(Hr),Po($r),Po(Kr)}function Qr(e){Yr(Kr.current);var n=Yr(Hr.current),t=le(n,e.type);n!==t&&(Co($r,e),Co(Hr,t))}function Jr(e){$r.current===e&&(Po(Hr),Po($r))}var ei=wo(0);function ni(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(128&n.flags)return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ti=[];function ai(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var oi=y.ReactCurrentDispatcher,ri=y.ReactCurrentBatchConfig,ii=0,ci=null,li=null,si=null,ui=!1,pi=!1,di=0,fi=0;function mi(){throw Error(r(321))}function _i(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ca(e[t],n[t]))return!1;return!0}function gi(e,n,t,a,o,i){if(ii=i,ci=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,oi.current=null===e||null===e.memoizedState?Ji:ec,e=t(a,o),pi){i=0;do{if(pi=!1,di=0,25<=i)throw Error(r(301));i+=1,si=li=null,n.updateQueue=null,oi.current=nc,e=t(a,o)}while(pi)}if(oi.current=Qi,n=null!==li&&null!==li.next,ii=0,si=li=ci=null,ui=!1,n)throw Error(r(300));return e}function hi(){var e=0!==di;return di=0,e}function vi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===si?ci.memoizedState=si=e:si=si.next=e,si}function bi(){if(null===li){var e=ci.alternate;e=null!==e?e.memoizedState:null}else e=li.next;var n=null===si?ci.memoizedState:si.next;if(null!==n)si=n,li=e;else{if(null===e)throw Error(r(310));e={memoizedState:(li=e).memoizedState,baseState:li.baseState,baseQueue:li.baseQueue,queue:li.queue,next:null},null===si?ci.memoizedState=si=e:si=si.next=e}return si}function yi(e,n){return"function"==typeof n?n(e):n}function ki(e){var n=bi(),t=n.queue;if(null===t)throw Error(r(311));t.lastRenderedReducer=e;var a=li,o=a.baseQueue,i=t.pending;if(null!==i){if(null!==o){var c=o.next;o.next=i.next,i.next=c}a.baseQueue=o=i,t.pending=null}if(null!==o){i=o.next,a=a.baseState;var l=c=null,s=null,u=i;do{var p=u.lane;if((ii&p)===p)null!==s&&(s=s.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var d={lane:p,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===s?(l=s=d,c=a):s=s.next=d,ci.lanes|=p,Bl|=p}u=u.next}while(null!==u&&u!==i);null===s?c=a:s.next=l,ca(a,n.memoizedState)||(bc=!0),n.memoizedState=a,n.baseState=c,n.baseQueue=s,t.lastRenderedState=a}if(null!==(e=t.interleaved)){o=e;do{i=o.lane,ci.lanes|=i,Bl|=i,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Si(e){var n=bi(),t=n.queue;if(null===t)throw Error(r(311));t.lastRenderedReducer=e;var a=t.dispatch,o=t.pending,i=n.memoizedState;if(null!==o){t.pending=null;var c=o=o.next;do{i=e(i,c.action),c=c.next}while(c!==o);ca(i,n.memoizedState)||(bc=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,a]}function xi(){}function Ei(e,n){var t=ci,a=bi(),o=n(),i=!ca(a.memoizedState,o);if(i&&(a.memoizedState=o,bc=!0),a=a.queue,Bi(Ci.bind(null,t,a,e),[e]),a.getSnapshot!==n||i||null!==si&&1&si.memoizedState.tag){if(t.flags|=2048,Mi(9,Pi.bind(null,t,a,o,n),void 0,null),null===Ll)throw Error(r(349));30&ii||wi(t,n,o)}return o}function wi(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=ci.updateQueue)?(n={lastEffect:null,stores:null},ci.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Pi(e,n,t,a){n.value=t,n.getSnapshot=a,Ri(n)&&Li(e)}function Ci(e,n,t){return t(function(){Ri(n)&&Li(e)})}function Ri(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!ca(e,t)}catch(e){return!0}}function Li(e){var n=Or(e,1);null!==n&&ts(n,e,1,-1)}function Ii(e){var n=vi();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:yi,lastRenderedState:e},n.queue=e,e=e.dispatch=Ki.bind(null,ci,e),[n.memoizedState,e]}function Mi(e,n,t,a){return e={tag:e,create:n,destroy:t,deps:a,next:null},null===(n=ci.updateQueue)?(n={lastEffect:null,stores:null},ci.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(a=t.next,t.next=e,e.next=a,n.lastEffect=e),e}function Di(){return bi().memoizedState}function Ai(e,n,t,a){var o=vi();ci.flags|=e,o.memoizedState=Mi(1|n,t,void 0,void 0===a?null:a)}function Ti(e,n,t,a){var o=bi();a=void 0===a?null:a;var r=void 0;if(null!==li){var i=li.memoizedState;if(r=i.destroy,null!==a&&_i(a,i.deps))return void(o.memoizedState=Mi(n,t,r,a))}ci.flags|=e,o.memoizedState=Mi(1|n,t,r,a)}function Oi(e,n){return Ai(8390656,8,e,n)}function Bi(e,n){return Ti(2048,8,e,n)}function zi(e,n){return Ti(4,2,e,n)}function Fi(e,n){return Ti(4,4,e,n)}function Ni(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Gi(e,n,t){return t=null!=t?t.concat([e]):null,Ti(4,4,Ni.bind(null,n,e),t)}function qi(){}function Ui(e,n){var t=bi();n=void 0===n?null:n;var a=t.memoizedState;return null!==a&&null!==n&&_i(n,a[1])?a[0]:(t.memoizedState=[e,n],e)}function Wi(e,n){var t=bi();n=void 0===n?null:n;var a=t.memoizedState;return null!==a&&null!==n&&_i(n,a[1])?a[0]:(e=e(),t.memoizedState=[e,n],e)}function Vi(e,n,t){return 21&ii?(ca(t,n)||(t=gn(),ci.lanes|=t,Bl|=t,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,bc=!0),e.memoizedState=t)}function ji(e,n){var t=yn;yn=0!==t&&4>t?t:4,e(!0);var a=ri.transition;ri.transition={};try{e(!1),n()}finally{yn=t,ri.transition=a}}function Hi(){return bi().memoizedState}function $i(e,n,t){var a=ns(e);t={lane:a,action:t,hasEagerState:!1,eagerState:null,next:null},Yi(e)?Xi(n,t):null!==(t=Tr(e,n,t,a))&&(ts(t,e,a,es()),Zi(t,n,a))}function Ki(e,n,t){var a=ns(e),o={lane:a,action:t,hasEagerState:!1,eagerState:null,next:null};if(Yi(e))Xi(n,o);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=n.lastRenderedReducer))try{var i=n.lastRenderedState,c=r(i,t);if(o.hasEagerState=!0,o.eagerState=c,ca(c,i)){var l=n.interleaved;return null===l?(o.next=o,Ar(n)):(o.next=l.next,l.next=o),void(n.interleaved=o)}}catch(e){}null!==(t=Tr(e,n,o,a))&&(ts(t,e,a,o=es()),Zi(t,n,a))}}function Yi(e){var n=e.alternate;return e===ci||null!==n&&n===ci}function Xi(e,n){pi=ui=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Zi(e,n,t){if(4194240&t){var a=n.lanes;t|=a&=e.pendingLanes,n.lanes=t,bn(e,t)}}var Qi={readContext:Mr,useCallback:mi,useContext:mi,useEffect:mi,useImperativeHandle:mi,useInsertionEffect:mi,useLayoutEffect:mi,useMemo:mi,useReducer:mi,useRef:mi,useState:mi,useDebugValue:mi,useDeferredValue:mi,useTransition:mi,useMutableSource:mi,useSyncExternalStore:mi,useId:mi,unstable_isNewReconciler:!1},Ji={readContext:Mr,useCallback:function(e,n){return vi().memoizedState=[e,void 0===n?null:n],e},useContext:Mr,useEffect:Oi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ai(4194308,4,Ni.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ai(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ai(4,2,e,n)},useMemo:function(e,n){var t=vi();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var a=vi();return n=void 0!==t?t(n):n,a.memoizedState=a.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},a.queue=e,e=e.dispatch=$i.bind(null,ci,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},vi().memoizedState=e},useState:Ii,useDebugValue:qi,useDeferredValue:function(e){return vi().memoizedState=e},useTransition:function(){var e=Ii(!1),n=e[0];return e=ji.bind(null,e[1]),vi().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var a=ci,o=vi();if(rr){if(void 0===t)throw Error(r(407));t=t()}else{if(t=n(),null===Ll)throw Error(r(349));30&ii||wi(a,n,t)}o.memoizedState=t;var i={value:t,getSnapshot:n};return o.queue=i,Oi(Ci.bind(null,a,i,e),[e]),a.flags|=2048,Mi(9,Pi.bind(null,a,i,t,n),void 0,null),t},useId:function(){var e=vi(),n=Ll.identifierPrefix;if(rr){var t=Qo;n=":"+n+"R"+(t=(Zo&~(1<<32-cn(Zo)-1)).toString(32)+t),0<(t=di++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=fi++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ec={readContext:Mr,useCallback:Ui,useContext:Mr,useEffect:Bi,useImperativeHandle:Gi,useInsertionEffect:zi,useLayoutEffect:Fi,useMemo:Wi,useReducer:ki,useRef:Di,useState:function(){return ki(yi)},useDebugValue:qi,useDeferredValue:function(e){return Vi(bi(),li.memoizedState,e)},useTransition:function(){return[ki(yi)[0],bi().memoizedState]},useMutableSource:xi,useSyncExternalStore:Ei,useId:Hi,unstable_isNewReconciler:!1},nc={readContext:Mr,useCallback:Ui,useContext:Mr,useEffect:Bi,useImperativeHandle:Gi,useInsertionEffect:zi,useLayoutEffect:Fi,useMemo:Wi,useReducer:Si,useRef:Di,useState:function(){return Si(yi)},useDebugValue:qi,useDeferredValue:function(e){var n=bi();return null===li?n.memoizedState=e:Vi(n,li.memoizedState,e)},useTransition:function(){return[Si(yi)[0],bi().memoizedState]},useMutableSource:xi,useSyncExternalStore:Ei,useId:Hi,unstable_isNewReconciler:!1};function tc(e,n){if(e&&e.defaultProps){for(var t in n=z({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}function ac(e,n,t,a){t=null==(t=t(a,n=e.memoizedState))?n:z({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var oc={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var a=es(),o=ns(e),r=Nr(a,o);r.payload=n,null!=t&&(r.callback=t),null!==(n=Gr(e,r,o))&&(ts(n,e,o,a),qr(n,e,o))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var a=es(),o=ns(e),r=Nr(a,o);r.tag=1,r.payload=n,null!=t&&(r.callback=t),null!==(n=Gr(e,r,o))&&(ts(n,e,o,a),qr(n,e,o))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=es(),a=ns(e),o=Nr(t,a);o.tag=2,null!=n&&(o.callback=n),null!==(n=Gr(e,o,a))&&(ts(n,e,a,t),qr(n,e,a))}};function rc(e,n,t,a,o,r,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,r,i):!(n.prototype&&n.prototype.isPureReactComponent&&la(t,a)&&la(o,r))}function ic(e,n,t){var a=!1,o=Ro,r=n.contextType;return"object"==typeof r&&null!==r?r=Mr(r):(o=Ao(n)?Mo:Lo.current,r=(a=null!=(a=n.contextTypes))?Do(e,o):Ro),n=new n(t,r),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=oc,e.stateNode=n,n._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=r),n}function cc(e,n,t,a){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,a),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,a),n.state!==e&&oc.enqueueReplaceState(n,n.state,null)}function lc(e,n,t,a){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs={},zr(e);var r=n.contextType;"object"==typeof r&&null!==r?o.context=Mr(r):(r=Ao(n)?Mo:Lo.current,o.context=Do(e,r)),o.state=e.memoizedState,"function"==typeof(r=n.getDerivedStateFromProps)&&(ac(e,n,r,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&oc.enqueueReplaceState(o,o.state,null),Wr(e,t,o,a),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function sc(e,n){try{var t="",a=n;do{t+=q(a),a=a.return}while(a);var o=t}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:o,digest:null}}function uc(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function pc(e,n){try{console.error(n.value)}catch(e){setTimeout(function(){throw e})}}var dc="function"==typeof WeakMap?WeakMap:Map;function fc(e,n,t){(t=Nr(-1,t)).tag=3,t.payload={element:null};var a=n.value;return t.callback=function(){Vl||(Vl=!0,jl=a),pc(0,n)},t}function mc(e,n,t){(t=Nr(-1,t)).tag=3;var a=e.type.getDerivedStateFromError;if("function"==typeof a){var o=n.value;t.payload=function(){return a(o)},t.callback=function(){pc(0,n)}}var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(t.callback=function(){pc(0,n),"function"!=typeof a&&(null===Hl?Hl=new Set([this]):Hl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function _c(e,n,t){var a=e.pingCache;if(null===a){a=e.pingCache=new dc;var o=new Set;a.set(n,o)}else void 0===(o=a.get(n))&&(o=new Set,a.set(n,o));o.has(t)||(o.add(t),e=ws.bind(null,e,n,t),n.then(e,e))}function gc(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function hc(e,n,t,a,o){return 1&e.mode?(e.flags|=65536,e.lanes=o,e):(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Nr(-1,1)).tag=2,Gr(t,n,1))),t.lanes|=1),e)}var vc=y.ReactCurrentOwner,bc=!1;function yc(e,n,t,a){n.child=null===e?Sr(n,null,t,a):kr(n,e.child,t,a)}function kc(e,n,t,a,o){t=t.render;var r=n.ref;return Ir(n,o),a=gi(e,n,t,a,r,o),t=hi(),null===e||bc?(rr&&t&&nr(n),n.flags|=1,yc(e,n,a,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Vc(e,n,o))}function Sc(e,n,t,a,o){if(null===e){var r=t.type;return"function"!=typeof r||Ds(r)||void 0!==r.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Ts(t.type,null,a,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=r,xc(e,n,r,a,o))}if(r=e.child,0===(e.lanes&o)){var i=r.memoizedProps;if((t=null!==(t=t.compare)?t:la)(i,a)&&e.ref===n.ref)return Vc(e,n,o)}return n.flags|=1,(e=As(r,a)).ref=n.ref,e.return=n,n.child=e}function xc(e,n,t,a,o){if(null!==e){var r=e.memoizedProps;if(la(r,a)&&e.ref===n.ref){if(bc=!1,n.pendingProps=a=r,0===(e.lanes&o))return n.lanes=e.lanes,Vc(e,n,o);131072&e.flags&&(bc=!0)}}return Pc(e,n,t,a,o)}function Ec(e,n,t){var a=n.pendingProps,o=a.children,r=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(1&n.mode){if(!(1073741824&t))return e=null!==r?r.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Co(Al,Dl),Dl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==r?r.baseLanes:t,Co(Al,Dl),Dl|=a}else n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Co(Al,Dl),Dl|=t;else null!==r?(a=r.baseLanes|t,n.memoizedState=null):a=t,Co(Al,Dl),Dl|=a;return yc(e,n,o,t),n.child}function wc(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Pc(e,n,t,a,o){var r=Ao(t)?Mo:Lo.current;return r=Do(n,r),Ir(n,o),t=gi(e,n,t,a,r,o),a=hi(),null===e||bc?(rr&&a&&nr(n),n.flags|=1,yc(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Vc(e,n,o))}function Cc(e,n,t,a,o){if(Ao(t)){var r=!0;zo(n)}else r=!1;if(Ir(n,o),null===n.stateNode)Wc(e,n),ic(n,t,a),lc(n,t,a,o),a=!0;else if(null===e){var i=n.stateNode,c=n.memoizedProps;i.props=c;var l=i.context,s=t.contextType;s="object"==typeof s&&null!==s?Mr(s):Do(n,s=Ao(t)?Mo:Lo.current);var u=t.getDerivedStateFromProps,p="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;p||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(c!==a||l!==s)&&cc(n,i,a,s),Br=!1;var d=n.memoizedState;i.state=d,Wr(n,a,i,o),l=n.memoizedState,c!==a||d!==l||Io.current||Br?("function"==typeof u&&(ac(n,t,u,a),l=n.memoizedState),(c=Br||rc(n,t,c,a,d,l,s))?(p||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4194308)):("function"==typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=a,n.memoizedState=l),i.props=a,i.state=l,i.context=s,a=c):("function"==typeof i.componentDidMount&&(n.flags|=4194308),a=!1)}else{i=n.stateNode,Fr(e,n),c=n.memoizedProps,s=n.type===n.elementType?c:tc(n.type,c),i.props=s,p=n.pendingProps,d=i.context,l="object"==typeof(l=t.contextType)&&null!==l?Mr(l):Do(n,l=Ao(t)?Mo:Lo.current);var f=t.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(c!==p||d!==l)&&cc(n,i,a,l),Br=!1,d=n.memoizedState,i.state=d,Wr(n,a,i,o);var m=n.memoizedState;c!==p||d!==m||Io.current||Br?("function"==typeof f&&(ac(n,t,f,a),m=n.memoizedState),(s=Br||rc(n,t,s,a,d,m,l)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(a,m,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(a,m,l)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof i.componentDidUpdate||c===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||c===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=a,n.memoizedState=m),i.props=a,i.state=m,i.context=l,a=s):("function"!=typeof i.componentDidUpdate||c===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||c===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),a=!1)}return Rc(e,n,t,a,r,o)}function Rc(e,n,t,a,o,r){wc(e,n);var i=!!(128&n.flags);if(!a&&!i)return o&&Fo(n,t,!1),Vc(e,n,r);a=n.stateNode,vc.current=n;var c=i&&"function"!=typeof t.getDerivedStateFromError?null:a.render();return n.flags|=1,null!==e&&i?(n.child=kr(n,e.child,null,r),n.child=kr(n,null,c,r)):yc(e,n,c,r),n.memoizedState=a.state,o&&Fo(n,t,!0),n.child}function Lc(e){var n=e.stateNode;n.pendingContext?Oo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Oo(0,n.context,!1),Xr(e,n.containerInfo)}function Ic(e,n,t,a,o){return mr(),_r(o),n.flags|=256,yc(e,n,t,a),n.child}var Mc,Dc,Ac,Tc,Oc={dehydrated:null,treeContext:null,retryLane:0};function Bc(e){return{baseLanes:e,cachePool:null,transitions:null}}function zc(e,n,t){var a,o=n.pendingProps,i=ei.current,c=!1,l=!!(128&n.flags);if((a=l)||(a=(null===e||null!==e.memoizedState)&&!!(2&i)),a?(c=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Co(ei,1&i),null===e)return ur(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(1&n.mode?"$!"===e.data?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(l=o.children,e=o.fallback,c?(o=n.mode,c=n.child,l={mode:"hidden",children:l},1&o||null===c?c=Bs(l,o,0,null):(c.childLanes=0,c.pendingProps=l),e=Os(e,o,t,null),c.return=n,e.return=n,c.sibling=e,n.child=c,n.child.memoizedState=Bc(t),n.memoizedState=Oc,e):Fc(n,l));if(null!==(i=e.memoizedState)&&null!==(a=i.dehydrated))return function(e,n,t,a,o,i,c){if(t)return 256&n.flags?(n.flags&=-257,Nc(e,n,c,a=uc(Error(r(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(i=a.fallback,o=n.mode,a=Bs({mode:"visible",children:a.children},o,0,null),(i=Os(i,o,c,null)).flags|=2,a.return=n,i.return=n,a.sibling=i,n.child=a,1&n.mode&&kr(n,e.child,null,c),n.child.memoizedState=Bc(c),n.memoizedState=Oc,i);if(!(1&n.mode))return Nc(e,n,c,null);if("$!"===o.data){if(a=o.nextSibling&&o.nextSibling.dataset)var l=a.dgst;return a=l,Nc(e,n,c,a=uc(i=Error(r(419)),a,void 0))}if(l=0!==(c&e.childLanes),bc||l){if(null!==(a=Ll)){switch(c&-c){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!==(o&(a.suspendedLanes|c))?0:o)&&o!==i.retryLane&&(i.retryLane=o,Or(e,o),ts(a,e,o,-1))}return _s(),Nc(e,n,c,a=uc(Error(r(421))))}return"$?"===o.data?(n.flags|=128,n.child=e.child,n=Cs.bind(null,e),o._reactRetry=n,null):(e=i.treeContext,or=so(o.nextSibling),ar=n,rr=!0,ir=null,null!==e&&(Ko[Yo++]=Zo,Ko[Yo++]=Qo,Ko[Yo++]=Xo,Zo=e.id,Qo=e.overflow,Xo=n),(n=Fc(n,a.children)).flags|=4096,n)}(e,n,l,o,a,i,t);if(c){c=o.fallback,l=n.mode,a=(i=e.child).sibling;var s={mode:"hidden",children:o.children};return 1&l||n.child===i?(o=As(i,s)).subtreeFlags=14680064&i.subtreeFlags:((o=n.child).childLanes=0,o.pendingProps=s,n.deletions=null),null!==a?c=As(a,c):(c=Os(c,l,t,null)).flags|=2,c.return=n,o.return=n,o.sibling=c,n.child=o,o=c,c=n.child,l=null===(l=e.child.memoizedState)?Bc(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},c.memoizedState=l,c.childLanes=e.childLanes&~t,n.memoizedState=Oc,o}return e=(c=e.child).sibling,o=As(c,{mode:"visible",children:o.children}),!(1&n.mode)&&(o.lanes=t),o.return=n,o.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=o,n.memoizedState=null,o}function Fc(e,n){return(n=Bs({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Nc(e,n,t,a){return null!==a&&_r(a),kr(n,e.child,null,t),(e=Fc(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Gc(e,n,t){e.lanes|=n;var a=e.alternate;null!==a&&(a.lanes|=n),Lr(e.return,n,t)}function qc(e,n,t,a,o){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:a,tail:t,tailMode:o}:(r.isBackwards=n,r.rendering=null,r.renderingStartTime=0,r.last=a,r.tail=t,r.tailMode=o)}function Uc(e,n,t){var a=n.pendingProps,o=a.revealOrder,r=a.tail;if(yc(e,n,a.children,t),2&(a=ei.current))a=1&a|2,n.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Gc(e,t,n);else if(19===e.tag)Gc(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Co(ei,a),1&n.mode)switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===ni(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),qc(n,!1,o,t,r);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ni(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}qc(n,!0,t,null,r);break;case"together":qc(n,!1,null,null,void 0);break;default:n.memoizedState=null}else n.memoizedState=null;return n.child}function Wc(e,n){!(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Vc(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Bl|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(r(153));if(null!==n.child){for(t=As(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=As(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function jc(e,n){if(!rr)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var a=null;null!==t;)null!==t.alternate&&(a=t),t=t.sibling;null===a?n||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Hc(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,a=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,a|=14680064&o.subtreeFlags,a|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,a|=o.subtreeFlags,a|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=a,e.childLanes=t,n}function $c(e,n,t){var a=n.pendingProps;switch(tr(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Hc(n),null;case 1:case 17:return Ao(n.type)&&To(),Hc(n),null;case 3:return a=n.stateNode,Zr(),Po(Io),Po(Lo),ai(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(dr(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&n.flags)||(n.flags|=1024,null!==ir&&(is(ir),ir=null))),Dc(e,n),Hc(n),null;case 5:Jr(n);var o=Yr(Kr.current);if(t=n.type,null!==e&&null!=n.stateNode)Ac(e,n,t,a,o),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!a){if(null===n.stateNode)throw Error(r(166));return Hc(n),null}if(e=Yr(Hr.current),dr(n)){a=n.stateNode,t=n.type;var i=n.memoizedProps;switch(a[fo]=n,a[mo]=i,e=!!(1&n.mode),t){case"dialog":Na("cancel",a),Na("close",a);break;case"iframe":case"object":case"embed":Na("load",a);break;case"video":case"audio":for(o=0;o<Oa.length;o++)Na(Oa[o],a);break;case"source":Na("error",a);break;case"img":case"image":case"link":Na("error",a),Na("load",a);break;case"details":Na("toggle",a);break;case"input":X(a,i),Na("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!i.multiple},Na("invalid",a);break;case"textarea":oe(a,i),Na("invalid",a)}for(var l in ve(t,i),o=null,i)if(i.hasOwnProperty(l)){var s=i[l];"children"===l?"string"==typeof s?a.textContent!==s&&(!0!==i.suppressHydrationWarning&&Qa(a.textContent,s,e),o=["children",s]):"number"==typeof s&&a.textContent!==""+s&&(!0!==i.suppressHydrationWarning&&Qa(a.textContent,s,e),o=["children",""+s]):c.hasOwnProperty(l)&&null!=s&&"onScroll"===l&&Na("scroll",a)}switch(t){case"input":H(a),J(a,i,!0);break;case"textarea":H(a),ie(a);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(a.onclick=Ja)}a=o,n.updateQueue=a,null!==a&&(n.flags|=4)}else{l=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ce(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof a.is?e=l.createElement(t,{is:a.is}):(e=l.createElement(t),"select"===t&&(l=e,a.multiple?l.multiple=!0:a.size&&(l.size=a.size))):e=l.createElementNS(e,t),e[fo]=n,e[mo]=a,Mc(e,n,!1,!1),n.stateNode=e;e:{switch(l=be(t,a),t){case"dialog":Na("cancel",e),Na("close",e),o=a;break;case"iframe":case"object":case"embed":Na("load",e),o=a;break;case"video":case"audio":for(o=0;o<Oa.length;o++)Na(Oa[o],e);o=a;break;case"source":Na("error",e),o=a;break;case"img":case"image":case"link":Na("error",e),Na("load",e),o=a;break;case"details":Na("toggle",e),o=a;break;case"input":X(e,a),o=Y(e,a),Na("invalid",e);break;case"option":default:o=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},o=z({},a,{value:void 0}),Na("invalid",e);break;case"textarea":oe(e,a),o=ae(e,a),Na("invalid",e)}for(i in ve(t,o),s=o)if(s.hasOwnProperty(i)){var u=s[i];"style"===i?ge(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&pe(e,u):"children"===i?"string"==typeof u?("textarea"!==t||""!==u)&&de(e,u):"number"==typeof u&&de(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(c.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Na("scroll",e):null!=u&&b(e,i,u,l))}switch(t){case"input":H(e),J(e,a,!1);break;case"textarea":H(e),ie(e);break;case"option":null!=a.value&&e.setAttribute("value",""+V(a.value));break;case"select":e.multiple=!!a.multiple,null!=(i=a.value)?te(e,!!a.multiple,i,!1):null!=a.defaultValue&&te(e,!!a.multiple,a.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Ja)}switch(t){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Hc(n),null;case 6:if(e&&null!=n.stateNode)Tc(e,n,e.memoizedProps,a);else{if("string"!=typeof a&&null===n.stateNode)throw Error(r(166));if(t=Yr(Kr.current),Yr(Hr.current),dr(n)){if(a=n.stateNode,t=n.memoizedProps,a[fo]=n,(i=a.nodeValue!==t)&&null!==(e=ar))switch(e.tag){case 3:Qa(a.nodeValue,t,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Qa(a.nodeValue,t,!!(1&e.mode))}i&&(n.flags|=4)}else(a=(9===t.nodeType?t:t.ownerDocument).createTextNode(a))[fo]=n,n.stateNode=a}return Hc(n),null;case 13:if(Po(ei),a=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rr&&null!==or&&1&n.mode&&!(128&n.flags))fr(),mr(),n.flags|=98560,i=!1;else if(i=dr(n),null!==a&&null!==a.dehydrated){if(null===e){if(!i)throw Error(r(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(r(317));i[fo]=n}else mr(),!(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Hc(n),i=!1}else null!==ir&&(is(ir),ir=null),i=!0;if(!i)return 65536&n.flags?n:null}return 128&n.flags?(n.lanes=t,n):((a=null!==a)!=(null!==e&&null!==e.memoizedState)&&a&&(n.child.flags|=8192,1&n.mode&&(null===e||1&ei.current?0===Tl&&(Tl=3):_s())),null!==n.updateQueue&&(n.flags|=4),Hc(n),null);case 4:return Zr(),Dc(e,n),null===e&&Ua(n.stateNode.containerInfo),Hc(n),null;case 10:return Rr(n.type._context),Hc(n),null;case 19:if(Po(ei),null===(i=n.memoizedState))return Hc(n),null;if(a=!!(128&n.flags),null===(l=i.rendering))if(a)jc(i,!1);else{if(0!==Tl||null!==e&&128&e.flags)for(e=n.child;null!==e;){if(null!==(l=ni(e))){for(n.flags|=128,jc(i,!1),null!==(a=l.updateQueue)&&(n.updateQueue=a,n.flags|=4),n.subtreeFlags=0,a=t,t=n.child;null!==t;)e=a,(i=t).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return Co(ei,1&ei.current|2),n.child}e=e.sibling}null!==i.tail&&Ze()>Ul&&(n.flags|=128,a=!0,jc(i,!1),n.lanes=4194304)}else{if(!a)if(null!==(e=ni(l))){if(n.flags|=128,a=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),jc(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!rr)return Hc(n),null}else 2*Ze()-i.renderingStartTime>Ul&&1073741824!==t&&(n.flags|=128,a=!0,jc(i,!1),n.lanes=4194304);i.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=i.last)?t.sibling=l:n.child=l,i.last=l)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=Ze(),n.sibling=null,t=ei.current,Co(ei,a?1&t|2:1&t),n):(Hc(n),null);case 22:case 23:return ps(),a=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==a&&(n.flags|=8192),a&&1&n.mode?!!(1073741824&Dl)&&(Hc(n),6&n.subtreeFlags&&(n.flags|=8192)):Hc(n),null;case 24:case 25:return null}throw Error(r(156,n.tag))}function Kc(e,n){switch(tr(n),n.tag){case 1:return Ao(n.type)&&To(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return Zr(),Po(Io),Po(Lo),ai(),65536&(e=n.flags)&&!(128&e)?(n.flags=-65537&e|128,n):null;case 5:return Jr(n),null;case 13:if(Po(ei),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(r(340));mr()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Po(ei),null;case 4:return Zr(),null;case 10:return Rr(n.type._context),null;case 22:case 23:return ps(),null;default:return null}}Mc=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Dc=function(){},Ac=function(e,n,t,a){var o=e.memoizedProps;if(o!==a){e=n.stateNode,Yr(Hr.current);var r,i=null;switch(t){case"input":o=Y(e,o),a=Y(e,a),i=[];break;case"select":o=z({},o,{value:void 0}),a=z({},a,{value:void 0}),i=[];break;case"textarea":o=ae(e,o),a=ae(e,a),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof a.onClick&&(e.onclick=Ja)}for(u in ve(t,a),t=null,o)if(!a.hasOwnProperty(u)&&o.hasOwnProperty(u)&&null!=o[u])if("style"===u){var l=o[u];for(r in l)l.hasOwnProperty(r)&&(t||(t={}),t[r]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(c.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in a){var s=a[u];if(l=null!=o?o[u]:void 0,a.hasOwnProperty(u)&&s!==l&&(null!=s||null!=l))if("style"===u)if(l){for(r in l)!l.hasOwnProperty(r)||s&&s.hasOwnProperty(r)||(t||(t={}),t[r]="");for(r in s)s.hasOwnProperty(r)&&l[r]!==s[r]&&(t||(t={}),t[r]=s[r])}else t||(i||(i=[]),i.push(u,t)),t=s;else"dangerouslySetInnerHTML"===u?(s=s?s.__html:void 0,l=l?l.__html:void 0,null!=s&&l!==s&&(i=i||[]).push(u,s)):"children"===u?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(u,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(c.hasOwnProperty(u)?(null!=s&&"onScroll"===u&&Na("scroll",e),i||l===s||(i=[])):(i=i||[]).push(u,s))}t&&(i=i||[]).push("style",t);var u=i;(n.updateQueue=u)&&(n.flags|=4)}},Tc=function(e,n,t,a){t!==a&&(n.flags|=4)};var Yc=!1,Xc=!1,Zc="function"==typeof WeakSet?WeakSet:Set,Qc=null;function Jc(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Es(e,n,t)}else t.current=null}function el(e,n,t){try{t()}catch(t){Es(e,n,t)}}var nl=!1;function tl(e,n,t){var a=n.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var o=a=a.next;do{if((o.tag&e)===e){var r=o.destroy;o.destroy=void 0,void 0!==r&&el(n,t,r)}o=o.next}while(o!==a)}}function al(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var a=t.create;t.destroy=a()}t=t.next}while(t!==n)}}function ol(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function rl(e){var n=e.alternate;null!==n&&(e.alternate=null,rl(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[fo],delete n[mo],delete n[go],delete n[ho],delete n[vo]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,n,t){var a=e.tag;if(5===a||6===a)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Ja));else if(4!==a&&null!==(e=e.child))for(ll(e,n,t),e=e.sibling;null!==e;)ll(e,n,t),e=e.sibling}function sl(e,n,t){var a=e.tag;if(5===a||6===a)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==a&&null!==(e=e.child))for(sl(e,n,t),e=e.sibling;null!==e;)sl(e,n,t),e=e.sibling}var ul=null,pl=!1;function dl(e,n,t){for(t=t.child;null!==t;)fl(e,n,t),t=t.sibling}function fl(e,n,t){if(rn&&"function"==typeof rn.onCommitFiberUnmount)try{rn.onCommitFiberUnmount(on,t)}catch(e){}switch(t.tag){case 5:Xc||Jc(t,n);case 6:var a=ul,o=pl;ul=null,dl(e,n,t),pl=o,null!==(ul=a)&&(pl?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(pl?(e=ul,t=t.stateNode,8===e.nodeType?lo(e.parentNode,t):1===e.nodeType&&lo(e,t),Wn(e)):lo(ul,t.stateNode));break;case 4:a=ul,o=pl,ul=t.stateNode.containerInfo,pl=!0,dl(e,n,t),ul=a,pl=o;break;case 0:case 11:case 14:case 15:if(!Xc&&null!==(a=t.updateQueue)&&null!==(a=a.lastEffect)){o=a=a.next;do{var r=o,i=r.destroy;r=r.tag,void 0!==i&&(2&r||4&r)&&el(t,n,i),o=o.next}while(o!==a)}dl(e,n,t);break;case 1:if(!Xc&&(Jc(t,n),"function"==typeof(a=t.stateNode).componentWillUnmount))try{a.props=t.memoizedProps,a.state=t.memoizedState,a.componentWillUnmount()}catch(e){Es(t,n,e)}dl(e,n,t);break;case 21:dl(e,n,t);break;case 22:1&t.mode?(Xc=(a=Xc)||null!==t.memoizedState,dl(e,n,t),Xc=a):dl(e,n,t);break;default:dl(e,n,t)}}function ml(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Zc),n.forEach(function(n){var a=Rs.bind(null,e,n);t.has(n)||(t.add(n),n.then(a,a))})}}function _l(e,n){var t=n.deletions;if(null!==t)for(var a=0;a<t.length;a++){var o=t[a];try{var i=e,c=n,l=c;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,pl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===ul)throw Error(r(160));fl(i,c,o),ul=null,pl=!1;var s=o.alternate;null!==s&&(s.return=null),o.return=null}catch(e){Es(o,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)gl(n,e),n=n.sibling}function gl(e,n){var t=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(_l(n,e),hl(e),4&a){try{tl(3,e,e.return),al(3,e)}catch(n){Es(e,e.return,n)}try{tl(5,e,e.return)}catch(n){Es(e,e.return,n)}}break;case 1:_l(n,e),hl(e),512&a&&null!==t&&Jc(t,t.return);break;case 5:if(_l(n,e),hl(e),512&a&&null!==t&&Jc(t,t.return),32&e.flags){var o=e.stateNode;try{de(o,"")}catch(n){Es(e,e.return,n)}}if(4&a&&null!=(o=e.stateNode)){var i=e.memoizedProps,c=null!==t?t.memoizedProps:i,l=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===l&&"radio"===i.type&&null!=i.name&&Z(o,i),be(l,c);var u=be(l,i);for(c=0;c<s.length;c+=2){var p=s[c],d=s[c+1];"style"===p?ge(o,d):"dangerouslySetInnerHTML"===p?pe(o,d):"children"===p?de(o,d):b(o,p,d,u)}switch(l){case"input":Q(o,i);break;case"textarea":re(o,i);break;case"select":var f=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!i.multiple;var m=i.value;null!=m?te(o,!!i.multiple,m,!1):f!==!!i.multiple&&(null!=i.defaultValue?te(o,!!i.multiple,i.defaultValue,!0):te(o,!!i.multiple,i.multiple?[]:"",!1))}o[mo]=i}catch(n){Es(e,e.return,n)}}break;case 6:if(_l(n,e),hl(e),4&a){if(null===e.stateNode)throw Error(r(162));o=e.stateNode,i=e.memoizedProps;try{o.nodeValue=i}catch(n){Es(e,e.return,n)}}break;case 3:if(_l(n,e),hl(e),4&a&&null!==t&&t.memoizedState.isDehydrated)try{Wn(n.containerInfo)}catch(n){Es(e,e.return,n)}break;case 4:default:_l(n,e),hl(e);break;case 13:_l(n,e),hl(e),8192&(o=e.child).flags&&(i=null!==o.memoizedState,o.stateNode.isHidden=i,!i||null!==o.alternate&&null!==o.alternate.memoizedState||(ql=Ze())),4&a&&ml(e);break;case 22:if(p=null!==t&&null!==t.memoizedState,1&e.mode?(Xc=(u=Xc)||p,_l(n,e),Xc=u):_l(n,e),hl(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!p&&1&e.mode)for(Qc=e,p=e.child;null!==p;){for(d=Qc=p;null!==Qc;){switch(m=(f=Qc).child,f.tag){case 0:case 11:case 14:case 15:tl(4,f,f.return);break;case 1:Jc(f,f.return);var _=f.stateNode;if("function"==typeof _.componentWillUnmount){a=f,t=f.return;try{n=a,_.props=n.memoizedProps,_.state=n.memoizedState,_.componentWillUnmount()}catch(e){Es(a,t,e)}}break;case 5:Jc(f,f.return);break;case 22:if(null!==f.memoizedState){kl(d);continue}}null!==m?(m.return=f,Qc=m):kl(d)}p=p.sibling}e:for(p=null,d=e;;){if(5===d.tag){if(null===p){p=d;try{o=d.stateNode,u?"function"==typeof(i=o.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=d.stateNode,c=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,l.style.display=_e("display",c))}catch(n){Es(e,e.return,n)}}}else if(6===d.tag){if(null===p)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(n){Es(e,e.return,n)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;p===d&&(p=null),d=d.return}p===d&&(p=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:_l(n,e),hl(e),4&a&&ml(e);case 21:}}function hl(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(il(t)){var a=t;break e}t=t.return}throw Error(r(160))}switch(a.tag){case 5:var o=a.stateNode;32&a.flags&&(de(o,""),a.flags&=-33),sl(e,cl(e),o);break;case 3:case 4:var i=a.stateNode.containerInfo;ll(e,cl(e),i);break;default:throw Error(r(161))}}catch(n){Es(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,t){Qc=e,bl(e,n,t)}function bl(e,n,t){for(var a=!!(1&e.mode);null!==Qc;){var o=Qc,r=o.child;if(22===o.tag&&a){var i=null!==o.memoizedState||Yc;if(!i){var c=o.alternate,l=null!==c&&null!==c.memoizedState||Xc;c=Yc;var s=Xc;if(Yc=i,(Xc=l)&&!s)for(Qc=o;null!==Qc;)l=(i=Qc).child,22===i.tag&&null!==i.memoizedState?Sl(o):null!==l?(l.return=i,Qc=l):Sl(o);for(;null!==r;)Qc=r,bl(r,n,t),r=r.sibling;Qc=o,Yc=c,Xc=s}yl(e)}else 8772&o.subtreeFlags&&null!==r?(r.return=o,Qc=r):yl(e)}}function yl(e){for(;null!==Qc;){var n=Qc;if(8772&n.flags){var t=n.alternate;try{if(8772&n.flags)switch(n.tag){case 0:case 11:case 15:Xc||al(5,n);break;case 1:var a=n.stateNode;if(4&n.flags&&!Xc)if(null===t)a.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:tc(n.type,t.memoizedProps);a.componentDidUpdate(o,t.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&Vr(n,i,a);break;case 3:var c=n.updateQueue;if(null!==c){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Vr(n,c,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var s=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&t.focus();break;case"img":s.src&&(t.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var p=u.memoizedState;if(null!==p){var d=p.dehydrated;null!==d&&Wn(d)}}}break;default:throw Error(r(163))}Xc||512&n.flags&&ol(n)}catch(e){Es(n,n.return,e)}}if(n===e){Qc=null;break}if(null!==(t=n.sibling)){t.return=n.return,Qc=t;break}Qc=n.return}}function kl(e){for(;null!==Qc;){var n=Qc;if(n===e){Qc=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Qc=t;break}Qc=n.return}}function Sl(e){for(;null!==Qc;){var n=Qc;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{al(4,n)}catch(e){Es(n,t,e)}break;case 1:var a=n.stateNode;if("function"==typeof a.componentDidMount){var o=n.return;try{a.componentDidMount()}catch(e){Es(n,o,e)}}var r=n.return;try{ol(n)}catch(e){Es(n,r,e)}break;case 5:var i=n.return;try{ol(n)}catch(e){Es(n,i,e)}}}catch(e){Es(n,n.return,e)}if(n===e){Qc=null;break}var c=n.sibling;if(null!==c){c.return=n.return,Qc=c;break}Qc=n.return}}var xl,El=Math.ceil,wl=y.ReactCurrentDispatcher,Pl=y.ReactCurrentOwner,Cl=y.ReactCurrentBatchConfig,Rl=0,Ll=null,Il=null,Ml=0,Dl=0,Al=wo(0),Tl=0,Ol=null,Bl=0,zl=0,Fl=0,Nl=null,Gl=null,ql=0,Ul=1/0,Wl=null,Vl=!1,jl=null,Hl=null,$l=!1,Kl=null,Yl=0,Xl=0,Zl=null,Ql=-1,Jl=0;function es(){return 6&Rl?Ze():-1!==Ql?Ql:Ql=Ze()}function ns(e){return 1&e.mode?2&Rl&&0!==Ml?Ml&-Ml:null!==gr.transition?(0===Jl&&(Jl=gn()),Jl):0!==(e=yn)?e:e=void 0===(e=window.event)?16:Zn(e.type):1}function ts(e,n,t,a){if(50<Xl)throw Xl=0,Zl=null,Error(r(185));vn(e,t,a),2&Rl&&e===Ll||(e===Ll&&(!(2&Rl)&&(zl|=t),4===Tl&&cs(e,Ml)),as(e,a),1===t&&0===Rl&&!(1&n.mode)&&(Ul=Ze()+500,Go&&Wo()))}function as(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,r=e.pendingLanes;0<r;){var i=31-cn(r),c=1<<i,l=o[i];-1===l?0!==(c&t)&&0===(c&a)||(o[i]=mn(c,n)):l<=n&&(e.expiredLanes|=c),r&=~c}}(e,n);var a=fn(e,e===Ll?Ml:0);if(0===a)null!==t&&Ke(t),e.callbackNode=null,e.callbackPriority=0;else if(n=a&-a,e.callbackPriority!==n){if(null!=t&&Ke(t),1===n)0===e.tag?function(e){Go=!0,Uo(e)}(ls.bind(null,e)):Uo(ls.bind(null,e)),io(function(){!(6&Rl)&&Wo()}),t=null;else{switch(kn(a)){case 1:t=Je;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=an}t=Ls(t,os.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function os(e,n){if(Ql=-1,Jl=0,6&Rl)throw Error(r(327));var t=e.callbackNode;if(Ss()&&e.callbackNode!==t)return null;var a=fn(e,e===Ll?Ml:0);if(0===a)return null;if(30&a||0!==(a&e.expiredLanes)||n)n=gs(e,a);else{n=a;var o=Rl;Rl|=2;var i=ms();for(Ll===e&&Ml===n||(Wl=null,Ul=Ze()+500,ds(e,n));;)try{vs();break}catch(n){fs(e,n)}Cr(),wl.current=i,Rl=o,null!==Il?n=0:(Ll=null,Ml=0,n=Tl)}if(0!==n){if(2===n&&0!==(o=_n(e))&&(a=o,n=rs(e,o)),1===n)throw t=Ol,ds(e,0),cs(e,a),as(e,Ze()),t;if(6===n)cs(e,a);else{if(o=e.current.alternate,!(30&a||function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var a=0;a<t.length;a++){var o=t[a],r=o.getSnapshot;o=o.value;try{if(!ca(r(),o))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)||(n=gs(e,a),2===n&&(i=_n(e),0!==i&&(a=i,n=rs(e,i))),1!==n)))throw t=Ol,ds(e,0),cs(e,a),as(e,Ze()),t;switch(e.finishedWork=o,e.finishedLanes=a,n){case 0:case 1:throw Error(r(345));case 2:case 5:ks(e,Gl,Wl);break;case 3:if(cs(e,a),(130023424&a)===a&&10<(n=ql+500-Ze())){if(0!==fn(e,0))break;if(((o=e.suspendedLanes)&a)!==a){es(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ao(ks.bind(null,e,Gl,Wl),n);break}ks(e,Gl,Wl);break;case 4:if(cs(e,a),(4194240&a)===a)break;for(n=e.eventTimes,o=-1;0<a;){var c=31-cn(a);i=1<<c,(c=n[c])>o&&(o=c),a&=~i}if(a=o,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*El(a/1960))-a)){e.timeoutHandle=ao(ks.bind(null,e,Gl,Wl),a);break}ks(e,Gl,Wl);break;default:throw Error(r(329))}}}return as(e,Ze()),e.callbackNode===t?os.bind(null,e):null}function rs(e,n){var t=Nl;return e.current.memoizedState.isDehydrated&&(ds(e,n).flags|=256),2!==(e=gs(e,n))&&(n=Gl,Gl=t,null!==n&&is(n)),e}function is(e){null===Gl?Gl=e:Gl.push.apply(Gl,e)}function cs(e,n){for(n&=~Fl,n&=~zl,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-cn(n),a=1<<t;e[t]=-1,n&=~a}}function ls(e){if(6&Rl)throw Error(r(327));Ss();var n=fn(e,0);if(!(1&n))return as(e,Ze()),null;var t=gs(e,n);if(0!==e.tag&&2===t){var a=_n(e);0!==a&&(n=a,t=rs(e,a))}if(1===t)throw t=Ol,ds(e,0),cs(e,n),as(e,Ze()),t;if(6===t)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,ks(e,Gl,Wl),as(e,Ze()),null}function ss(e,n){var t=Rl;Rl|=1;try{return e(n)}finally{0===(Rl=t)&&(Ul=Ze()+500,Go&&Wo())}}function us(e){null!==Kl&&0===Kl.tag&&!(6&Rl)&&Ss();var n=Rl;Rl|=1;var t=Cl.transition,a=yn;try{if(Cl.transition=null,yn=1,e)return e()}finally{yn=a,Cl.transition=t,!(6&(Rl=n))&&Wo()}}function ps(){Dl=Al.current,Po(Al)}function ds(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,oo(t)),null!==Il)for(t=Il.return;null!==t;){var a=t;switch(tr(a),a.tag){case 1:null!=(a=a.type.childContextTypes)&&To();break;case 3:Zr(),Po(Io),Po(Lo),ai();break;case 5:Jr(a);break;case 4:Zr();break;case 13:case 19:Po(ei);break;case 10:Rr(a.type._context);break;case 22:case 23:ps()}t=t.return}if(Ll=e,Il=e=As(e.current,null),Ml=Dl=n,Tl=0,Ol=null,Fl=zl=Bl=0,Gl=Nl=null,null!==Dr){for(n=0;n<Dr.length;n++)if(null!==(a=(t=Dr[n]).interleaved)){t.interleaved=null;var o=a.next,r=t.pending;if(null!==r){var i=r.next;r.next=o,a.next=i}t.pending=a}Dr=null}return e}function fs(e,n){for(;;){var t=Il;try{if(Cr(),oi.current=Qi,ui){for(var a=ci.memoizedState;null!==a;){var o=a.queue;null!==o&&(o.pending=null),a=a.next}ui=!1}if(ii=0,si=li=ci=null,pi=!1,di=0,Pl.current=null,null===t||null===t.return){Tl=1,Ol=n,Il=null;break}e:{var i=e,c=t.return,l=t,s=n;if(n=Ml,l.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var u=s,p=l,d=p.tag;if(!(1&p.mode||0!==d&&11!==d&&15!==d)){var f=p.alternate;f?(p.updateQueue=f.updateQueue,p.memoizedState=f.memoizedState,p.lanes=f.lanes):(p.updateQueue=null,p.memoizedState=null)}var m=gc(c);if(null!==m){m.flags&=-257,hc(m,c,l,0,n),1&m.mode&&_c(i,u,n),s=u;var _=(n=m).updateQueue;if(null===_){var g=new Set;g.add(s),n.updateQueue=g}else _.add(s);break e}if(!(1&n)){_c(i,u,n),_s();break e}s=Error(r(426))}else if(rr&&1&l.mode){var h=gc(c);if(null!==h){!(65536&h.flags)&&(h.flags|=256),hc(h,c,l,0,n),_r(sc(s,l));break e}}i=s=sc(s,l),4!==Tl&&(Tl=2),null===Nl?Nl=[i]:Nl.push(i),i=c;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n,Ur(i,fc(0,s,n));break e;case 1:l=s;var v=i.type,b=i.stateNode;if(!(128&i.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==Hl&&Hl.has(b)))){i.flags|=65536,n&=-n,i.lanes|=n,Ur(i,mc(i,l,n));break e}}i=i.return}while(null!==i)}ys(t)}catch(e){n=e,Il===t&&null!==t&&(Il=t=t.return);continue}break}}function ms(){var e=wl.current;return wl.current=Qi,null===e?Qi:e}function _s(){0!==Tl&&3!==Tl&&2!==Tl||(Tl=4),null===Ll||!(268435455&Bl)&&!(268435455&zl)||cs(Ll,Ml)}function gs(e,n){var t=Rl;Rl|=2;var a=ms();for(Ll===e&&Ml===n||(Wl=null,ds(e,n));;)try{hs();break}catch(n){fs(e,n)}if(Cr(),Rl=t,wl.current=a,null!==Il)throw Error(r(261));return Ll=null,Ml=0,Tl}function hs(){for(;null!==Il;)bs(Il)}function vs(){for(;null!==Il&&!Ye();)bs(Il)}function bs(e){var n=xl(e.alternate,e,Dl);e.memoizedProps=e.pendingProps,null===n?ys(e):Il=n,Pl.current=null}function ys(e){var n=e;do{var t=n.alternate;if(e=n.return,32768&n.flags){if(null!==(t=Kc(t,n)))return t.flags&=32767,void(Il=t);if(null===e)return Tl=6,void(Il=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(t=$c(t,n,Dl)))return void(Il=t);if(null!==(n=n.sibling))return void(Il=n);Il=n=e}while(null!==n);0===Tl&&(Tl=5)}function ks(e,n,t){var a=yn,o=Cl.transition;try{Cl.transition=null,yn=1,function(e,n,t,a){do{Ss()}while(null!==Kl);if(6&Rl)throw Error(r(327));t=e.finishedWork;var o=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-cn(t),r=1<<o;n[o]=0,a[o]=-1,e[o]=-1,t&=~r}}(e,i),e===Ll&&(Il=Ll=null,Ml=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||$l||($l=!0,Ls(nn,function(){return Ss(),null})),i=!!(15990&t.flags),15990&t.subtreeFlags||i){i=Cl.transition,Cl.transition=null;var c=yn;yn=1;var l=Rl;Rl|=4,Pl.current=null,function(e,n){if(eo=jn,fa(e=da())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(a&&0!==a.rangeCount){t=a.anchorNode;var o=a.anchorOffset,i=a.focusNode;a=a.focusOffset;try{t.nodeType,i.nodeType}catch(e){t=null;break e}var c=0,l=-1,s=-1,u=0,p=0,d=e,f=null;n:for(;;){for(var m;d!==t||0!==o&&3!==d.nodeType||(l=c+o),d!==i||0!==a&&3!==d.nodeType||(s=c+a),3===d.nodeType&&(c+=d.nodeValue.length),null!==(m=d.firstChild);)f=d,d=m;for(;;){if(d===e)break n;if(f===t&&++u===o&&(l=c),f===i&&++p===a&&(s=c),null!==(m=d.nextSibling))break;f=(d=f).parentNode}d=m}t=-1===l||-1===s?null:{start:l,end:s}}else t=null}t=t||{start:0,end:0}}else t=null;for(no={focusedElem:e,selectionRange:t},jn=!1,Qc=n;null!==Qc;)if(e=(n=Qc).child,1028&n.subtreeFlags&&null!==e)e.return=n,Qc=e;else for(;null!==Qc;){n=Qc;try{var _=n.alternate;if(1024&n.flags)switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==_){var g=_.memoizedProps,h=_.memoizedState,v=n.stateNode,b=v.getSnapshotBeforeUpdate(n.elementType===n.type?g:tc(n.type,g),h);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=n.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(r(163))}}catch(e){Es(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Qc=e;break}Qc=n.return}_=nl,nl=!1}(e,t),gl(t,e),ma(no),jn=!!eo,no=eo=null,e.current=t,vl(t,e,o),Xe(),Rl=l,yn=c,Cl.transition=i}else e.current=t;if($l&&($l=!1,Kl=e,Yl=o),0===(i=e.pendingLanes)&&(Hl=null),function(e){if(rn&&"function"==typeof rn.onCommitFiberRoot)try{rn.onCommitFiberRoot(on,e,void 0,!(128&~e.current.flags))}catch(e){}}(t.stateNode),as(e,Ze()),null!==n)for(a=e.onRecoverableError,t=0;t<n.length;t++)a((o=n[t]).value,{componentStack:o.stack,digest:o.digest});if(Vl)throw Vl=!1,e=jl,jl=null,e;!!(1&Yl)&&0!==e.tag&&Ss(),1&(i=e.pendingLanes)?e===Zl?Xl++:(Xl=0,Zl=e):Xl=0,Wo()}(e,n,t,a)}finally{Cl.transition=o,yn=a}return null}function Ss(){if(null!==Kl){var e=kn(Yl),n=Cl.transition,t=yn;try{if(Cl.transition=null,yn=16>e?16:e,null===Kl)var a=!1;else{if(e=Kl,Kl=null,Yl=0,6&Rl)throw Error(r(331));var o=Rl;for(Rl|=4,Qc=e.current;null!==Qc;){var i=Qc,c=i.child;if(16&Qc.flags){var l=i.deletions;if(null!==l){for(var s=0;s<l.length;s++){var u=l[s];for(Qc=u;null!==Qc;){var p=Qc;switch(p.tag){case 0:case 11:case 15:tl(8,p,i)}var d=p.child;if(null!==d)d.return=p,Qc=d;else for(;null!==Qc;){var f=(p=Qc).sibling,m=p.return;if(rl(p),p===u){Qc=null;break}if(null!==f){f.return=m,Qc=f;break}Qc=m}}}var _=i.alternate;if(null!==_){var g=_.child;if(null!==g){_.child=null;do{var h=g.sibling;g.sibling=null,g=h}while(null!==g)}}Qc=i}}if(2064&i.subtreeFlags&&null!==c)c.return=i,Qc=c;else e:for(;null!==Qc;){if(2048&(i=Qc).flags)switch(i.tag){case 0:case 11:case 15:tl(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,Qc=v;break e}Qc=i.return}}var b=e.current;for(Qc=b;null!==Qc;){var y=(c=Qc).child;if(2064&c.subtreeFlags&&null!==y)y.return=c,Qc=y;else e:for(c=b;null!==Qc;){if(2048&(l=Qc).flags)try{switch(l.tag){case 0:case 11:case 15:al(9,l)}}catch(e){Es(l,l.return,e)}if(l===c){Qc=null;break e}var k=l.sibling;if(null!==k){k.return=l.return,Qc=k;break e}Qc=l.return}}if(Rl=o,Wo(),rn&&"function"==typeof rn.onPostCommitFiberRoot)try{rn.onPostCommitFiberRoot(on,e)}catch(e){}a=!0}return a}finally{yn=t,Cl.transition=n}}return!1}function xs(e,n,t){e=Gr(e,n=fc(0,n=sc(t,n),1),1),n=es(),null!==e&&(vn(e,1,n),as(e,n))}function Es(e,n,t){if(3===e.tag)xs(e,e,t);else for(;null!==n;){if(3===n.tag){xs(n,e,t);break}if(1===n.tag){var a=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof a.componentDidCatch&&(null===Hl||!Hl.has(a))){n=Gr(n,e=mc(n,e=sc(t,e),1),1),e=es(),null!==n&&(vn(n,1,e),as(n,e));break}}n=n.return}}function ws(e,n,t){var a=e.pingCache;null!==a&&a.delete(n),n=es(),e.pingedLanes|=e.suspendedLanes&t,Ll===e&&(Ml&t)===t&&(4===Tl||3===Tl&&(130023424&Ml)===Ml&&500>Ze()-ql?ds(e,0):Fl|=t),as(e,n)}function Ps(e,n){0===n&&(1&e.mode?(n=pn,!(130023424&(pn<<=1))&&(pn=4194304)):n=1);var t=es();null!==(e=Or(e,n))&&(vn(e,n,t),as(e,t))}function Cs(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),Ps(e,t)}function Rs(e,n){var t=0;switch(e.tag){case 13:var a=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(r(314))}null!==a&&a.delete(n),Ps(e,t)}function Ls(e,n){return $e(e,n)}function Is(e,n,t,a){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ms(e,n,t,a){return new Is(e,n,t,a)}function Ds(e){return!(!(e=e.prototype)||!e.isReactComponent)}function As(e,n){var t=e.alternate;return null===t?((t=Ms(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Ts(e,n,t,a,o,i){var c=2;if(a=e,"function"==typeof e)Ds(e)&&(c=1);else if("string"==typeof e)c=5;else e:switch(e){case x:return Os(t.children,o,i,n);case E:c=8,o|=8;break;case w:return(e=Ms(12,t,n,2|o)).elementType=w,e.lanes=i,e;case L:return(e=Ms(13,t,n,o)).elementType=L,e.lanes=i,e;case I:return(e=Ms(19,t,n,o)).elementType=I,e.lanes=i,e;case A:return Bs(t,o,i,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:c=10;break e;case C:c=9;break e;case R:c=11;break e;case M:c=14;break e;case D:c=16,a=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(n=Ms(c,t,n,o)).elementType=e,n.type=a,n.lanes=i,n}function Os(e,n,t,a){return(e=Ms(7,e,a,n)).lanes=t,e}function Bs(e,n,t,a){return(e=Ms(22,e,a,n)).elementType=A,e.lanes=t,e.stateNode={isHidden:!1},e}function zs(e,n,t){return(e=Ms(6,e,null,n)).lanes=t,e}function Fs(e,n,t){return(n=Ms(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Ns(e,n,t,a,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=hn(0),this.expirationTimes=hn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=hn(0),this.identifierPrefix=a,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Gs(e,n,t,a,o,r,i,c,l){return e=new Ns(e,n,t,c,l),1===n?(n=1,!0===r&&(n|=8)):n=0,r=Ms(3,null,null,n),e.current=r,r.stateNode=e,r.memoizedState={element:a,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},zr(r),e}function qs(e){if(!e)return Ro;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Ao(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(r(171))}if(1===e.tag){var t=e.type;if(Ao(t))return Bo(e,t,n)}return n}function Us(e,n,t,a,o,r,i,c,l){return(e=Gs(t,a,!0,e,0,r,0,c,l)).context=qs(null),t=e.current,(r=Nr(a=es(),o=ns(t))).callback=null!=n?n:null,Gr(t,r,o),e.current.lanes=o,vn(e,o,a),as(e,a),e}function Ws(e,n,t,a){var o=n.current,r=es(),i=ns(o);return t=qs(t),null===n.context?n.context=t:n.pendingContext=t,(n=Nr(r,i)).payload={element:e},null!==(a=void 0===a?null:a)&&(n.callback=a),null!==(e=Gr(o,n,i))&&(ts(e,o,i,r),qr(e,o,i)),i}function Vs(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function js(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Hs(e,n){js(e,n),(e=e.alternate)&&js(e,n)}xl=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Io.current)bc=!0;else{if(0===(e.lanes&t)&&!(128&n.flags))return bc=!1,function(e,n,t){switch(n.tag){case 3:Lc(n),mr();break;case 5:Qr(n);break;case 1:Ao(n.type)&&zo(n);break;case 4:Xr(n,n.stateNode.containerInfo);break;case 10:var a=n.type._context,o=n.memoizedProps.value;Co(xr,a._currentValue),a._currentValue=o;break;case 13:if(null!==(a=n.memoizedState))return null!==a.dehydrated?(Co(ei,1&ei.current),n.flags|=128,null):0!==(t&n.child.childLanes)?zc(e,n,t):(Co(ei,1&ei.current),null!==(e=Vc(e,n,t))?e.sibling:null);Co(ei,1&ei.current);break;case 19:if(a=0!==(t&n.childLanes),128&e.flags){if(a)return Uc(e,n,t);n.flags|=128}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),Co(ei,ei.current),a)break;return null;case 22:case 23:return n.lanes=0,Ec(e,n,t)}return Vc(e,n,t)}(e,n,t);bc=!!(131072&e.flags)}else bc=!1,rr&&1048576&n.flags&&er(n,$o,n.index);switch(n.lanes=0,n.tag){case 2:var a=n.type;Wc(e,n),e=n.pendingProps;var o=Do(n,Lo.current);Ir(n,t),o=gi(null,n,a,e,o,t);var i=hi();return n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Ao(a)?(i=!0,zo(n)):i=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,zr(n),o.updater=oc,n.stateNode=o,o._reactInternals=n,lc(n,a,e,t),n=Rc(null,n,a,!0,i,t)):(n.tag=0,rr&&i&&nr(n),yc(null,n,o,t),n=n.child),n;case 16:a=n.elementType;e:{switch(Wc(e,n),e=n.pendingProps,a=(o=a._init)(a._payload),n.type=a,o=n.tag=function(e){if("function"==typeof e)return Ds(e)?1:0;if(null!=e){if((e=e.$$typeof)===R)return 11;if(e===M)return 14}return 2}(a),e=tc(a,e),o){case 0:n=Pc(null,n,a,e,t);break e;case 1:n=Cc(null,n,a,e,t);break e;case 11:n=kc(null,n,a,e,t);break e;case 14:n=Sc(null,n,a,tc(a.type,e),t);break e}throw Error(r(306,a,""))}return n;case 0:return a=n.type,o=n.pendingProps,Pc(e,n,a,o=n.elementType===a?o:tc(a,o),t);case 1:return a=n.type,o=n.pendingProps,Cc(e,n,a,o=n.elementType===a?o:tc(a,o),t);case 3:e:{if(Lc(n),null===e)throw Error(r(387));a=n.pendingProps,o=(i=n.memoizedState).element,Fr(e,n),Wr(n,a,null,t);var c=n.memoizedState;if(a=c.element,i.isDehydrated){if(i={element:a,isDehydrated:!1,cache:c.cache,pendingSuspenseBoundaries:c.pendingSuspenseBoundaries,transitions:c.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=Ic(e,n,a,t,o=sc(Error(r(423)),n));break e}if(a!==o){n=Ic(e,n,a,t,o=sc(Error(r(424)),n));break e}for(or=so(n.stateNode.containerInfo.firstChild),ar=n,rr=!0,ir=null,t=Sr(n,null,a,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(mr(),a===o){n=Vc(e,n,t);break e}yc(e,n,a,t)}n=n.child}return n;case 5:return Qr(n),null===e&&ur(n),a=n.type,o=n.pendingProps,i=null!==e?e.memoizedProps:null,c=o.children,to(a,o)?c=null:null!==i&&to(a,i)&&(n.flags|=32),wc(e,n),yc(e,n,c,t),n.child;case 6:return null===e&&ur(n),null;case 13:return zc(e,n,t);case 4:return Xr(n,n.stateNode.containerInfo),a=n.pendingProps,null===e?n.child=kr(n,null,a,t):yc(e,n,a,t),n.child;case 11:return a=n.type,o=n.pendingProps,kc(e,n,a,o=n.elementType===a?o:tc(a,o),t);case 7:return yc(e,n,n.pendingProps,t),n.child;case 8:case 12:return yc(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(a=n.type._context,o=n.pendingProps,i=n.memoizedProps,c=o.value,Co(xr,a._currentValue),a._currentValue=c,null!==i)if(ca(i.value,c)){if(i.children===o.children&&!Io.current){n=Vc(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var l=i.dependencies;if(null!==l){c=i.child;for(var s=l.firstContext;null!==s;){if(s.context===a){if(1===i.tag){(s=Nr(-1,t&-t)).tag=2;var u=i.updateQueue;if(null!==u){var p=(u=u.shared).pending;null===p?s.next=s:(s.next=p.next,p.next=s),u.pending=s}}i.lanes|=t,null!==(s=i.alternate)&&(s.lanes|=t),Lr(i.return,t,n),l.lanes|=t;break}s=s.next}}else if(10===i.tag)c=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(c=i.return))throw Error(r(341));c.lanes|=t,null!==(l=c.alternate)&&(l.lanes|=t),Lr(c,t,n),c=i.sibling}else c=i.child;if(null!==c)c.return=i;else for(c=i;null!==c;){if(c===n){c=null;break}if(null!==(i=c.sibling)){i.return=c.return,c=i;break}c=c.return}i=c}yc(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,a=n.pendingProps.children,Ir(n,t),a=a(o=Mr(o)),n.flags|=1,yc(e,n,a,t),n.child;case 14:return o=tc(a=n.type,n.pendingProps),Sc(e,n,a,o=tc(a.type,o),t);case 15:return xc(e,n,n.type,n.pendingProps,t);case 17:return a=n.type,o=n.pendingProps,o=n.elementType===a?o:tc(a,o),Wc(e,n),n.tag=1,Ao(a)?(e=!0,zo(n)):e=!1,Ir(n,t),ic(n,a,o),lc(n,a,o,t),Rc(null,n,a,!0,e,t);case 19:return Uc(e,n,t);case 22:return Ec(e,n,t)}throw Error(r(156,n.tag))};var $s="function"==typeof reportError?reportError:function(e){console.error(e)};function Ks(e){this._internalRoot=e}function Ys(e){this._internalRoot=e}function Xs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Qs(){}function Js(e,n,t,a,o){var r=t._reactRootContainer;if(r){var i=r;if("function"==typeof o){var c=o;o=function(){var e=Vs(i);c.call(e)}}Ws(n,i,e,o)}else i=function(e,n,t,a,o){if(o){if("function"==typeof a){var r=a;a=function(){var e=Vs(i);r.call(e)}}var i=Us(n,a,e,0,null,!1,0,"",Qs);return e._reactRootContainer=i,e[_o]=i.current,Ua(8===e.nodeType?e.parentNode:e),us(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof a){var c=a;a=function(){var e=Vs(l);c.call(e)}}var l=Gs(e,0,!1,null,0,!1,0,"",Qs);return e._reactRootContainer=l,e[_o]=l.current,Ua(8===e.nodeType?e.parentNode:e),us(function(){Ws(n,l,t,a)}),l}(t,n,e,o,a);return Vs(i)}Ys.prototype.render=Ks.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(r(409));Ws(e,n,null,null)},Ys.prototype.unmount=Ks.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;us(function(){Ws(null,e,null,null)}),n[_o]=null}},Ys.prototype.unstable_scheduleHydration=function(e){if(e){var n=wn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Tn.length&&0!==n&&n<Tn[t].priority;t++);Tn.splice(t,0,e),0===t&&Fn(e)}},Sn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=dn(n.pendingLanes);0!==t&&(bn(n,1|t),as(n,Ze()),!(6&Rl)&&(Ul=Ze()+500,Wo()))}break;case 13:us(function(){var n=Or(e,1);if(null!==n){var t=es();ts(n,e,1,t)}}),Hs(e,1)}},xn=function(e){if(13===e.tag){var n=Or(e,134217728);null!==n&&ts(n,e,134217728,es()),Hs(e,134217728)}},En=function(e){if(13===e.tag){var n=ns(e),t=Or(e,n);null!==t&&ts(t,e,n,es()),Hs(e,n)}},wn=function(){return yn},Pn=function(e,n){var t=yn;try{return yn=e,n()}finally{yn=t}},Se=function(e,n,t){switch(n){case"input":if(Q(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var a=t[n];if(a!==e&&a.form===e.form){var o=So(a);if(!o)throw Error(r(90));$(a),Q(a,o)}}}break;case"textarea":re(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Re=ss,Le=us;var eu={usingClientEntryPoint:!1,Events:[yo,ko,So,Pe,Ce,ss]},nu={findFiberByHostInstance:bo,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tu={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{on=au.inject(tu),rn=au}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xs(n))throw Error(r(200));return function(e,n,t){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==a?null:""+a,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Xs(e))throw Error(r(299));var t=!1,a="",o=$s;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(a=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),n=Gs(e,1,!1,null,0,t,0,a,o),e[_o]=n.current,Ua(8===e.nodeType?e.parentNode:e),new Ks(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(r(188));throw e=Object.keys(e).join(","),Error(r(268,e))}return null===(e=je(n))?null:e.stateNode},n.flushSync=function(e){return us(e)},n.hydrate=function(e,n,t){if(!Zs(n))throw Error(r(200));return Js(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Xs(e))throw Error(r(405));var a=null!=t&&t.hydratedSources||null,o=!1,i="",c=$s;if(null!=t&&(!0===t.unstable_strictMode&&(o=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(c=t.onRecoverableError)),n=Us(n,null,e,1,null!=t?t:null,o,0,i,c),e[_o]=n.current,Ua(e),a)for(e=0;e<a.length;e++)o=(o=(t=a[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o);return new Ys(n)},n.render=function(e,n,t){if(!Zs(n))throw Error(r(200));return Js(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zs(e))throw Error(r(40));return!!e._reactRootContainer&&(us(function(){Js(null,null,e,!1,function(){e._reactRootContainer=null,e[_o]=null})}),!0)},n.unstable_batchedUpdates=ss,n.unstable_renderSubtreeIntoContainer=function(e,n,t,a){if(!Zs(t))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return Js(e,n,t,!1,a)},n.version="18.3.1-next-f1338f8080-20240426"},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},961:(e,n,t)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(551)},982:(e,n,t)=>{e.exports=t(463)}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var a=t(540),o=t(338),r=t(72),i=t.n(r),c=t(825),l=t.n(c),s=t(659),u=t.n(s),p=t(56),d=t.n(p),f=t(159),m=t.n(f),_=t(113),g=t.n(_),h=t(249),v={};function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function y(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function k(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?y(Object(t),!0).forEach(function(n){S(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):y(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function S(e,n,t){return(n=function(e){var n=function(e){if("object"!=b(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=b(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==b(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}v.styleTagTransform=g(),v.setAttributes=d(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=m(),i()(h.A,v),h.A&&h.A.locals&&h.A.locals;var x={Noise:{label:"Noise Generator",desc:"Multi-type noise generator: white, pink, brown with gate control and morphing.",params:{type:"white",gain:.3,gate:1,morph:0},audioIn:[],audioOut:["out"],ctrlIn:["gain","gate","type","morph"],ctrlOut:[]},Wavetable:{label:"Oscillator",desc:"Full-featured wavetable oscillator with FM, custom waveform editor, morphing, and ADSR breakpoint control. 512-sample LUT for high quality.",params:{freq:440,gain:.25,gate:1,pitch_range:24,fm_amount:0,fm_tracking:!1,fm_ratio:1,fm_ratio_mode:"zones",wavetables:[],current_table:0,adsr_morph:!1,attack_table:0,decay_table:1,sustain_table:2,release_table:3,editor_settings:{table_size:512,draw_mode:"sine",current_editing:0}},audioIn:["fm"],audioOut:["L","R"],ctrlIn:["freq","gain","gate","morph","table_select","pitch_cv","fm_ratio_cv"],ctrlOut:[]},SamplePlayer:{label:"Sample Player",desc:"Plays audio samples with sustain looping. Supports both single-voice and 6-voice polyphonic PSRAM modes.",params:{sample_name:"",base_note:60,pitch:1,gain:.8,loop:!1,polyphonic:!1,fileMin:1,fileMax:32,adsr_pitch_range:2,adsr_pitch_center:0,start_pos:0,end_pos:1,crossfade_ms:10,voice_allocation:"round_robin",max_voices:6,auto_load_samples:!0,max_voice_time:10},audioIn:[],audioOut:["out"],ctrlIn:["gate","pitch","pitch_env","sample_select","gain","start_pos","end_pos"],ctrlOut:[]},KickDrum:{label:"Kick Drum",desc:"Layered kick drum synthesis with multiple envelopes and flexible routing options.",params:{osc_level:.7,noise_level:.3,sample_level:0,pitch:1,output_gain:.8,sample_name:"",osc_freq:60,noise_type:"brown",envelope_routing:"per_layer",amp_attack_ms:2,amp_decay_ms:150,amp_sustain:.3,amp_release_ms:200,amp_attack_curve:"exp",amp_decay_curve:"exp",amp_release_curve:"exp",pitch_attack_ms:1,pitch_decay_ms:80,pitch_sustain:0,pitch_release_ms:100,pitch_attack_curve:"exp",pitch_decay_curve:"exp",pitch_release_curve:"linear",pitch_env_amount:2,osc_amp_attack_ms:2,osc_amp_decay_ms:150,osc_amp_sustain:.3,osc_amp_release_ms:200,osc_amp_attack_curve:"exp",osc_amp_decay_curve:"exp",osc_amp_release_curve:"exp",noise_amp_attack_ms:1,noise_amp_decay_ms:80,noise_amp_sustain:0,noise_amp_release_ms:120,noise_amp_attack_curve:"linear",noise_amp_decay_curve:"exp",noise_amp_release_curve:"exp",sample_amp_attack_ms:0,sample_amp_decay_ms:0,sample_amp_sustain:1,sample_amp_release_ms:0,sample_amp_attack_curve:"linear",sample_amp_decay_curve:"linear",sample_amp_release_curve:"linear",envelope_page:"amplitude"},audioIn:[],audioOut:["out"],ctrlIn:["gate","velocity","osc_level","noise_level","sample_level","pitch","output_gain"],ctrlOut:[]},SnareDrum:{label:"Snare Drum",desc:"Layered snare drum synthesis with dual ADSR envelopes for pitch and amplitude shaping.",params:{osc_level:.4,noise_level:.6,sample_level:0,sample_name:"",osc_freq:200,noise_type:"white",amp_attack_ms:1,amp_decay_ms:120,amp_sustain:0,amp_release_ms:150,amp_attack_curve:"exp",amp_decay_curve:"exp",amp_release_curve:"exp",pitch_attack_ms:.5,pitch_decay_ms:30,pitch_sustain:0,pitch_release_ms:50,pitch_attack_curve:"exp",pitch_decay_curve:"linear",pitch_release_curve:"linear",pitch_env_amount:.5,noise_attack_ms:2,noise_decay_ms:100,noise_sustain:.1,noise_release_ms:200,noise_attack_curve:"linear",noise_decay_curve:"exp",noise_release_curve:"exp",envelope_page:"amplitude"},audioIn:[],audioOut:["out"],ctrlIn:["gate","velocity","osc_level","noise_level","sample_level"],ctrlOut:[]},Percussion:{label:"Percussion",desc:"Chromatic percussion synthesis with triple ADSR envelopes for amplitude, pitch, and filter modulation.",params:{synth_level:.7,noise_level:.2,sample_level:0,mode:"karplus_strong",sample_name:"",amp_attack_ms:5,amp_decay_ms:200,amp_sustain:.4,amp_release_ms:300,amp_attack_curve:"linear",amp_decay_curve:"exp",amp_release_curve:"exp",pitch_attack_ms:2,pitch_decay_ms:100,pitch_sustain:0,pitch_release_ms:200,pitch_attack_curve:"exp",pitch_decay_curve:"linear",pitch_release_curve:"linear",pitch_env_amount:1,filter_attack_ms:3,filter_decay_ms:150,filter_sustain:.2,filter_release_ms:250,filter_attack_curve:"linear",filter_decay_curve:"exp",filter_release_curve:"exp",filter_env_amount:.8,envelope_page:"amplitude"},audioIn:[],audioOut:["out"],ctrlIn:["gate","velocity","pitch","synth_level","noise_level","sample_level"],ctrlOut:[]}},E={Filter:{label:"Filter",desc:"SVF: lowpass/bandpass/highpass/notch.",params:{mode:"lowpass",cutoff_hz:1200,resonance:.2,lfo_min_hz:100,lfo_max_hz:4e3,map:{cutMin:60,cutMax:16e3,resMin:0,resMax:1}},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["cutoff_hz","resonance","mode"],ctrlOut:[]},Distortion:{label:"Distortion",desc:"Waveshaping distortion with pre/post filtering. Presets: Clean, Overdrive, Fuzz, Speaker, Bitcrush. CV preset switching for rhythmic effects.",params:{preset:"overdrive",drive:2.5,tone:2e3,tone_q:.7,mix:.8,bypassMode:"toggle",presetCrossfade:0},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["drive","tone","mix","bypass","preset_cv"],ctrlOut:[]},VCA:{label:"VCA",desc:"Voltage Controlled Amplifier (gain 0..1).",params:{gain:.4},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["gain"],ctrlOut:[]},Delay:{label:"Delay",desc:"Stereo delay with tempo sync, ping-pong, freeze, and pitch-shift.",params:{time_ms:380,feedback:.35,mix:.3,pingpong:0,freeze:0,pitch_shift:1,division:1},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["time_ms","feedback","mix","pingpong","freeze","pitch_shift","division","tempo_hz"],ctrlOut:[]},CleanReverb:{label:"Reverb",desc:"Schroeder reverb with quality presets. Standard: ~28KB (40ms tails), High: ~100KB (140ms tails), Ultra: ~426KB (594ms tails). Choose quality based on patch complexity. OPI PSRAM required for ESP32-S3-WROOM-1-N16R8.",params:{mix:.25,size:.5,damp:.4,quality:"ultra"},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["mix","size","damp"],ctrlOut:[]},AudioMath:{label:"Audio Math",desc:"Multi-function audio processor: AM (amplitude modulation), crossfade, ring modulation, and vocoder - mode selectable.",params:{mode:"am",blend:.5,sensitivity:1},audioIn:["inA","inB"],audioOut:["out"],ctrlIn:["blend","sensitivity","mode"],ctrlOut:["env_follow"]},Limiter:{label:"Limiter",desc:"Audio limiter prevents clipping. Threshold 0-1, ratio 1:1 to ∞:1.",params:{threshold:.8,ratio:4,attack_ms:1,release_ms:10},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["threshold","ratio"],ctrlOut:[]},Panner:{label:"Stereo Panner",desc:"Constant-power pan; width 0..1.",params:{pan:.5,width:1},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["pan","width"],ctrlOut:[]},StereoMixer4:{label:"Stereo Mixer (4ch)",desc:"4 stereo channels with gains.",params:{g1:.35,g2:.35,g3:.35,g4:.35,master:1},audioIn:["1L","1R","2L","2R","3L","3R","4L","4R"],audioOut:["outL","outR"],ctrlIn:["g1","g2","g3","g4","master"],ctrlOut:[]},Matrix2x2:{label:"Matrix Mixer 2×2",desc:"Feedback-capable: A/B inputs → A/B outputs via 2×2 matrix.",params:{aa:1,ab:0,ba:0,bb:1},audioIn:["inAL","inAR","inBL","inBR"],audioOut:["outAL","outAR","outBL","outBR"],ctrlIn:["aa","ab","ba","bb"],ctrlOut:[]},ChorusFlangeRing:{label:"Chorus/Flange/Ring",desc:"Mod delay or ring mod; mix/feedback.",params:{mode:"chorus",rate_hz:.5,depth_ms:3,delay_ms:8,feedback:.15,mix:.35,rm_hz:40},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["rate_hz","depth_ms","delay_ms","feedback","mix","rm_hz","mode"],ctrlOut:[]},GranularSynth:{label:"Granular Synth",desc:"Memory-optimized granular synthesis with 4 grains and 0.5s buffer.",params:{grain_density:6,grain_size_ms:40,position:.5,position_spread:.2,pitch:0,pitch_spread:.1,envelope:"hann",dry_wet:1},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["grain_density","grain_size_ms","position","pitch","dry_wet"],ctrlOut:[]},GranularDense:{label:"Granular Dense",desc:"Dense granular synthesis with 20 concurrent 32ms grains. Alternating grains reversed, stereo spread, cloud panning. Supports 1-4 grouped pitch CV inputs with optional grouped panning. CPU: ~76% at max density (round-robin processing + envelope table lookup).",params:{grain_density:15,position:.5,position_spread:.3,pitch:0,pitch_spread:.1,envelope:"hann",dry_wet:1,freeze:0,stereo_width:.5,cloud_pan:.5,grouped_panning:0},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["grain_density","position","pitch","dry_wet","freeze","stereo_width","cloud_pan","pitch_cv_1","pitch_cv_2","pitch_cv_3","pitch_cv_4"],ctrlOut:[]},NoiseGate:{label:"Noise Gate",desc:"Gate with threshold and sidechain. Blocks audio below threshold, with gate output for triggering.",params:{threshold:.1,attack_ms:1,release_ms:50,ratio:10},audioIn:["inL","inR","sidechainL","sidechainR"],audioOut:["outL","outR"],ctrlIn:["threshold","attack_ms","release_ms"],ctrlOut:["gate"]},EQ8:{label:"8-Band EQ",desc:"Graphic EQ (8 peaking bands).",params:{b1:0,b2:0,b3:0,b4:0,b5:0,b6:0,b7:0,b8:0},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["b1","b2","b3","b4","b5","b6","b7","b8"],ctrlOut:[]},Resonance:{label:"Resonance",desc:"Resonant object exploration: impulse response capture, FFT analysis, auto-tuning to detected frequencies. Requires v2.0 hardware (contact mic, exciter, gyroscope).",params:{mode:"discovery",fftSize:8192,impulseLength:1e3,sweepDuration:1e4,sweepStart:20,sweepEnd:1e4,threshold:-60,maxPeaks:16,objectSlot:0,autoTune:!0,hapticEnable:!1,gyroSensitivity:1,hapticIntensity:.5},audioIn:["contactMic"],audioOut:["exciter"],ctrlIn:["trigger","mode_select","object_select","sensitivity","intensity"],ctrlOut:["freq1","freq2","freq3","freq4","freq5","freq6","freq7","freq8","analysis_complete","resonance_strength"]},Looper:{label:"Looper",desc:"Advanced looper with overdubbing, Frippertronics decay, reverse, and tape speed control. Up to 20s using PSRAM.",params:{mix:1,playback_gain:1,fade_ms:10,overdub_gain:.8},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["record","decay","reverse","speed"],ctrlOut:["position","length","state","led"]}},w={LineIn:{label:"Stereo In",desc:"PCM1802 ADC stereo line input with gain control. Uses GPIO16 MCLK (required). MCP23017 GPB2/GPB3=LOW enables line input.",params:{pin_din:8,pin_mclk:16,gain:2,dc_block:!0,rate:44100},audioIn:[],audioOut:["L","R"],ctrlIn:["gain"],ctrlOut:[]},I2SOut:{label:"Stereo Out",desc:"I²S DAC output (stereo)",params:{pin_bck:15,pin_lrck:17,pin_data:18,rate:44100},audioIn:["L","R"],audioOut:[],ctrlIn:[],ctrlOut:[]},SDPlayer:{label:"SD Player",desc:"Streams 16-bit WAV (44.1k) from /sd (SPI).",params:{sck:41,miso:14,mosi:45,cs:16,mount:"/sd",fileMin:1,fileMax:32,loop:!0,gain:.8},audioIn:[],audioOut:["L","R"],ctrlIn:["trig","stop","gain","file_index"],ctrlOut:[]}},P={ADSR:{label:"ADSR",desc:"Advanced envelope generator with ADSR and freeform modes, looping, and timescale control.",params:{attack_ms:50,decay_ms:200,sustain:.7,release_ms:300,loop_mode:"oneshot",timescale:1,trigger_mode:"gate",breakpoints:[{time:0,level:0,curve:.5},{time:.1,level:1,curve:.3},{time:.3,level:.7,curve:.7},{time:.8,level:.7,curve:.5},{time:1,level:0,curve:.8}]},audioIn:[],audioOut:[],ctrlIn:["gate","trigger","attack_ms","decay_ms","sustain","release_ms","timescale"],ctrlOut:["env"]},LFO:{label:"LFO",desc:"Low Frequency Oscillator with clock sync.",params:{rate_hz:1,wave:"sine",sync_to_clock:!1,clock_div:4,phase:0,depth:1,offset:0},audioIn:[],audioOut:[],ctrlIn:["rate_hz","wave","depth","offset","clock"],ctrlOut:["out"]},Scale:{label:"Scale",desc:"Quantise control → musical scale/tuning with CV control of scale and tuning.",params:{tuning:"12-TET",scale:"major",root_note:"C",octave_range:2,base_octave:4,snap_amount:1},audioIn:[],audioOut:[],ctrlIn:["in","tuning_cv","scale_cv"],ctrlOut:["out"]},Automation:{label:"Automation",desc:"Records and loops control automation. Long-press encoder button (>1s) to record pot/button movements. Dynamically expands inputs - connect to add more ports.",params:{buffer_size:1e3,recording:!1,playing:!1,loop:!0,num_inputs:4},audioIn:[],audioOut:[],ctrlIn:["in_1","in_2","in_3","in_4","in_5","in_6","in_7","in_8","record_trigger","mode_select","clock"],ctrlOut:["out_1","out_2","out_3","out_4","out_5","out_6","out_7","out_8"]},Modulation:{label:"Modulation (4×LFO)",desc:"4 LFOs; map rates or keep static.",params:{rate1_hz:1,rate2_hz:.5,rate3_hz:2,rate4_hz:4},audioIn:[],audioOut:[],ctrlIn:["rate1","rate2","rate3","rate4"],ctrlOut:["lfo1","lfo2","lfo3","lfo4"]},Clock:{label:"Clock (8-out)",desc:"8-output clock divider/multiplier like Pamela's NEW Workout. Algorithmic sequencing.",params:{bpm:120,swing:0,follow_midi:!0,bpm_min:30,bpm_max:600,output_select:1,division_select:1,running:!0,div1:1,div2:2,div3:4,div4:8,div5:2,div6:3,div7:4,div8:8},audioIn:[],audioOut:[],ctrlIn:["bpm_input","output_select","division_select","start_stop"],ctrlOut:["out1","out2","out3","out4","out5","out6","out7","out8","master_phase","master_pulse"]},HarmonicSequencer:{label:"Harmonic Sequencer",desc:"4-step hardware sequencer with banking integration and melodic patterns.",params:{start_bank:1,running:!1,current_step:0,loop_start:0,loop_end:3,loop_active:!1,bpm:120,clock_div:4,swing:0,gate_length:.7,steps:[{pitch:0,duration:1,muted:!1,active:!0,pattern:"octave",interval:12,probability:1,patternProbability:1,chordIntervals:[0,12],chordDiatonic:!0},{pitch:.25,duration:1,muted:!1,active:!0,pattern:"up_down",interval:3,probability:1,patternProbability:1,chordIntervals:[0,4,7],chordDiatonic:!0},{pitch:.5,duration:1,muted:!1,active:!0,pattern:"chord",interval:4,probability:1,patternProbability:1,chordIntervals:[0,4,7,11],chordDiatonic:!0},{pitch:.75,duration:1,muted:!1,active:!0,pattern:"static",interval:1,probability:1,patternProbability:1,chordIntervals:[0,7],chordDiatonic:!1}],hardware_pots:[1,2,3,4],hardware_btns:[1,2,3,4],scale_connected:!1,scale_root:"C",scale_type:"major",octave_center:4,show_individual_outputs:!1,sum_output_enabled:!0,individual_outputs_enabled:!1,playback_mode:"iteration",harmonic_linking:!1,harmonic_follow_steps:[-1,-1,-1,-1],harmonic_intervals:[7,7,7,7],pattern_enabled:!1},audioIn:[],audioOut:[],ctrlIn:["clock","start_stop","gate","swing","gate_length","bpm","clock_div"],ctrlOut:["pitch_sum","pitch_hz","gate_sum","pitch_step1","pitch_step1_hz","gate_step1","pitch_step2","pitch_step2_hz","gate_step2","pitch_step3","pitch_step3_hz","gate_step3","pitch_step4","pitch_step4_hz","gate_step4","current_step_cv","current_bank_cv","running","loop_active"]},GateGen:{label:"Gate Generator",desc:"Clock-triggered gate with built-in Sample & Hold and optional gate input for manual control.",params:{gate_length:.8,retrigger:!0,self_clock_bpm:120,use_self_clock:!0,probability:1,sh_enabled:!0,gate_control:!1},audioIn:[],audioOut:[],ctrlIn:["clock","gate_input","gate_length","self_clock_bpm","probability","sh_input"],ctrlOut:["gate","sh_output","rate"]},Invert:{label:"Invert",desc:"Inverts control signals (1-x). Useful for inverting gates, envelopes, LFOs, etc.",params:{offset:0,scale:1},audioIn:[],audioOut:[],ctrlIn:["in","offset","scale"],ctrlOut:["out"]}},C={Pot:{label:"Pot",desc:"Analog pot (0..1). Banked; smoothing kills jitter.",params:{pin:7,bank:1,index:1,locked:!1,smooth:.2,avgN:4,debug:!1},audioIn:[],audioOut:[],ctrlIn:[],ctrlOut:["value"]},LEDButton:{label:"Button",desc:"Momentary + LED. Debounced, banked.",params:{pin:0,ledPin:6,bank:1,index:1,locked:!1,debug:!1,mode:"latching",toggleValues:[100,50],sampleHold:!1},audioIn:[],audioOut:[],ctrlIn:["led","sampleIn"],ctrlOut:["press","gate","value","sampleOut"]},GateIn:{label:"Gate In",desc:"External gate/trigger input via LTV816 optoisolator. Select Gate In 1 or 2.",params:{index:1,debounce_ms:5,mode:"trigger",locked:!1},audioIn:[],audioOut:[],ctrlIn:[],ctrlOut:["gate","trigger"]},MIDIIn:{label:"MIDI In",desc:"UART MIDI input via TLP2361 optocoupler. Outputs: note (0-1 CV), gate, velocity (0-1).",params:{channel:0},audioIn:[],audioOut:[],ctrlIn:[],ctrlOut:["note","gate","velocity"]},MIDIOut:{label:"MIDI Out",desc:"UART MIDI output. Note and multiple CC outputs with dynamic port expansion (like Automation module). TX=GPIO43.",params:{channel:1,num_cc:1,cc_numbers:[1,2,3,4,5,6,7,8]},audioIn:[],audioOut:[],ctrlIn:["note","gate","velocity","cc_1","cc_2","cc_3","cc_4","cc_5","cc_6","cc_7","cc_8"],ctrlOut:[]}},R=k(k(k({},x),E),w),L=k(k(k({},R),P),C),I={AUDIO_SOURCES:Object.keys(x),AUDIO_EFFECTS:Object.keys(E),AUDIO_IO:Object.keys(w),CTRL:Object.keys(P),HW:Object.keys(C)},M=["I2SOut"],D=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];if(!L[e])throw new Error("Unknown module type: ".concat(e));if(!function(e,n){return!M.includes(e)||!n.some(function(n){return n.type===e})}(e,a))throw new Error("Only one ".concat(e," module allowed"));var o=JSON.parse(JSON.stringify(L[e].params)),r=T(e,a),i=null!==n&&null!==t?{x:n,y:t}:function(e,n){var t=L[e];if(!t)return{x:100,y:100};var a,o,r=140,i=0===t.audioIn.length&&t.audioOut.length>0,c=t.audioIn.length>0&&0===t.audioOut.length,l=t.audioIn.length>0&&t.audioOut.length>0,s=t.ctrlOut.length>0&&0===t.audioOut.length,u="Pot"===e||"LEDButton"===e||"Encoder"===e||"MIDIIn"===e,p=n.filter(function(e){var n=L[e.type];return n&&0===n.audioIn.length&&n.audioOut.length>0}).length,d=n.filter(function(e){var n=L[e.type];return n&&n.audioIn.length>0&&n.audioOut.length>0}).length,f=n.filter(function(e){var n=L[e.type];return n&&n.audioIn.length>0&&0===n.audioOut.length}).length,m=n.filter(function(e){var n=L[e.type];return n&&n.ctrlOut.length>0&&0===n.audioOut.length}).length,_=n.filter(function(e){return"Pot"===e.type||"LEDButton"===e.type||"Encoder"===e.type||"MIDIIn"===e.type}).length;if(u){console.log("Positioning hardware ".concat(e,", existing hardware count: ").concat(_)),console.log("Existing nodes:",n.map(function(e){return"".concat(e.type,"(").concat(e.x,",").concat(e.y,")")}));for(var g=!1,h=function(){var t=b[v];if(!n.some(function(e){return Math.abs(e.x-t.x)<80&&Math.abs(e.y-t.y)<80}))return a=t.x,o=t.y,g=!0,console.log("Hardware positioning: ".concat(e," found open spot at (").concat(a,", ").concat(o,")")),1},v=0,b=[{x:50,y:200},{x:50,y:300},{x:150,y:50},{x:400,y:50},{x:450,y:100},{x:600,y:100},{x:700,y:100},{x:450,y:300},{x:600,y:300},{x:150,y:400},{x:350,y:400},{x:550,y:400}];v<b.length&&!h();v++);g||(a=800+_%3*150,o=100+120*Math.floor(_/3),console.log("Hardware positioning: ".concat(e," using fallback at (").concat(a,", ").concat(o,")")))}else i?(a=100,o=80+p*r):l?(a=540,o=80+d*r):c?(a=980,o=80+f*r):s?(a=320,o=80+m*r):(a=760,o=80+n.length*r);return{x:a,y:o}}(e,a);if("Pot"===e||"LEDButton"===e){var c=a.filter(function(n){return n.type===e}),l=A(c,e,a);o.index=l.index,o.bank=l.bank}if("HarmonicSequencer"===e){var s=a.find(function(e){return"HarmonicSequencer"===e.type});if(s){var u,p=(null===(u=s.params)||void 0===u?void 0:u.start_bank)||1;o.start_bank=p<6?p+1:1}else o.start_bank=z(o.step_count||4,a)}return{id:r,type:e,x:i.x,y:i.y,params:o}},A=function(e,n,t){for(var a=t.some(function(e){return"HarmonicSequencer"===e.type})?2:1,o={},r=1;r<=4;r++)o[r]=[];var i=new Set;if(e.forEach(function(e){var n,t,a,r=(null===(n=e.params)||void 0===n?void 0:n.index)||1,c=(null===(t=e.params)||void 0===t?void 0:t.bank)||1,l=(null===(a=e.params)||void 0===a?void 0:a.locked)||!1;r>=1&&r<=4&&(l?i.add(r):o[r].push(c))}),e.length>=24)throw new Error("Cannot create more ".concat(n," modules. Hardware limit reached: ").concat(24," virtual ").concat(n,"s maximum (").concat(4," physical × ").concat(6," banks)"));for(var c=a;c<=6;c++)for(var l=1;l<=4;l++)if(!i.has(l)&&!o[l].includes(c))return{index:l,bank:c};throw new Error("Internal error: No available hardware slot found for ".concat(n))},T=function(e,n){var t=n.filter(function(n){return n.type===e}).reduce(function(n,t){var a=t.id.match(new RegExp("^".concat(e,"(\\d+)$"))),o=a?parseInt(a[1]):0;return Math.max(n,o)},0);return"".concat(e).concat(t+1)},O=function(e){var n,t=L[e.type];if(!t)return{left:[],right:[]};var a=t.audioIn,o=t.audioOut,r=t.ctrlIn,i=t.ctrlOut;if("HarmonicSequencer"!==e.type||null!==(n=e.params)&&void 0!==n&&n.show_individual_outputs||(i=i.filter(function(e){return"pitch_sum"===e||"pitch_hz"===e||"gate_sum"===e||"current_step"===e||"current_bank"===e})),"Automation"===e.type){var c,l=(null===(c=e.params)||void 0===c?void 0:c.num_inputs)||1;r=r.filter(function(e,n){return"record_trigger"===e||parseInt(e.split("_")[1])<=l}),i=i.filter(function(e){return parseInt(e.split("_")[1])<=l})}if("MIDIOut"===e.type){var s,u=(null===(s=e.params)||void 0===s?void 0:s.num_cc)||1;r=r.filter(function(e){return"note"===e||"gate"===e||"velocity"===e||!e.startsWith("cc_")||parseInt(e.split("_")[1])<=u})}var p=Math.max(80,20*Math.max(a.length+r.length,o.length+i.length)+40),d=[],f=[],m=e.y+25+10,_=e.y+25+10;a.forEach(function(n){d.push({kind:"audio",side:"left",id:"".concat(e.id,":").concat(n),port:n,x:e.x,y:m}),m+=18}),r.forEach(function(n){d.push({kind:"ctrl",side:"left",id:"".concat(e.id,":").concat(n),port:n,x:e.x,y:m}),m+=18});var g=e.x+140;return o.forEach(function(n){f.push({kind:"audio",side:"right",id:"".concat(e.id,":").concat(n),port:n,x:g,y:_}),_+=18}),i.forEach(function(n){f.push({kind:"ctrl",side:"right",id:"".concat(e.id,":").concat(n),port:n,x:g,y:_}),_+=18}),{left:d,right:f,width:140,height:p,head:25}},B=function(e,n,t){for(var a=n,o=[],r=function(e){var n=t.filter(function(n){var t;return("Pot"===n.type||"LEDButton"===n.type)&&((null===(t=n.params)||void 0===t?void 0:t.bank)||1)===e});n.length>0&&o.push({bank:e,modules:n})},i=n;i<=a;i++)r(i);return{banksRequired:1,endBank:a,conflicts:o,isValid:a<=6&&0===o.length}},z=function(e,n){for(var t=1;t<=6;t++)if(B(0,t,n).isValid)return t;return 1},F={metadata:{label:"Looper",desc:"Advanced looper with overdubbing, Frippertronics decay, reverse, and tape speed control. Up to 20s using PSRAM.",params:{mix:1,playback_gain:1,fade_ms:10,overdub_gain:.8},audioIn:["inL","inR"],audioOut:["outL","outR"],ctrlIn:["record","decay","reverse","speed"],ctrlOut:["position","length","state","led"]},generateClass:function(e,n){return"\nclass Looper_".concat(e," {\nprivate:\n  static constexpr int MAX_LOOP_SAMPLES = ").concat(882e3,";\n  \n  // Simple looper state\n  float* bufferL = nullptr;\n  float* bufferR = nullptr;\n  int bufferSize = 0;        // Actual allocated buffer size \n  int length = 0;            // Recorded loop length\n  int writePos = 0;          // Current write position\n  float readPosFloat = 0.0f; // Current read position (float for smooth playback)\n  \n  enum State { EMPTY, RECORDING, PLAYING, OVERDUBBING, MUTED } state = EMPTY;\n\n  // Parameters\n  float mix = ").concat((n.mix||1).toFixed(1),"f;\n  float playbackGain = ").concat((n.playback_gain||2).toFixed(1),"f;\n  float overdubGain = ").concat((n.overdub_gain||.8).toFixed(1),'f;\n\n  // Control inputs\n  float recordButton = 0.0f;\n  float lastRecordButton = 0.0f;\n  float decayControl = 1.0f;      // 0.0-1.0: decay rate (1.0 = no decay, 0.0 = fast decay)\n  float reverseControl = 0.0f;    // 0.0 = forward, 1.0 = reverse\n  float speedControl = 0.5f;      // 0.0-1.0: maps to speed range (0.5 = 1.0x normal speed)\n\n  // Playback direction\n  float playbackDirection = 1.0f; // 1.0 = forward, -1.0 = reverse\n\n  // Button timing for long-press clear detection\n  unsigned long buttonPressTime = 0;\n  bool longPressHandled = false;\n  \npublic:\n  float outL = 0.0f;\n  float outR = 0.0f;\n  float positionOut = 0.0f;\n  float lengthOut = 0.0f;\n  float stateOut = 0.0f;\n  float ledOut = 0.0f;  // LED control output\n\n  void init() {\n    // Try to allocate PSRAM buffer\n    bufferL = (float*)ps_malloc(MAX_LOOP_SAMPLES * sizeof(float));\n    bufferR = (float*)ps_malloc(MAX_LOOP_SAMPLES * sizeof(float));\n    \n    if (!bufferL || !bufferR) {\n      Serial.println("Looper_').concat(e,': PSRAM allocation failed, using smaller SRAM fallback");\n      // Fall back to smaller SRAM buffer\n      if (bufferL) { free(bufferL); bufferL = nullptr; }\n      if (bufferR) { free(bufferR); bufferR = nullptr; }\n      \n      int fallbackSize = 44100; // 1 second\n      bufferL = (float*)malloc(fallbackSize * sizeof(float));\n      bufferR = (float*)malloc(fallbackSize * sizeof(float));\n      bufferSize = fallbackSize;\n    } else {\n      bufferSize = MAX_LOOP_SAMPLES;\n      Serial.printf("Looper_').concat(e,': Allocated %.1f seconds of PSRAM\\n", (float)bufferSize / 44100.0);\n    }\n    \n    // Clear buffers\n    if (bufferL && bufferR) {\n      memset(bufferL, 0, bufferSize * sizeof(float));\n      memset(bufferR, 0, bufferSize * sizeof(float));\n    }\n  }\n\n  void setControl(int index, float value) {\n    switch(index) {\n      case 0: // record button\n        recordButton = value;\n        break;\n      case 1: // decay control\n        decayControl = constrain(value, 0.0f, 1.0f);\n        break;\n      case 2: // reverse control\n        reverseControl = constrain(value, 0.0f, 1.0f);\n        break;\n      case 3: // speed control\n        speedControl = constrain(value, 0.0f, 1.0f);\n        break;\n    }\n  }\n\n  void process(float inL, float inR) {\n    // Simple tap-to-record/tap-to-play behavior\n    \n    // Debug button state periodically\n    static unsigned long lastDebug = 0;\n    static float lastRecordButtonDebug = -1;\n    if (recordButton != lastRecordButtonDebug || millis() - lastDebug > 2000) {\n      lastDebug = millis();\n      lastRecordButtonDebug = recordButton;\n      Serial.print("LOOPER DEBUG - recordButton: ");\n      Serial.print(recordButton);\n      Serial.print(", state: ");\n      Serial.println(state == EMPTY ? "EMPTY" : (state == RECORDING ? "RECORDING" : (state == PLAYING ? "PLAYING" : (state == OVERDUBBING ? "OVERDUBBING" : "MUTED"))));\n    }\n    \n    // Handle button press events - detect rising edge to prevent multiple triggers per buffer\n    bool buttonPressed = (recordButton > 0.5f && lastRecordButton <= 0.5f);  // Rising edge only\n    bool buttonReleased = (recordButton <= 0.5f && lastRecordButton > 0.5f); // Falling edge\n\n    // Track button press/release for long-press detection\n    if (buttonPressed) {\n      buttonPressTime = millis();\n      longPressHandled = false;\n      Serial.println("LOOPER: Button pressed");\n    }\n\n    // Long press detection (>1000ms) - Clear loop on RELEASE after long press\n    if (buttonReleased && !longPressHandled && (millis() - buttonPressTime > 1000)) {\n      Serial.println("LOOPER: Long press released - clearing loop");\n      state = EMPTY;\n      length = 0;\n      writePos = 0;\n      readPosFloat = 0.0f;\n      longPressHandled = true;\n    }\n\n    // Short press state machine - trigger on button PRESS (for tap-to-toggle)\n    // But check on RELEASE that it wasn\'t a long press\n    if (buttonReleased && (millis() - buttonPressTime <= 1000)) {\n      Serial.println("LOOPER: Short press detected");\n\n      // State machine: EMPTY → RECORDING → PLAYING → OVERDUBBING → PLAYING → MUTED → PLAYING\n      if (state == EMPTY) {\n        // Start recording\n        state = RECORDING;\n        writePos = 0;\n        length = 0;\n        Serial.println("LOOPER: Starting recording");\n      } else if (state == RECORDING) {\n        // Stop recording, start playing\n        state = PLAYING;\n        length = writePos;\n        readPosFloat = 0.0f;\n        Serial.printf("LOOPER: Stopping recording, recorded %d samples (%.1fs), starting playback\\n",\n                     length, (float)length / 44100.0);\n      } else if (state == PLAYING) {\n        // Enter overdub mode\n        state = OVERDUBBING;\n        writePos = (int)readPosFloat; // Sync write position to current playback position\n        Serial.println("LOOPER: Entering overdub mode");\n      } else if (state == OVERDUBBING) {\n        // Exit overdub, return to playing\n        state = PLAYING;\n        Serial.println("LOOPER: Exiting overdub mode, returning to playback");\n      } else if (state == MUTED) {\n        // Unmute playback\n        state = PLAYING;\n        readPosFloat = 0.0f; // Restart from beginning\n        Serial.println("LOOPER: Unmuting playback");\n      }\n    }\n\n    lastRecordButton = recordButton;\n\n    float wetL = 0.0f;\n    float wetR = 0.0f;\n\n    // Recording - auto-stop at buffer limit\n    if (state == RECORDING && bufferL && bufferR) {\n      if (writePos < bufferSize) {\n        bufferL[writePos] = inL;\n        bufferR[writePos] = inR;\n        writePos++;\n      } else {\n        // Buffer full - auto-stop and start playing\n        state = PLAYING;\n        length = writePos;\n        readPosFloat = 0.0f;\n        Serial.printf("LOOPER: Buffer full at %d samples (%.1fs), auto-stopping and starting playback\\n",\n                     length, (float)length / 44100.0);\n      }\n    }\n\n    // Overdubbing - add new audio to existing loop\n    if (state == OVERDUBBING && bufferL && bufferR && length > 0) {\n      // Sync write position to read position\n      writePos = (int)readPosFloat;\n\n      if (writePos < length) {\n        // Add incoming audio to buffer (overdub) with gain control\n        bufferL[writePos] += inL * overdubGain;\n        bufferR[writePos] += inR * overdubGain;\n      }\n    }\n    \n    // Calculate playback speed with octave detents\n    // Map speedControl (0.0-1.0) to speed range:\n    // 0.0 = 0.25x (-2 octaves), 0.25 = 0.5x (-1 octave), 0.5 = 1.0x (normal), 0.75 = 2.0x (+1 octave), 1.0 = 4.0x (+2 octaves)\n    float targetSpeed = 1.0f;\n    if (speedControl < 0.5f) {\n      // Range 0.0-0.5 maps to 0.25x-1.0x\n      targetSpeed = 0.25f + (speedControl * 2.0f) * 0.75f;\n    } else {\n      // Range 0.5-1.0 maps to 1.0x-4.0x\n      targetSpeed = 1.0f + ((speedControl - 0.5f) * 2.0f) * 3.0f;\n    }\n\n    // Apply detents (snap zones) around key ratios\n    const float detentStrength = 0.05f; // 5% snap zone\n    float detents[] = {0.25f, 0.5f, 1.0f, 2.0f, 4.0f};\n    for (int i = 0; i < 5; i++) {\n      if (fabs(targetSpeed - detents[i]) < detents[i] * detentStrength) {\n        targetSpeed = detents[i];\n        break;\n      }\n    }\n\n    // Determine playback direction\n    playbackDirection = (reverseControl > 0.5f) ? -1.0f : 1.0f;\n\n    // Playback with speed and direction control (PLAYING or OVERDUBBING)\n    if ((state == PLAYING || state == OVERDUBBING) && length > 0 && bufferL && bufferR) {\n      // Linear interpolation for smooth speed changes\n      int idx0 = (int)readPosFloat;\n      int idx1 = (idx0 + 1) % length;\n      float frac = readPosFloat - idx0;\n\n      // Ensure indices are within bounds\n      if (idx0 >= 0 && idx0 < length && idx1 >= 0 && idx1 < length) {\n        wetL = bufferL[idx0] * (1.0f - frac) + bufferL[idx1] * frac;\n        wetR = bufferR[idx0] * (1.0f - frac) + bufferR[idx1] * frac;\n      }\n\n      // Advance read position with speed and direction\n      readPosFloat += targetSpeed * playbackDirection;\n\n      // Handle looping with direction\n      if (readPosFloat >= length) {\n        readPosFloat = fmodf(readPosFloat, length); // Wrap to start\n\n        // Apply Frippertronics decay on loop wrap (forward direction)\n        if (playbackDirection > 0 && decayControl < 1.0f) {\n          // Map decayControl (0.0-1.0) to decay factor (0.8-1.0)\n          // 1.0 = no decay, 0.0 = heavy decay (20% fade per loop)\n          float decayFactor = 0.8f + (decayControl * 0.2f);\n          for (int i = 0; i < length; i++) {\n            bufferL[i] *= decayFactor;\n            bufferR[i] *= decayFactor;\n          }\n        }\n      } else if (readPosFloat < 0.0f) {\n        readPosFloat = length + fmodf(readPosFloat, length); // Wrap to end\n\n        // Apply decay on reverse loop wrap\n        if (playbackDirection < 0 && decayControl < 1.0f) {\n          float decayFactor = 0.8f + (decayControl * 0.2f);\n          for (int i = 0; i < length; i++) {\n            bufferL[i] *= decayFactor;\n            bufferR[i] *= decayFactor;\n          }\n        }\n      }\n    }\n    \n    // When muted, keep loop position frozen but don\'t output audio\n    if (state == MUTED && length > 0) {\n      wetL = 0.0f;\n      wetR = 0.0f;\n      // readPosFloat stays frozen at current position\n    }\n    \n    // Guitar pedal style mixing: dry signal always passes through + wet signal added with playback gain\n    // Use soft clipping (tanh) to prevent harsh digital clipping when overdubbing\n    float mixedL = inL + wetL * mix * playbackGain;\n    float mixedR = inR + wetR * mix * playbackGain;\n\n    // Soft saturation using tanh() - prevents clipping, adds warmth\n    outL = tanhf(mixedL * 0.9f);  // Scale down slightly before saturation\n    outR = tanhf(mixedR * 0.9f);\n    \n    // Update control outputs\n    positionOut = length > 0 ? readPosFloat / length : 0.0f;\n    lengthOut = (float)length / bufferSize;\n    stateOut = (state == RECORDING) ? 1.0f : ((state == PLAYING) ? 0.5f : ((state == MUTED) ? 0.25f : 0.0f));\n    \n    // LED control output (encoded state for NeoPixel rendering)\n    // 0.0 = EMPTY (pulsing red - ready to record)\n    // 1.0 = RECORDING (solid red)\n    // 2.0 = PLAYING (solid green - looping)\n    // 3.0 = MUTED (off/dim)\n    // 4.0 = OVERDUBBING (solid orange - layering audio)\n    if (state == EMPTY) {\n      ledOut = 0.0f;  // EMPTY = pulsing red\n    } else if (state == RECORDING) {\n      ledOut = 1.0f;  // RECORDING = solid red\n    } else if (state == PLAYING) {\n      ledOut = 2.0f;  // PLAYING = solid green\n    } else if (state == MUTED) {\n      ledOut = 3.0f;  // MUTED = off\n    } else if (state == OVERDUBBING) {\n      ledOut = 4.0f;  // OVERDUBBING = solid orange\n    }\n  }\n};\n')},generateIncludes:function(){return"#include <cstring>  // For memset\n#include <cmath>     // For tanhf (soft clipping)"}},N={I2S_BCLK:15,I2S_LRCK:17,I2S_DATA:18,I2C_SDA:1,I2C_SCL:2,ANALOG_PINS:[4,5,6,7],ENCODER_A:21,ENCODER_B:47,ENCODER_BTN:48,NEOPIXEL_PIN:46,NEOPIXEL_COUNT:8,NEOPIXEL_MAP:{BTN:[3,2,1,0],POT:[7,6,5,4]},BANK_COLORS:[{r:0,g:255,b:0},{r:255,g:0,b:0},{r:0,g:0,b:255},{r:255,g:128,b:0},{r:0,g:255,b:255},{r:255,g:255,b:255}],AUTOMATION_RECORD_COLOR:{r:255,g:0,b:0},NEOPIXEL_BRIGHTNESS:50,GATE_IN_PINS:[42,41],GATE_OUT_PINS:[40,39],SD_CS:9,SD_MOSI:10,SD_MISO:11,SD_SCK:12,MIDI_RX:44,MIDI_TX:43,USB_DM:19,USB_DP:20,SAMPLE_RATE:44100,BUFFER_SIZE:256},G={BUTTONS:[2,1,0,3],MIDI_OUT_LED:4,MIDI_IN_LED:5,GATE_LEDS:[7,6],GATE_LEDS_B:[8,9]};function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function U(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}function W(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,V(a.key),a)}}function V(e){var n=function(e){if("object"!=q(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=q(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==q(n)?n:n+""}var j=function(){return e=function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.modules=n,this.connections=t},n=[{key:"resolveAudioChain",value:function(){var e=this,n=this.modules.find(function(e){return"I2SOut"===e.type}),t=[];return n&&(t=this.traceBackToSource(n,"audio")),this.connections.filter(function(e){return"audio"===e.kind}).forEach(function(n){var a=n.from.id.split(":")[0],o=e.modules.find(function(e){return e.id===a});o&&!t.some(function(e){return e.id===o.id})&&t.push(o)}),this.sortByFPUSafety(t)}},{key:"sortByFPUSafety",value:function(e){var n=this,t={Sample:1,Oscillator:2,Wavetable:3,Noise:10,NoiseGenerator:10,VCA:20,Distortion:25,CleanReverb:26,Filter:30,Delay:35,StereoMixer4:40,I2SOut:100},a=new Map;return e.forEach(function(e){var t;if("Wavetable"===e.type&&null!==(t=e.params)&&void 0!==t&&t.fm_tracking){var o=n.connections.find(function(n){var t,a,o=null!==(t=n.from)&&void 0!==t&&t.id?n.from.id.split(":")[0]:n.from,r=null!==(a=n.to)&&void 0!==a&&a.id?n.to.id.split(":")[1]:n.toPort;return o===e.id&&"fm"===r});if(o){var r,i=null!==(r=o.to)&&void 0!==r&&r.id?o.to.id.split(":")[0]:o.to;a.set(e.id,i)}}}),e.sort(function(e,n){var o=t[e.type]||50,r=t[n.type]||50;return a.has(e.id)&&a.get(e.id)===n.id?1:a.has(n.id)&&a.get(n.id)===e.id?-1:o-r})}},{key:"traceBackToSource",value:function(e,n){var t=this,a=[e],o=new Set([e.id]);return this.connections.filter(function(t){var a,o;if(t.to&&"string"==typeof t.to)a=t.to,o=t.toPort;else{if(!t.to||!t.to.id)return!1;a=t.to.id.split(":")[0],o=t.to.id.split(":")[1]}var r="audio"===t.type||["L","R","inL","inR","outL","outR","fm","pitch_cv"].includes(o)||o.includes("L")||o.includes("R");return a===e.id&&("audio"===n&&r||"control"===n&&!r)}).forEach(function(e){var r;if(e.from&&"string"==typeof e.from)r=e.from;else{if(!e.from||!e.from.id)return;r=e.from.id.split(":")[0]}var i=t.modules.find(function(e){return e.id===r});if(i&&!o.has(i.id)){var c=t.traceBackToSource(i,n);a.unshift.apply(a,function(e){return function(e){if(Array.isArray(e))return U(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return U(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?U(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(c)),c.forEach(function(e){return o.add(e.id)})}}),a}},{key:"findConnectionsToModule",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.connections.filter(function(t){var a,o;if(t.to&&"string"==typeof t.to)a=t.to,o=t.toPort;else{if(!t.to||!t.to.id)return!1;a=t.to.id.split(":")[0],o=t.to.id.split(":")[1]}if(a!==e)return!1;if(n){var r="audio"===t.type||["L","R","inL","inR","outL","outR","fm","pitch_cv"].includes(o)||o.includes("L")||o.includes("R");return"audio"===n&&r||"control"===n&&!r}return!0})}},{key:"findConnectionsFromModule",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.connections.filter(function(t){var a,o;if(t.from&&"string"==typeof t.from)a=t.from,o=t.fromPort;else{if(!t.from||!t.from.id)return!1;a=t.from.id.split(":")[0],o=t.from.id.split(":")[1]}if(a!==e)return!1;if(n){var r="audio"===t.type||["L","R","inL","inR","outL","outR","fm","pitch_cv"].includes(o)||o.includes("L")||o.includes("R");return"audio"===n&&r||"control"===n&&!r}return!0})}}],n&&W(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function $(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,K(a.key),a)}}function K(e){var n=function(e){if("object"!=H(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=H(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==H(n)?n:n+""}var Y=function(){return e=function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"getAnalogPin",value:function(e){return N.ANALOG_PINS[e%N.ANALOG_PINS.length]}},{key:"getGateOutPin",value:function(e){return N.GATE_OUT_PINS[e%N.GATE_OUT_PINS.length]}},{key:"getGateInPin",value:function(e){return N.GATE_IN_PINS[e%N.GATE_IN_PINS.length]}},{key:"getMCPButtonPin",value:function(e){return G.BUTTONS[e%G.BUTTONS.length]}},{key:"getMCPButtonLEDPin",value:function(e){return this.getNeoPixelIndex("button",e)}},{key:"getMCPGateLEDPin",value:function(e){return e<2?G.GATE_LEDS[e]:G.GATE_LEDS_B[e-2]}},{key:"getMCPMIDIInLEDPin",value:function(){return G.MIDI_IN_LED}},{key:"getMCPMIDIOutLEDPin",value:function(){return G.MIDI_OUT_LED}},{key:"getNeoPixelPin",value:function(){return N.NEOPIXEL_PIN}},{key:"getNeoPixelIndex",value:function(e,n){return"button"===e?N.NEOPIXEL_MAP.BTN[n%4]:"pot"===e?N.NEOPIXEL_MAP.POT[n%4]:0}},{key:"getEncoderPins",value:function(){return{A:N.ENCODER_A,B:N.ENCODER_B,BTN:N.ENCODER_BTN}}},{key:"getI2SPins",value:function(){return{BCLK:N.I2S_BCLK,LRCK:N.I2S_LRCK,DATA:N.I2S_DATA}}},{key:"getSDPins",value:function(){return{CS:N.SD_CS,MOSI:N.SD_MOSI,MISO:N.SD_MISO,SCK:N.SD_SCK}}},{key:"getI2CPins",value:function(){return{SDA:N.I2C_SDA,SCL:N.I2C_SCL}}},{key:"getMIDILEDPins",value:function(){return{IN:G.MIDI_IN_LED,OUT:G.MIDI_OUT_LED}}}],null&&$(e.prototype,null),n&&$(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function Z(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,Q(a.key),a)}}function Q(e){var n=function(e){if("object"!=X(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=X(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==X(n)?n:n+""}var J=function(){return e=function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"generateIncludes",value:function(){var e=new Set;return e.add("#include <Wire.h>"),e.add("#include <driver/i2s.h>"),e.add("#include <Adafruit_MCP23X17.h>"),e.add("#include <Adafruit_NeoPixel.h>"),e.add("#include <time.h>"),e.add("#include <sys/time.h>"),e.add("#include <SD.h>"),e.add("#include <FS.h>"),e.add("#include <SPI.h>"),Array.from(e)}},{key:"generateI2SSetup",value:function(){return"\n// I2S Audio Output Configuration (PCM5102A DAC)\ni2s_config_t i2s_config = {\n    .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_TX),\n    .sample_rate = ".concat(N.SAMPLE_RATE,",\n    .bits_per_sample = I2S_BITS_PER_SAMPLE_16BIT,\n    .channel_format = I2S_CHANNEL_FMT_RIGHT_LEFT,\n    .communication_format = I2S_COMM_FORMAT_I2S,\n    .intr_alloc_flags = ESP_INTR_FLAG_LEVEL1,\n    .dma_buf_count = 8,\n    .dma_buf_len = ").concat(N.BUFFER_SIZE,",\n    .use_apll = false,\n    .tx_desc_auto_clear = true,\n    .fixed_mclk = 0\n};\n\ni2s_pin_config_t pin_config = {\n    .bck_io_num = ").concat(N.I2S_BCLK,",      // BCK (Bit Clock)\n    .ws_io_num = ").concat(N.I2S_LRCK,",       // LRCK/WS (Word Select)\n    .data_out_num = ").concat(N.I2S_DATA,",    // DIN (Audio Data)\n    .data_in_num = I2S_PIN_NO_CHANGE\n};\n\n// Initialize I2S\ni2s_driver_install(I2S_NUM_0, &i2s_config, 0, NULL);\ni2s_set_pin(I2S_NUM_0, &pin_config);\ni2s_zero_dma_buffer(I2S_NUM_0);\n")}},{key:"generateMCP23017Setup",value:function(){return'\n// Initialize MCP23017 I/O expander\nif (!mcp.begin_I2C(0x20)) {\n    Serial.println("Error initializing MCP23017");\n    while (1);\n}\n\n// Configure MCP23017 pins (GPA0-3: buttons, GPA4-5: gate in, GPA6-7: button LEDs)\nmcp.pinMode(0, INPUT_PULLUP);  // Button 1\nmcp.pinMode(1, INPUT_PULLUP);  // Button 2\nmcp.pinMode(2, INPUT_PULLUP);  // Button 3\nmcp.pinMode(3, INPUT_PULLUP);  // Button 4\nmcp.pinMode(4, INPUT_PULLUP);  // Gate IN 1\nmcp.pinMode(5, INPUT_PULLUP);  // Gate IN 2\nmcp.pinMode(6, OUTPUT);        // Button 1 LED\nmcp.pinMode(7, OUTPUT);        // Button 2 LED\n\n// Configure Port B (GPB0-1: button LEDs 3-4, GPB2-5: gate LEDs)\nmcp.pinMode(8, OUTPUT);        // Button 3 LED\nmcp.pinMode(9, OUTPUT);        // Button 4 LED\nmcp.pinMode(10, OUTPUT);       // Gate 1 LED\nmcp.pinMode(11, OUTPUT);       // Gate 2 LED\nmcp.pinMode(12, OUTPUT);       // Gate 3 LED\nmcp.pinMode(13, OUTPUT);       // Gate 4 LED\n'}},{key:"generateNeoPixelSetup",value:function(){return"\n// Initialize NeoPixel LEDs\nneoPixels.begin();\nneoPixels.setBrightness(".concat(N.NEOPIXEL_BRIGHTNESS,');\nneoPixels.clear();\nneoPixels.show();\nSerial.println("NeoPixels initialized (8 LEDs, GPIO46)");\n')}},{key:"generateGlobalVariables",value:function(){return"\n// Global audio buffers\nint16_t audioBufferL[".concat(N.BUFFER_SIZE,"];\nint16_t audioBufferR[").concat(N.BUFFER_SIZE,"];\nfloat tempBufferL[").concat(N.BUFFER_SIZE,"];\nfloat tempBufferR[").concat(N.BUFFER_SIZE,"];\n\n// I/O expansion\nAdafruit_MCP23X17 mcp;\n\n// NeoPixel LEDs (WS2812B x8)\nAdafruit_NeoPixel neoPixels(").concat(N.NEOPIXEL_COUNT,", ").concat(N.NEOPIXEL_PIN,", NEO_GRB + NEO_KHZ800);\nuint8_t currentBank = 0; // Current bank (0-5 for 6 banks)\n\n// Timing\nunsigned long lastMillis = 0;\nunsigned long mcpReadTime = 0;\nconst unsigned long MCP_READ_INTERVAL = 20; // Read MCP every 20ms\nunsigned long neoPixelUpdateTime = 0;\nconst unsigned long NEOPIXEL_UPDATE_INTERVAL = 100; // Update NeoPixels every 100ms\n")}},{key:"generateNeoPixelUpdateCode",value:function(){var e=N.BANK_COLORS.map(function(e,n){return"  {".concat(e.r,", ").concat(e.g,", ").concat(e.b,"}").concat(n<N.BANK_COLORS.length-1?",":" "," // Bank ").concat(n+1)}).join("\n");return N.AUTOMATION_RECORD_COLOR,"\n// Bank colors (RGB)\nstruct BankColor {\n  uint8_t r, g, b;\n};\n\nconst BankColor bankColors[6] = {\n".concat(e,"\n};\n\nvoid updateNeoPixels() {\n  // Get current bank color\n  BankColor color = bankColors[currentBank % 6];\n\n  // Update button LEDs (indices ").concat(N.NEOPIXEL_MAP.BTN.join(", "),")\n  for (int i = 0; i < 4; i++) {\n    uint8_t ledIndex = 0;\n    switch(i) {\n      case 0: ledIndex = ").concat(N.NEOPIXEL_MAP.BTN[0],"; break;\n      case 1: ledIndex = ").concat(N.NEOPIXEL_MAP.BTN[1],"; break;\n      case 2: ledIndex = ").concat(N.NEOPIXEL_MAP.BTN[2],"; break;\n      case 3: ledIndex = ").concat(N.NEOPIXEL_MAP.BTN[3],"; break;\n    }\n\n    // Check if button is held for automation record (override with red)\n    // Button gates are stored in btn1_gate through btn4_gate (1-indexed)\n    bool isRecording = false;\n\n    // AUTOMATION_RECORD_CHECK_PLACEHOLDER will be replaced by actual automation checks\n    // Format: isRecording = isRecording || (btn1_gate && automation1_record_trigger);\n    // AUTOMATION_RECORD_CHECK_PLACEHOLDER\n\n    if (isRecording) {\n      // Override with red for automation record\n      neoPixels.setPixelColor(ledIndex, neoPixels.Color(").concat(N.AUTOMATION_RECORD_COLOR.r,", ").concat(N.AUTOMATION_RECORD_COLOR.g,", ").concat(N.AUTOMATION_RECORD_COLOR.b,"));\n    } else {\n      // Use bank color\n      neoPixels.setPixelColor(ledIndex, neoPixels.Color(color.r, color.g, color.b));\n    }\n  }\n\n  // Update pot LEDs (indices ").concat(N.NEOPIXEL_MAP.POT.join(", "),")\n  for (int i = 0; i < 4; i++) {\n    uint8_t ledIndex = 0;\n    switch(i) {\n      case 0: ledIndex = ").concat(N.NEOPIXEL_MAP.POT[0],"; break;\n      case 1: ledIndex = ").concat(N.NEOPIXEL_MAP.POT[1],"; break;\n      case 2: ledIndex = ").concat(N.NEOPIXEL_MAP.POT[2],"; break;\n      case 3: ledIndex = ").concat(N.NEOPIXEL_MAP.POT[3],"; break;\n    }\n    neoPixels.setPixelColor(ledIndex, neoPixels.Color(color.r, color.g, color.b));\n  }\n\n  neoPixels.show();\n}\n")}},{key:"generateMainLoop",value:function(){return"\nvoid loop() {\n    // Audio processing happens here\n    processAudioBuffer();\n\n    // Control rate updates (every 20ms to avoid I2C interference)\n    if (millis() - mcpReadTime > MCP_READ_INTERVAL) {\n        mcpReadTime = millis();\n        readControls();\n    }\n\n    // Update NeoPixels (every 100ms)\n    if (millis() - neoPixelUpdateTime > NEOPIXEL_UPDATE_INTERVAL) {\n        neoPixelUpdateTime = millis();\n        updateNeoPixels();\n    }\n}\n"}}],null&&Z(e.prototype,null),n&&Z(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function ee(e){return ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ee(e)}function ne(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||function(e,n){if(e){if("string"==typeof e)return te(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?te(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function te(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}function ae(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,oe(a.key),a)}}function oe(e){var n=function(e){if("object"!=ee(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ee(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ee(n)?n:n+""}var re=function(){return e=function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.connectionResolver=n},(n=[{key:"getPotReference",value:function(e,n){var t=e.params.index||1;return"pot".concat(t,"_value")}},{key:"generateBankAwareAssignment",value:function(e,n){if(!e||"Pot"!==e.type)return"        // WARNING: Invalid pot reference\n";var t=e.params.bank||1;return e.params.locked?"        ".concat(n,"\n"):"        if (currentBank == ".concat(t,") {\n            ").concat(n,"\n        }\n")}},{key:"getOscWaveTypeIndex",value:function(e){if("number"==typeof e)return e;if("string"!=typeof e)return 0;switch(e.toLowerCase()){case"sine":default:return 0;case"triangle":case"tri":return 1;case"sawtooth":case"saw":return 2;case"square":return 3}}},{key:"getNoiseTypeIndex",value:function(e){if("number"==typeof e)return e;if("string"!=typeof e)return 0;switch(e.toLowerCase()){case"white":default:return 0;case"pink":return 1;case"brown":case"brownian":return 2}}},{key:"getAudioMathModeIndex",value:function(e){if("number"==typeof e)return e;if("string"!=typeof e)return 0;switch(e.toLowerCase()){case"am":case"amplitude_modulation":default:return 0;case"crossfade":case"cross":return 1;case"ring":case"ring_modulation":return 2;case"vocoder":return 3}}},{key:"generateIncludes",value:function(e){var n=[];switch(e){case"Oscillator":case"Wavetable":case"Filter":case"GranularSynth":case"KickDrum":case"SnareDrum":case"Percussion":n.push("#include <math.h>"),n.push("#include <SD.h>"),n.push("#include <FS.h>"),n.push("#include <freertos/FreeRTOS.h>"),n.push("#include <freertos/task.h>"),n.push("#include <freertos/semphr.h>");break;case"Noise":case"CleanReverb":case"AudioMath":case"Panner":case"ChorusFlangeRing":case"Limiter":case"NoiseGate":case"EQ8":case"Wavetable":case"GranularDense":case"SamplePlayer":n.push("#include <math.h>");break;case"Resonance":n.push("#include <math.h>"),n.push("#include <esp_dsp.h>"),n.push("#include <Wire.h>"),n.push("#include <SD.h>"),n.push("#include <freertos/FreeRTOS.h>"),n.push("#include <freertos/task.h>")}return n}},{key:"generateModuleClasses",value:function(){return'\n// WAV File Header Structure\nstruct WAVHeader {\n    char riff[4];           // "RIFF"\n    uint32_t fileSize;      // File size minus 8 bytes\n    char wave[4];           // "WAVE"\n    char fmt[4];            // "fmt "\n    uint32_t fmtSize;       // Format chunk size\n    uint16_t audioFormat;   // Audio format (1 = PCM)\n    uint16_t numChannels;   // Number of channels\n    uint32_t sampleRate;    // Sample rate\n    uint32_t byteRate;      // Byte rate\n    uint16_t blockAlign;    // Block alignment\n    uint16_t bitsPerSample; // Bits per sample\n    char data[4];           // "data"\n    uint32_t dataSize;      // Data size\n};\n\n#define CHUNK_SIZE 4096  // Buffer size in bytes (1024 samples * 2 channels * 2 bytes)\n#define CHUNK_SAMPLES (CHUNK_SIZE / 4) // 1024 samples for stereo 16-bit\n\nclass MinimalWAVPlayer {\nprivate:\n    File wavFile;\n    WAVHeader header;\n\n    // Double buffering for seamless playback\n    int16_t* bufferA;\n    int16_t* bufferB;\n    int16_t* playingBuffer;       // Currently being played\n    int16_t* loadingBuffer;       // Currently being loaded\n    bool bufferAReady;\n    bool bufferBReady;\n\n    // Playback state\n    int playPosition;\n    int bufferPosition;\n    bool isPlaying;\n    float playbackSpeed;\n    float startPosition;\n    float endPosition;\n\n    // Background loading\n    SemaphoreHandle_t bufferMutex;\n    TaskHandle_t loadingTask;\n\npublic:\n    MinimalWAVPlayer();\n    bool loadFile(const String& filename);\n    void play();\n    void stop();\n    bool playing();\n    void setPlaybackSpeed(float speed);\n    void setStartPosition(float pos);\n    void setEndPosition(float pos);\n    int16_t getNextSample();\n\n    ~MinimalWAVPlayer() {\n        stop();\n        if (bufferA) free(bufferA);\n        if (bufferB) free(bufferB);\n        if (bufferMutex) vSemaphoreDelete(bufferMutex);\n    }\n};\n'}},{key:"generateGlobalVariables",value:function(e,n,t){switch(e.type){case"Oscillator":return"\n// ".concat(t.label," ").concat(n,"\nfloat osc").concat(n,"_phase = 0.0;\nfloat osc").concat(n,"_freq = ").concat(e.params.freq||440,";\nfloat osc").concat(n,"_gate = ").concat(e.params.gate||1,";\nint osc").concat(n,"_waveform = ").concat(this.getOscWaveTypeIndex(e.params.waveform),"; // 0=sine, 1=triangle, 2=saw, 3=square\nfloat osc").concat(n,"_morph = ").concat(e.params.morph||0,"; // Wave morphing parameter (0-1)\nfloat osc").concat(n,"_fm_amount = ").concat(e.params.fm_amount||0,"; // FM amount (0-1)\nfloat osc").concat(n,"_pitch_amount = ").concat(e.params.pitch_amount||e.params.pitch_range||24,"; // Pitch CV amount in semitones (+24=upward sweep, -24=downward kick drop)\nfloat osc").concat(n,"_pitch_smooth = 0.5; // Smoothed pitch CV to prevent artifacts (0-1)\nfloat osc").concat(n,"_outputL = 0.0;\nfloat osc").concat(n,"_outputR = 0.0;\nfloat osc").concat(n,"_amplitude = ").concat(e.params.amplitude||.8,";\nint osc").concat(n,"_debug_counter = 0;\n");case"Filter":return"\n// ".concat(t.label," ").concat(n,"\nfloat filter").concat(n,"_cutoff = ").concat(e.params.cutoff_hz||2e3,";\nfloat filter").concat(n,"_resonance = ").concat(e.params.resonance||.3,";\nfloat filter").concat(n,"_lfo_min_hz = ").concat(e.params.lfo_min_hz||100,";\nfloat filter").concat(n,"_lfo_max_hz = ").concat(e.params.lfo_max_hz||4e3,";\nfloat filter").concat(n,"_y1 = 0.0; // Left channel state\nfloat filter").concat(n,"_y2 = 0.0; // Right channel state\nfloat filter").concat(n,"_inputL = 0.0;\nfloat filter").concat(n,"_inputR = 0.0;\nfloat filter").concat(n,"_outputL = 0.0;\nfloat filter").concat(n,"_outputR = 0.0;\n");case"Distortion":return this.generateDistortionVariables(e,n,t);case"VCA":return"\n// ".concat(t.label," ").concat(n,"\nfloat vca").concat(n,"_gain = ").concat(e.params.gain||1,";\nfloat vca").concat(n,"_inputL = 0.0;\nfloat vca").concat(n,"_inputR = 0.0;\nfloat vca").concat(n,"_outputL = 0.0;\nfloat vca").concat(n,"_outputR = 0.0;\nfloat vca").concat(n,"_lastGain = 0.0; // For gain smoothing to prevent clicking\n");case"Noise":return"\n// ".concat(t.label," ").concat(n," - Multi-type Noise Generator\nint noise").concat(n,"_type = ").concat(this.getNoiseTypeIndex(e.params.type),"; // 0=white, 1=pink, 2=brown\nfloat noise").concat(n,"_gain = ").concat(e.params.gain||.3,";\nfloat noise").concat(n,"_gate = ").concat(e.params.gate||1,";\nfloat noise").concat(n,"_morph = ").concat(e.params.morph||0,"; // Morphing between noise types\nfloat noise").concat(n,"_output = 0.0;\n// Pink noise filter state (for pink noise generation)\nfloat noise").concat(n,"_pink_b0 = 0.0, noise").concat(n,"_pink_b1 = 0.0, noise").concat(n,"_pink_b2 = 0.0;\nfloat noise").concat(n,"_pink_b3 = 0.0, noise").concat(n,"_pink_b4 = 0.0, noise").concat(n,"_pink_b5 = 0.0, noise").concat(n,"_pink_b6 = 0.0;\n// Brown noise filter state\nfloat noise").concat(n,"_brown_last = 0.0;\n// LCG seed for deterministic noise generation (avoids ESP32 random() interference)\nuint32_t noise").concat(n,"_lcg_seed = ").concat(12345+7*n,"; // Different seed per instance\nint noise").concat(n,"_debug_counter = 0;\n");case"CleanReverb":var a,o,r,i=e.params.quality||"ultra";switch(i){case"standard":a={comb1:1051,comb2:1297,comb3:1531,comb4:1723,ap1:347,ap2:113,predelay:882},o="~28KB",r="Standard quality (40ms max decay)";break;case"high":a={comb1:3500,comb2:4300,comb3:5100,comb4:5700,ap1:1150,ap2:375,predelay:2940},o="~100KB",r="High quality (140ms max decay)";break;default:a={comb1:16e3,comb2:19700,comb3:23300,comb4:26200,ap1:2800,ap2:900,predelay:17640},o="~426KB",r="Ultra quality (594ms max decay)"}return"\n// ".concat(t.label," ").concat(n," - Schroeder Reverb (").concat(r,')\n// Quality preset: "').concat(i,'" (').concat(o," PSRAM per instance)\n// Comb filter delay sizes for 44.1kHz sample rate\n#define CLEANREVERB").concat(n,"_COMB1_SIZE ").concat(a.comb1,"   // ~").concat(Math.round(a.comb1/44.1),"ms\n#define CLEANREVERB").concat(n,"_COMB2_SIZE ").concat(a.comb2,"   // ~").concat(Math.round(a.comb2/44.1),"ms\n#define CLEANREVERB").concat(n,"_COMB3_SIZE ").concat(a.comb3,"   // ~").concat(Math.round(a.comb3/44.1),"ms\n#define CLEANREVERB").concat(n,"_COMB4_SIZE ").concat(a.comb4,"   // ~").concat(Math.round(a.comb4/44.1),"ms\n\n// Allpass filter delay sizes\n#define CLEANREVERB").concat(n,"_AP1_SIZE ").concat(a.ap1,"      // ~").concat(Math.round(a.ap1/44.1),"ms\n#define CLEANREVERB").concat(n,"_AP2_SIZE ").concat(a.ap2,"       // ~").concat(Math.round(a.ap2/44.1),"ms\n\n// Predelay for early reflections\n#define CLEANREVERB").concat(n,"_PREDELAY_SIZE ").concat(a.predelay," // ~").concat(Math.round(a.predelay/44.1),"ms\n\n// Delay line arrays (allocated dynamically from PSRAM at runtime)\n// Using pointers + ps_malloc() to explicitly allocate from PSRAM\nfloat* cleanreverb").concat(n,"_comb1 = nullptr;\nfloat* cleanreverb").concat(n,"_comb2 = nullptr;\nfloat* cleanreverb").concat(n,"_comb3 = nullptr;\nfloat* cleanreverb").concat(n,"_comb4 = nullptr;\n\nfloat* cleanreverb").concat(n,"_ap1 = nullptr;\nfloat* cleanreverb").concat(n,"_ap2 = nullptr;\n\n// Per-comb LPF states (damping inside feedback path) - small, can stay in DRAM\nfloat cleanreverb").concat(n,"_comb1_lpf = 0.0f;\nfloat cleanreverb").concat(n,"_comb2_lpf = 0.0f;\nfloat cleanreverb").concat(n,"_comb3_lpf = 0.0f;\nfloat cleanreverb").concat(n,"_comb4_lpf = 0.0f;\n\n// Predelay buffer (allocated dynamically from PSRAM at runtime)\nfloat* cleanreverb").concat(n,"_predelay = nullptr;\nint cleanreverb").concat(n,"_predelay_pos = 0;\n\n// Position counters\nint cleanreverb").concat(n,"_comb1_pos = 0, cleanreverb").concat(n,"_comb2_pos = 0;\nint cleanreverb").concat(n,"_comb3_pos = 0, cleanreverb").concat(n,"_comb4_pos = 0;\nint cleanreverb").concat(n,"_ap1_pos = 0, cleanreverb").concat(n,"_ap2_pos = 0;\n\n// Parameters\nfloat cleanreverb").concat(n,"_mix = ").concat(e.params.mix||.4,";\nfloat cleanreverb").concat(n,"_size = ").concat(e.params.size||.6,";\nfloat cleanreverb").concat(n,"_damp = ").concat(e.params.damp||.3,";\n\n// Smoothed params to avoid zippering\nfloat cleanreverb").concat(n,"_mix_z = cleanreverb").concat(n,"_mix;\nfloat cleanreverb").concat(n,"_size_z = cleanreverb").concat(n,"_size;\nfloat cleanreverb").concat(n,"_damp_z = cleanreverb").concat(n,"_damp;\n\n// Input variables (standard connection system)\nfloat cleanreverb").concat(n,"_inputL = 0.0;\nfloat cleanreverb").concat(n,"_inputR = 0.0;\n\n// Output\nfloat cleanreverb").concat(n,"_outputL = 0.0;\nfloat cleanreverb").concat(n,"_outputR = 0.0;\n\n// Allocate and initialize delay buffers from PSRAM (critical for ESP32-S3)\nvoid initCleanReverb").concat(n,'() {\n    Serial.println("Allocating CleanReverb').concat(n,' buffers from PSRAM...");\n\n    // Allocate buffers from PSRAM using ps_malloc (PSRAM-specific allocator)\n    cleanreverb').concat(n,"_comb1 = (float*)ps_malloc(CLEANREVERB").concat(n,"_COMB1_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_comb2 = (float*)ps_malloc(CLEANREVERB").concat(n,"_COMB2_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_comb3 = (float*)ps_malloc(CLEANREVERB").concat(n,"_COMB3_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_comb4 = (float*)ps_malloc(CLEANREVERB").concat(n,"_COMB4_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_ap1 = (float*)ps_malloc(CLEANREVERB").concat(n,"_AP1_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_ap2 = (float*)ps_malloc(CLEANREVERB").concat(n,"_AP2_SIZE * sizeof(float));\n    cleanreverb").concat(n,"_predelay = (float*)ps_malloc(CLEANREVERB").concat(n,"_PREDELAY_SIZE * sizeof(float));\n\n    // Check allocation success\n    if (!cleanreverb").concat(n,"_comb1 || !cleanreverb").concat(n,"_comb2 || !cleanreverb").concat(n,"_comb3 ||\n        !cleanreverb").concat(n,"_comb4 || !cleanreverb").concat(n,"_ap1 || !cleanreverb").concat(n,"_ap2 ||\n        !cleanreverb").concat(n,'_predelay) {\n        Serial.println("ERROR: Failed to allocate CleanReverb').concat(n,' buffers from PSRAM!");\n        Serial.printf("Free PSRAM: %d bytes\\n", ESP.getFreePsram());\n        while(1); // Halt - cannot continue without reverb buffers\n    }\n\n    Serial.printf("CleanReverb').concat(n," allocated ").concat(o,' from PSRAM\\n");\n    Serial.printf("Free PSRAM remaining: %d bytes\\n", ESP.getFreePsram());\n\n    // Zero-initialize all buffers\n    memset(cleanreverb').concat(n,"_comb1, 0, CLEANREVERB").concat(n,"_COMB1_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_comb2, 0, CLEANREVERB").concat(n,"_COMB2_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_comb3, 0, CLEANREVERB").concat(n,"_COMB3_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_comb4, 0, CLEANREVERB").concat(n,"_COMB4_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_ap1, 0, CLEANREVERB").concat(n,"_AP1_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_ap2, 0, CLEANREVERB").concat(n,"_AP2_SIZE * sizeof(float));\n    memset(cleanreverb").concat(n,"_predelay, 0, CLEANREVERB").concat(n,"_PREDELAY_SIZE * sizeof(float));\n\n    // Initialize LPF states and parameters\n    cleanreverb").concat(n,"_comb1_lpf = cleanreverb").concat(n,"_comb2_lpf = 0.0f;\n    cleanreverb").concat(n,"_comb3_lpf = cleanreverb").concat(n,"_comb4_lpf = 0.0f;\n    cleanreverb").concat(n,"_predelay_pos = 0;\n    cleanreverb").concat(n,"_mix_z = cleanreverb").concat(n,"_mix;\n    cleanreverb").concat(n,"_size_z = cleanreverb").concat(n,"_size;\n    cleanreverb").concat(n,"_damp_z = cleanreverb").concat(n,"_damp;\n}\n");case"GranularSynth":return"\n// ".concat(t.label," ").concat(n," - Granular Synthesis Engine (PSRAM)\nint granular").concat(n,"_buffer_size; // Set dynamically based on available memory\nfloat* granular").concat(n,"_buffer_L; // PSRAM allocation\nfloat* granular").concat(n,"_buffer_R; // PSRAM allocation\nint granular").concat(n,"_write_pos = 0;\nfloat granular").concat(n,"_grain_density = ").concat(e.params.grain_density||8,";\nfloat granular").concat(n,"_grain_size_ms = ").concat(e.params.grain_size_ms||50,";\nfloat granular").concat(n,"_position = ").concat(e.params.position||.5,";\nfloat granular").concat(n,"_position_spread = ").concat(e.params.position_spread||.2,";\nfloat granular").concat(n,"_pitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(n,"_pitch_spread = ").concat(e.params.pitch_spread||.1,";\nfloat granular").concat(n,"_dry_wet = ").concat(e.params.dry_wet||1,";\nfloat granular").concat(n,"_outputL = 0.0;\nfloat granular").concat(n,"_outputR = 0.0;\n\n// 4 concurrent grain players for richer textures\nstruct Grain").concat(n," {\n    bool active;\n    float position;\n    float pitch_ratio;\n    float amplitude;\n    int samples_remaining;\n    int grain_size_samples;\n} granular").concat(n,"_grains[4];\n\nunsigned long granular").concat(n,"_last_grain_trigger = 0;\nfloat granular").concat(n,"_grain_interval_ms = 125.0; // 8 grains/sec default\n");case"KickDrum":return"\n// ".concat(t.label," ").concat(n," - Multi-Layer Drum Synthesizer (Sample + Oscillator + Noise)\n\n// Sample layer (integrated from Sample Player)\nMinimalWAVPlayer kick").concat(n,"_player;\nfloat kick").concat(n,"_sample_gain = ").concat(e.params.sample_gain||1,";\nfloat kick").concat(n,"_sample_pitch = ").concat(e.params.sample_pitch||1,";\nbool kick").concat(n,"_sample_loop = ").concat(e.params.sample_loop||!1,";\nint kick").concat(n,"_currentFile = ").concat(e.params.sample_file||1,";\nString kick").concat(n,'_currentFileName = "";\nfloat kick').concat(n,"_sample_outputL = 0.0;\nfloat kick").concat(n,"_sample_outputR = 0.0;\nint kick").concat(n,"_lastLoadedFile = -1;\n\n// Oscillator layer (existing implementation)\nfloat kick").concat(n,"_osc_phase = 0.0;\nfloat kick").concat(n,"_osc_freq = ").concat(e.params.osc_frequency||e.params.osc_freq||60,";\nfloat kick").concat(n,"_osc_level = ").concat(e.params.osc_level||.7,";\nfloat kick").concat(n,"_osc_distortion = ").concat(e.params.osc_distortion||0,";\nfloat kick").concat(n,"_osc_pitch_env = 0.0;\nfloat kick").concat(n,"_osc_pitch_amount = ").concat(e.params.osc_pitch_amount||1,";\n// Pitch envelope ADSR parameters\nfloat kick").concat(n,"_pitch_env_attack = ").concat((e.params.pitch_env_attack_ms||3)/1e3,";\nfloat kick").concat(n,"_pitch_env_decay = ").concat((e.params.pitch_env_decay_ms||80)/1e3,";\nfloat kick").concat(n,"_pitch_env_sustain = ").concat(e.params.pitch_env_sustain||0,";\nfloat kick").concat(n,"_pitch_env_release = ").concat((e.params.pitch_env_release_ms||20)/1e3,";\nfloat kick").concat(n,"_pitch_env_amount = ").concat(e.params.pitch_env_amount||2,";\nint kick").concat(n,"_pitch_env_stage = 0;\nfloat kick").concat(n,"_pitch_env_time = 0.0;\nbool kick").concat(n,"_osc_mute = ").concat(e.params.osc_mute||!1,";\n// Oscillator amplitude envelope\nfloat kick").concat(n,"_osc_amp_env = 0.0;\nfloat kick").concat(n,"_osc_amp_attack = ").concat((e.params.osc_amp_attack_ms||1)/1e3,";\nfloat kick").concat(n,"_osc_amp_decay = ").concat((e.params.osc_amp_decay_ms||150)/1e3,";\nfloat kick").concat(n,"_osc_amp_sustain = ").concat(e.params.osc_amp_sustain||.1,";\nfloat kick").concat(n,"_osc_amp_release = ").concat((e.params.osc_amp_release_ms||200)/1e3,";\nint kick").concat(n,"_osc_amp_stage = 0;\nfloat kick").concat(n,"_osc_amp_time = 0.0;\nfloat kick").concat(n,"_osc_outputL = 0.0;\nfloat kick").concat(n,"_osc_outputR = 0.0;\n\n// Noise layer (FPU-safe implementation)\nint kick").concat(n,"_noise_type = ").concat(e.params.noise_type||0,"; // 0=white, 1=pink, 2=brown\nfloat kick").concat(n,"_noise_gain = ").concat(e.params.noise_gain||.3,";\nfloat kick").concat(n,"_noise_morph = ").concat(e.params.noise_morph||0,";\nfloat kick").concat(n,"_noise_outputL = 0.0;\nfloat kick").concat(n,"_noise_outputR = 0.0;\n// Noise envelope\nfloat kick").concat(n,"_noise_amp_env = 0.0;\nfloat kick").concat(n,"_noise_amp_attack = ").concat((e.params.noise_amp_attack_ms||5)/1e3,";\nfloat kick").concat(n,"_noise_amp_decay = ").concat((e.params.noise_amp_decay_ms||80)/1e3,";\nfloat kick").concat(n,"_noise_amp_sustain = ").concat(e.params.noise_amp_sustain||0,";\nfloat kick").concat(n,"_noise_amp_release = ").concat((e.params.noise_amp_release_ms||50)/1e3,";\nint kick").concat(n,"_noise_amp_stage = 0;\nfloat kick").concat(n,"_noise_amp_time = 0.0;\n// Noise filtering state variables\nfloat kick").concat(n,"_noise_pink_b0 = 0.0, kick").concat(n,"_noise_pink_b1 = 0.0, kick").concat(n,"_noise_pink_b2 = 0.0;\nfloat kick").concat(n,"_noise_pink_b3 = 0.0, kick").concat(n,"_noise_pink_b4 = 0.0, kick").concat(n,"_noise_pink_b5 = 0.0, kick").concat(n,"_noise_pink_b6 = 0.0;\nfloat kick").concat(n,"_noise_brown_last = 0.0;\nuint32_t kick").concat(n,"_noise_lcg_seed = ").concat(12345+13*n,"; // Unique seed per instance\n\n// Master output and control\nfloat kick").concat(n,"_outputL = 0.0;\nfloat kick").concat(n,"_outputR = 0.0;\nbool kick").concat(n,"_triggered = false;\n");case"SnareDrum":return"\n// ".concat(t.label," ").concat(n," - Layered Snare Drum Synthesizer\n// Oscillator layer parameters\nfloat snare").concat(n,"_osc_freq = ").concat(e.params.osc_freq||200,";\nfloat snare").concat(n,"_osc_level = ").concat(e.params.osc_level||.4,";\nfloat snare").concat(n,"_osc_phase = 0.0;\n\n// Noise layer parameters\nfloat snare").concat(n,"_noise_level = ").concat(e.params.noise_level||.6,";\nint snare").concat(n,"_noise_type = ").concat(this.getNoiseTypeIndex(e.params.noise_type)||0,"; // 0=white\nfloat snare").concat(n,"_noise_state = 0.0; // Pink/brown filter state\n\n// Sample layer parameters (optional)\nfloat snare").concat(n,"_sample_level = ").concat(e.params.sample_level||0,";\n\n// Amplitude envelope (main drum envelope)\nfloat snare").concat(n,"_amp_attack = ").concat((e.params.amp_attack_ms||1)/1e3,";\nfloat snare").concat(n,"_amp_decay = ").concat((e.params.amp_decay_ms||120)/1e3,";\nfloat snare").concat(n,"_amp_sustain = ").concat(e.params.amp_sustain||0,";\nfloat snare").concat(n,"_amp_release = ").concat((e.params.amp_release_ms||150)/1e3,";\nfloat snare").concat(n,"_amp_env = 0.0;\nint snare").concat(n,"_amp_stage = 0; // 0=idle, 1=attack, 2=decay, 3=sustain, 4=release\nfloat snare").concat(n,"_amp_time = 0.0;\n\n// Pitch envelope (for pitch sweep effect)\nfloat snare").concat(n,"_pitch_attack = ").concat((e.params.pitch_attack_ms||.5)/1e3,";\nfloat snare").concat(n,"_pitch_decay = ").concat((e.params.pitch_decay_ms||30)/1e3,";\nfloat snare").concat(n,"_pitch_sustain = ").concat(e.params.pitch_sustain||0,";\nfloat snare").concat(n,"_pitch_release = ").concat((e.params.pitch_release_ms||50)/1e3,";\nfloat snare").concat(n,"_pitch_env = 0.0;\nfloat snare").concat(n,"_pitch_env_amount = ").concat(e.params.pitch_env_amount||.5,"; // Pitch bend in octaves\nint snare").concat(n,"_pitch_stage = 0;\nfloat snare").concat(n,"_pitch_time = 0.0;\n\n// Noise envelope (separate envelope for noise component)\nfloat snare").concat(n,"_noise_attack = ").concat((e.params.noise_attack_ms||2)/1e3,";\nfloat snare").concat(n,"_noise_decay = ").concat((e.params.noise_decay_ms||100)/1e3,";\nfloat snare").concat(n,"_noise_sustain = ").concat(e.params.noise_sustain||.1,";\nfloat snare").concat(n,"_noise_release = ").concat((e.params.noise_release_ms||200)/1e3,";\nfloat snare").concat(n,"_noise_env = 0.0;\nint snare").concat(n,"_noise_stage = 0;\nfloat snare").concat(n,"_noise_time = 0.0;\n\n// Output and control\nfloat snare").concat(n,"_outputL = 0.0;\nfloat snare").concat(n,"_outputR = 0.0;\nbool snare").concat(n,"_triggered = false;\n");case"AudioMath":return"\n// ".concat(t.label," ").concat(n," - Multi-Function Audio Processor\nint audioMath").concat(n,"_mode = ").concat(this.getAudioMathModeIndex(e.params.mode||"am"),"; // 0=am, 1=crossfade, 2=ring, 3=vocoder\nfloat audioMath").concat(n,"_amount = ").concat(e.params.amount||.5,"; // Mix/modulation amount\nfloat audioMath").concat(n,"_offset = ").concat(e.params.offset||0,"; // DC offset for modulation\nfloat audioMath").concat(n,"_inputA = 0.0; // First audio input\nfloat audioMath").concat(n,"_inputB = 0.0; // Second audio input\nfloat audioMath").concat(n,"_modInput = 0.0; // Modulation control input\nfloat audioMath").concat(n,"_output = 0.0; // Audio output\n\n// Vocoder-specific variables (simplified implementation)\nfloat audioMath").concat(n,"_vocoder_env = 0.0; // Envelope follower for carrier\nfloat audioMath").concat(n,"_vocoder_attack = 0.01; // Envelope attack time\nfloat audioMath").concat(n,"_vocoder_release = 0.1; // Envelope release time\n");case"Panner":return"\n// ".concat(t.label," ").concat(n," - Stereo Panner with Width Control\nfloat panner").concat(n,"_pan = ").concat(e.params.pan||.5,"; // Pan position (0.0=left, 0.5=center, 1.0=right)\nfloat panner").concat(n,"_width = ").concat(e.params.width||1,"; // Stereo width (0.0=mono, 1.0=full stereo)\nfloat panner").concat(n,"_inputL = 0.0; // Left audio input\nfloat panner").concat(n,"_inputR = 0.0; // Right audio input\nfloat panner").concat(n,"_outputL = 0.0; // Left audio output\nfloat panner").concat(n,"_outputR = 0.0; // Right audio output\n");case"StereoMixer4":return"\n// ".concat(t.label," ").concat(n," - 4-Channel Stereo Mixer\n// Channel 1\nfloat stereoMixer4_").concat(n,"_input1L = 0.0;\nfloat stereoMixer4_").concat(n,"_input1R = 0.0;\nfloat stereoMixer4_").concat(n,"_gain1 = ").concat(e.params.g1||.8,";\n\n// Channel 2\nfloat stereoMixer4_").concat(n,"_input2L = 0.0;\nfloat stereoMixer4_").concat(n,"_input2R = 0.0;\nfloat stereoMixer4_").concat(n,"_gain2 = ").concat(e.params.g2||.8,";\n\n// Channel 3\nfloat stereoMixer4_").concat(n,"_input3L = 0.0;\nfloat stereoMixer4_").concat(n,"_input3R = 0.0;\nfloat stereoMixer4_").concat(n,"_gain3 = ").concat(e.params.g3||.8,";\n\n// Channel 4\nfloat stereoMixer4_").concat(n,"_input4L = 0.0;\nfloat stereoMixer4_").concat(n,"_input4R = 0.0;\nfloat stereoMixer4_").concat(n,"_gain4 = ").concat(e.params.g4||.8,";\n\n// Master output\nfloat stereoMixer4_").concat(n,"_master = ").concat(e.params.master||1,";\nfloat stereoMixer4_").concat(n,"_outputL = 0.0;\nfloat stereoMixer4_").concat(n,"_outputR = 0.0;\n");case"Matrix2x2":return"\n// ".concat(t.label," ").concat(n," - 2x2 Audio Matrix Mixer with Feedback\n// Input A (stereo)\nfloat matrix").concat(n,"_inputAL = 0.0;\nfloat matrix").concat(n,"_inputAR = 0.0;\n\n// Input B (stereo)\nfloat matrix").concat(n,"_inputBL = 0.0;\nfloat matrix").concat(n,"_inputBR = 0.0;\n\n// Matrix coefficients (control the routing)\nfloat matrix").concat(n,"_aa = ").concat(e.params.aa||1,"; // Input A → Output A gain\nfloat matrix").concat(n,"_ab = ").concat(e.params.ab||0,"; // Input A → Output B gain\nfloat matrix").concat(n,"_ba = ").concat(e.params.ba||0,"; // Input B → Output A gain\nfloat matrix").concat(n,"_bb = ").concat(e.params.bb||1,"; // Input B → Output B gain\n\n// Output A (stereo)\nfloat matrix").concat(n,"_outputAL = 0.0;\nfloat matrix").concat(n,"_outputAR = 0.0;\n\n// Output B (stereo)\nfloat matrix").concat(n,"_outputBL = 0.0;\nfloat matrix").concat(n,"_outputBR = 0.0;\n");case"Delay":var c=Math.round(44.1*(e.params.time_ms||380)*1.5);return"\n// ".concat(t.label," ").concat(n,"\n#define DELAY").concat(n,"_BUFFER_SIZE ").concat(c,"\nfloat* delay").concat(n,"_bufferL; // PSRAM allocation\nfloat* delay").concat(n,"_bufferR; // PSRAM allocation\nint delay").concat(n,"_writePos = 0;\nfloat delay").concat(n,"_readPosFloat = 0.0; // For pitch shifting\nfloat delay").concat(n,"_time_ms = ").concat(e.params.time_ms||380,";\nfloat delay").concat(n,"_feedback = ").concat(e.params.feedback||.35,";\nfloat delay").concat(n,"_mix = ").concat(e.params.mix||.3,";\nfloat delay").concat(n,"_pingpong = ").concat(e.params.pingpong||0,";\nfloat delay").concat(n,"_freeze = ").concat(e.params.freeze||0,";\nfloat delay").concat(n,"_pitch_shift = ").concat(e.params.pitch_shift||1,";\nfloat delay").concat(n,"_division = ").concat(e.params.division||1,";\nfloat delay").concat(n,"_tempo_hz = 0.0; // Set by tempo sync connection\nfloat delay").concat(n,"_outputL = 0.0;\nfloat delay").concat(n,"_outputR = 0.0;\nfloat delay").concat(n,"_inputL = 0.0;\nfloat delay").concat(n,"_inputR = 0.0;\n\n// Feedback damping filters for stability and warmth\nfloat delay").concat(n,"_feedback_lpf_L = 0.0f;\nfloat delay").concat(n,"_feedback_lpf_R = 0.0f;\n");case"I2SOut":return"\n// ".concat(t.label," ").concat(n," - I2S Audio Output\nfloat i2sout").concat(n,"_inputL = 0.0;\nfloat i2sout").concat(n,"_inputR = 0.0;\nfloat i2sout").concat(n,"_volume = ").concat(e.params.volume||.8,";\nint i2sout").concat(n,"_debug_counter = 0;\n");case"LineIn":return"\n// ".concat(t.label," ").concat(n," - PCM1802 ADC Stereo Line Input\nfloat linein").concat(n,"_outputL = 0.0;\nfloat linein").concat(n,"_outputR = 0.0;\nfloat linein").concat(n,"_gain = ").concat(e.params.gain||2,";\n").concat(e.params.dc_block?"\n// DC blocking filter state (HPF ~3.5Hz at 44.1kHz)\nfloat linein".concat(n,"_dc_x_prev_L = 0.0f;\nfloat linein").concat(n,"_dc_y_prev_L = 0.0f;\nfloat linein").concat(n,"_dc_x_prev_R = 0.0f;\nfloat linein").concat(n,"_dc_y_prev_R = 0.0f;\nconst float linein").concat(n,"_dc_coeff = 0.995f;"):"","\n");case"ChorusFlangeRing":return"\n// ".concat(t.label," ").concat(n," - Modulation Effects (Chorus/Flange/Ring)\nint cfr").concat(n,"_mode = ").concat(e.params.mode||0,"; // 0=chorus, 1=flange, 2=ring\nfloat cfr").concat(n,"_depth = ").concat(e.params.depth||.5,";\nfloat cfr").concat(n,"_rate = ").concat(e.params.rate||1,";\nfloat cfr").concat(n,"_feedback = ").concat(e.params.feedback||.3,";\nfloat cfr").concat(n,"_mix = ").concat(e.params.mix||.5,";\nfloat cfr").concat(n,"_phase = 0.0;\nfloat cfr").concat(n,"_outputL = 0.0;\nfloat cfr").concat(n,"_outputR = 0.0;\n// Simple delay buffer for chorus/flange\n#define CFR").concat(n,"_BUFFER_SIZE 2048\nfloat cfr").concat(n,"_buffer[CFR").concat(n,"_BUFFER_SIZE];\nint cfr").concat(n,"_writePos = 0;\n");case"Limiter":return"\n// ".concat(t.label," ").concat(n," - Audio Limiter\nfloat limiter").concat(n,"_threshold = ").concat(e.params.threshold||.8,";\nfloat limiter").concat(n,"_ratio = ").concat(e.params.ratio||10,";\nfloat limiter").concat(n,"_attack = ").concat(e.params.attack_ms||1," / 1000.0;\nfloat limiter").concat(n,"_release = ").concat(e.params.release_ms||100," / 1000.0;\nfloat limiter").concat(n,"_makeup = ").concat(e.params.makeup||1,";\nfloat limiter").concat(n,"_envelope = 0.0;\nfloat limiter").concat(n,"_outputL = 0.0;\nfloat limiter").concat(n,"_outputR = 0.0;\n");case"NoiseGate":return"\n// ".concat(t.label," ").concat(n," - Noise Gate\nfloat noiseGate").concat(n,"_threshold = ").concat(e.params.threshold||.1,";\nfloat noiseGate").concat(n,"_attack = ").concat(e.params.attack_ms||1," / 1000.0;\nfloat noiseGate").concat(n,"_release = ").concat(e.params.release_ms||50," / 1000.0;\nfloat noiseGate").concat(n,"_ratio = ").concat(e.params.ratio||100,";\nfloat noiseGate").concat(n,"_envelope = 0.0;\nbool noiseGate").concat(n,"_gateOpen = false;\nfloat noiseGate").concat(n,"_outputL = 0.0;\nfloat noiseGate").concat(n,"_outputR = 0.0;\n");case"EQ8":return"\n// ".concat(t.label," ").concat(n," - 8-Band Graphic EQ\nfloat eq").concat(n,"_b1 = ").concat(e.params.b1||0,"; // 60Hz\nfloat eq").concat(n,"_b2 = ").concat(e.params.b2||0,"; // 170Hz\nfloat eq").concat(n,"_b3 = ").concat(e.params.b3||0,"; // 350Hz\nfloat eq").concat(n,"_b4 = ").concat(e.params.b4||0,"; // 1kHz\nfloat eq").concat(n,"_b5 = ").concat(e.params.b5||0,"; // 3kHz\nfloat eq").concat(n,"_b6 = ").concat(e.params.b6||0,"; // 6kHz\nfloat eq").concat(n,"_b7 = ").concat(e.params.b7||0,"; // 12kHz\nfloat eq").concat(n,"_b8 = ").concat(e.params.b8||0,"; // 14kHz\nfloat eq").concat(n,"_outputL = 0.0;\nfloat eq").concat(n,"_outputR = 0.0;\n// Filter state variables for each band\nfloat eq").concat(n,"_state[8][4] = {{0}}; // [band][state] for biquad filters\n");case"Resonance":return"\n// ".concat(t.label," ").concat(n," - Resonant Object Exploration System\n// Mode: 0=discovery, 1=performance, 2=exploration\nint resonance").concat(n,"_mode = ").concat("discovery"===e.params.mode?0:"performance"===e.params.mode?1:2,";\nint resonance").concat(n,"_fftSize = ").concat(e.params.fftSize||8192,";\nfloat resonance").concat(n,"_impulseLength = ").concat(e.params.impulseLength||1e3,"; // ms\nfloat resonance").concat(n,"_sweepDuration = ").concat(e.params.sweepDuration||1e4,"; // ms\nfloat resonance").concat(n,"_sweepStart = ").concat(e.params.sweepStart||20,"; // Hz\nfloat resonance").concat(n,"_sweepEnd = ").concat(e.params.sweepEnd||1e4,"; // Hz\nfloat resonance").concat(n,"_threshold = ").concat(e.params.threshold||-60,"; // dB\nint resonance").concat(n,"_maxPeaks = ").concat(e.params.maxPeaks||16,";\nint resonance").concat(n,"_objectSlot = ").concat(e.params.objectSlot||0,"; // 0-39\nbool resonance").concat(n,"_autoTune = ").concat(e.params.autoTune?"true":"false",";\nbool resonance").concat(n,"_hapticEnable = ").concat(e.params.hapticEnable?"true":"false",";\nfloat resonance").concat(n,"_gyroSensitivity = ").concat(e.params.gyroSensitivity||1,";\nfloat resonance").concat(n,"_hapticIntensity = ").concat(e.params.hapticIntensity||.5,";\n\n// Control inputs\nfloat resonance").concat(n,"_trigger = 0.0;\nfloat resonance").concat(n,"_mode_select = 0.0;\nfloat resonance").concat(n,"_object_select = 0.0;\nfloat resonance").concat(n,"_sensitivity = ").concat(e.params.gyroSensitivity||1,";\nfloat resonance").concat(n,"_intensity = ").concat(e.params.hapticIntensity||.5,";\n\n// Audio I/O\nfloat resonance").concat(n,"_contactMicInput = 0.0;\nfloat resonance").concat(n,"_exciterOutput = 0.0;\n\n// Control outputs (detected resonant frequencies)\nfloat resonance").concat(n,"_freq1 = 0.0;\nfloat resonance").concat(n,"_freq2 = 0.0;\nfloat resonance").concat(n,"_freq3 = 0.0;\nfloat resonance").concat(n,"_freq4 = 0.0;\nfloat resonance").concat(n,"_freq5 = 0.0;\nfloat resonance").concat(n,"_freq6 = 0.0;\nfloat resonance").concat(n,"_freq7 = 0.0;\nfloat resonance").concat(n,"_freq8 = 0.0;\nfloat resonance").concat(n,"_analysis_complete = 0.0;\nfloat resonance").concat(n,"_resonance_strength = 0.0;\n\n// FFT buffers (allocated in PSRAM)\nfloat* resonance").concat(n,"_fft_input = nullptr;\nfloat* resonance").concat(n,"_fft_output = nullptr;\nfloat* resonance").concat(n,"_window = nullptr;\n\n// State variables\nbool resonance").concat(n,"_analyzing = false;\nunsigned long resonance").concat(n,"_sweepStartTime = 0;\nfloat resonance").concat(n,"_currentSweepFreq = ").concat(e.params.sweepStart||20,";\nfloat resonance").concat(n,"_sweepPhase = 0.0;\n\n// FreeRTOS task handle for FFT analysis on Core 0\nTaskHandle_t resonance").concat(n,"_fftTask = nullptr;\nSemaphoreHandle_t resonance").concat(n,"_fftMutex = nullptr;\n\n// Detected resonant peaks storage\nstruct ResonantPeak {\n    float frequency;\n    float magnitude;\n    float q_factor;\n};\nResonantPeak resonance").concat(n,"_peaks[16] = {{0}};\nint resonance").concat(n,"_peakCount = 0;\n\n// Object library (40 slots in SPIFFS/SD)\nString resonance").concat(n,'_objectLibraryPath = "/resonance/objects/";\n');case"Percussion":return"\n// ".concat(t.label," ").concat(n," - Chromatic Percussion with Triple ADSR\nfloat perc").concat(n,"_freq = ").concat(e.params.freq||440,";\nfloat perc").concat(n,"_gain = ").concat(e.params.gain||.8,";\nfloat perc").concat(n,"_decay = ").concat(e.params.decay||.5,";\nfloat perc").concat(n,"_brightness = ").concat(e.params.brightness||.3,";\nfloat perc").concat(n,"_metallic = ").concat(e.params.metallic||0,";\n// Triple ADSR envelopes\nfloat perc").concat(n,"_env1 = 0.0, perc").concat(n,"_env2 = 0.0, perc").concat(n,"_env3 = 0.0;\nint perc").concat(n,"_stage1 = 0, perc").concat(n,"_stage2 = 0, perc").concat(n,"_stage3 = 0;\nfloat perc").concat(n,"_time1 = 0.0, perc").concat(n,"_time2 = 0.0, perc").concat(n,"_time3 = 0.0;\nbool perc").concat(n,"_triggered = false;\nfloat perc").concat(n,"_outputL = 0.0;\nfloat perc").concat(n,"_outputR = 0.0;\n");case"Wavetable":return this.generateWavetableVariables(e,n,t);case"GranularDense":return"\n// ".concat(t.label," ").concat(n," - Dense Granular Synthesis with 20 Grains\nint granular").concat(n,"_buffer_size; // Set dynamically based on available memory\nfloat* granular").concat(n,"_buffer_L; // PSRAM allocation\nfloat* granular").concat(n,"_buffer_R; // PSRAM allocation\nint granular").concat(n,"_write_pos = 0;\nfloat granular").concat(n,"_grain_density = ").concat(e.params.grain_density||15,";\nfloat granular").concat(n,"_position = ").concat(e.params.position||.5,";\nfloat granular").concat(n,"_position_spread = ").concat(e.params.position_spread||.3,";\nfloat granular").concat(n,"_pitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(n,"_pitch_spread = ").concat(e.params.pitch_spread||.1,";\nfloat granular").concat(n,"_dry_wet = ").concat(e.params.dry_wet||1,";\nfloat granular").concat(n,"_freeze = ").concat(e.params.freeze||0,";\nfloat granular").concat(n,"_stereo_width = ").concat(e.params.stereo_width||.5,";\nfloat granular").concat(n,"_cloud_pan = ").concat(e.params.cloud_pan||.5,";\nfloat granular").concat(n,"_grouped_panning = ").concat(e.params.grouped_panning||0,";\n\n// Dense grain structure - 20 concurrent 32ms grains with stereo panning\nstruct DenseGrain").concat(n," {\n    bool active;\n    float position;\n    float pitch_ratio;\n    float envelope_pos;\n    float envelope_inc;\n    int samples_remaining;\n    float pan;  // Stereo pan position (0=left, 1=right)\n};\n\n// Pre-calculated Hann window envelope (256 entries) for fast grain shaping\n// Replaces expensive cos() calculation with table lookup (~15% CPU reduction)\nconst float granular").concat(n,"_envelopeTable[256] = {\n    0.0000, 0.0015, 0.0061, 0.0138, 0.0245, 0.0381, 0.0548, 0.0743,\n    0.0968, 0.1221, 0.1502, 0.1810, 0.2145, 0.2506, 0.2891, 0.3301,\n    0.3735, 0.4191, 0.4669, 0.5168, 0.5688, 0.6226, 0.6782, 0.7355,\n    0.7944, 0.8549, 0.9168, 0.9799, 1.0000, 0.9799, 0.9168, 0.8549,\n    0.7944, 0.7355, 0.6782, 0.6226, 0.5688, 0.5168, 0.4669, 0.4191,\n    0.3735, 0.3301, 0.2891, 0.2506, 0.2145, 0.1810, 0.1502, 0.1221,\n    0.0968, 0.0743, 0.0548, 0.0381, 0.0245, 0.0138, 0.0061, 0.0015,\n    0.0000, 0.0015, 0.0061, 0.0138, 0.0245, 0.0381, 0.0548, 0.0743,\n    0.0968, 0.1221, 0.1502, 0.1810, 0.2145, 0.2506, 0.2891, 0.3301,\n    0.3735, 0.4191, 0.4669, 0.5168, 0.5688, 0.6226, 0.6782, 0.7355,\n    0.7944, 0.8549, 0.9168, 0.9799, 1.0000, 0.9799, 0.9168, 0.8549,\n    0.7944, 0.7355, 0.6782, 0.6226, 0.5688, 0.5168, 0.4669, 0.4191,\n    0.3735, 0.3301, 0.2891, 0.2506, 0.2145, 0.1810, 0.1502, 0.1221,\n    0.0968, 0.0743, 0.0548, 0.0381, 0.0245, 0.0138, 0.0061, 0.0015,\n    0.0000, 0.0015, 0.0061, 0.0138, 0.0245, 0.0381, 0.0548, 0.0743,\n    0.0968, 0.1221, 0.1502, 0.1810, 0.2145, 0.2506, 0.2891, 0.3301,\n    0.3735, 0.4191, 0.4669, 0.5168, 0.5688, 0.6226, 0.6782, 0.7355,\n    0.7944, 0.8549, 0.9168, 0.9799, 1.0000, 0.9799, 0.9168, 0.8549,\n    0.7944, 0.7355, 0.6782, 0.6226, 0.5688, 0.5168, 0.4669, 0.4191,\n    0.3735, 0.3301, 0.2891, 0.2506, 0.2145, 0.1810, 0.1502, 0.1221,\n    0.0968, 0.0743, 0.0548, 0.0381, 0.0245, 0.0138, 0.0061, 0.0015,\n    0.0000, 0.0015, 0.0061, 0.0138, 0.0245, 0.0381, 0.0548, 0.0743,\n    0.0968, 0.1221, 0.1502, 0.1810, 0.2145, 0.2506, 0.2891, 0.3301,\n    0.3735, 0.4191, 0.4669, 0.5168, 0.5688, 0.6226, 0.6782, 0.7355,\n    0.7944, 0.8549, 0.9168, 0.9799, 1.0000, 0.9799, 0.9168, 0.8549,\n    0.7944, 0.7355, 0.6782, 0.6226, 0.5688, 0.5168, 0.4669, 0.4191,\n    0.3735, 0.3301, 0.2891, 0.2506, 0.2145, 0.1810, 0.1502, 0.1221,\n    0.0968, 0.0743, 0.0548, 0.0381, 0.0245, 0.0138, 0.0061, 0.0015,\n    0.0000, 0.0015, 0.0061, 0.0138, 0.0245, 0.0381, 0.0548, 0.0743,\n    0.0968, 0.1221, 0.1502, 0.1810, 0.2145, 0.2506, 0.2891, 0.3301,\n    0.3735, 0.4191, 0.4669, 0.5168, 0.5688, 0.6226, 0.6782, 0.7355,\n    0.7944, 0.8549, 0.9168, 0.9799, 1.0000, 0.9799, 0.9168, 0.8549\n};\n\nDenseGrain").concat(n," granular").concat(n,"_grains[20]; // 20 concurrent grains\nfloat granular").concat(n,"_outputL = 0.0;\nfloat granular").concat(n,"_outputR = 0.0;\nint granular").concat(n,"_samples_since_grain = 0;\nbool granular").concat(n,"_process_even = true; // Round-robin: alternate processing even/odd grains\n\n// Runtime variables for control and audio processing\nfloat granular").concat(n,"_inputL = 0.0;\nfloat granular").concat(n,"_inputR = 0.0;\nfloat granular").concat(n,"_currentDensity = ").concat(e.params.grain_density||15,";\nfloat granular").concat(n,"_currentPosition = ").concat(e.params.position||.5,";\nfloat granular").concat(n,"_currentPitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(n,"_currentDryWet = ").concat(e.params.dry_wet||1,";\nfloat granular").concat(n,"_currentFreeze = ").concat(e.params.freeze||0,";\nfloat granular").concat(n,"_currentStereoWidth = ").concat(e.params.stereo_width||.5,";\nfloat granular").concat(n,"_currentCloudPan = ").concat(e.params.cloud_pan||.5,";\nfloat granular").concat(n,"_currentPitchCV1 = 0.0;\nfloat granular").concat(n,"_currentPitchCV2 = 0.0;\nfloat granular").concat(n,"_currentPitchCV3 = 0.0;\nfloat granular").concat(n,"_currentPitchCV4 = 0.0;\n");case"SamplePlayer":return e.params.polyphonic?"\n// ".concat(t.label," ").concat(n," - Polyphonic Sample Player with PSRAM (6 voices)\n#define SP").concat(n,"_VOICES 6\n#define SP").concat(n,"_BUFFER_SIZE 1572864  // 1.5MB PSRAM buffer per voice\n\nstruct SampleVoice").concat(n," {\n    int16_t* psramData;              // PSRAM sample data\n    uint32_t sampleLength;           // Length in samples\n    uint32_t playPosition;           // Current play position\n    float pitch;                     // Playback speed multiplier\n    float gain;                      // Voice gain\n    bool active;                     // Voice active state\n    int midiNote;                    // MIDI note for this voice\n    unsigned long noteOnTime;        // Note on timestamp\n    bool gateOpen;                   // Gate state\n    float fractionalPos;             // Fractional position for pitch control\n};\n\nSampleVoice").concat(n," sp").concat(n,"_voices[SP").concat(n,"_VOICES];\nint sp").concat(n,"_nextVoice = 0;        // Round-robin voice allocation\nint sp").concat(n,"_currentSample = ").concat(e.params.fileMin||1,";  // Current sample number\nfloat sp").concat(n,"_masterGain = ").concat(e.params.gain||.8,";\nfloat sp").concat(n,"_outputL = 0.0;\nfloat sp").concat(n,"_outputR = 0.0;\n\n// Sample metadata\nString sp").concat(n,'_currentFile = "";\nbool sp').concat(n,"_samplesLoaded = false;\nint sp").concat(n,"_sampleCount = 0;\n\n// Polyphonic control\nint sp").concat(n,"_baseNote = ").concat(e.params.base_note||60,"; // Middle C\nfloat sp").concat(n,"_adsrPitchRange = ").concat(e.params.adsr_pitch_range||2,";\nfloat sp").concat(n,"_adsrPitchCenter = ").concat(e.params.adsr_pitch_center||0,";\n"):"\n// ".concat(t.label," ").concat(n," - Single-Voice Sample Player (legacy mode)\nMinimalWAVPlayer sp").concat(n,"_player;\nfloat sp").concat(n,"_gain = ").concat(e.params.gain||.8,";\nfloat sp").concat(n,"_pitch = ").concat(e.params.pitch||1,";\nbool sp").concat(n,"_loop = ").concat(e.params.loop||!1,";\nbool sp").concat(n,"_playing = false;\nint sp").concat(n,"_currentFile = ").concat(e.params.fileMin||1,";\nint sp").concat(n,"_sampleCount = 0;\nString sp").concat(n,'_currentFileName = "";\nfloat sp').concat(n,"_triggerThreshold = 0.5;\nbool sp").concat(n,"_lastTrigger = false;\nfloat sp").concat(n,"_outputL = 0.0;\nfloat sp").concat(n,"_outputR = 0.0;\nint sp").concat(n,"_lastLoadedFile = -1;\n\n// File transfer variables\nbool fileTransferActive").concat(n," = false;\nString transferFilename").concat(n,' = "";\nFile transferFile').concat(n,";\nuint32_t expectedFileSize").concat(n," = 0;\nuint32_t receivedBytes").concat(n," = 0;\n\n// Ring buffer for file transfers\nuint8_t* ringBuffer").concat(n," = NULL;\nvolatile int ringWritePos").concat(n," = 0;\nvolatile int ringReadPos").concat(n," = 0;\nvolatile int ringBufferCount").concat(n," = 0;\nconst int ringBufferSize").concat(n," = 65536;\nportMUX_TYPE ringBufferMux").concat(n," = portMUX_INITIALIZER_UNLOCKED;\n");default:return""}}},{key:"generateOscillatorProcessingCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"freq"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"morph"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"fm"===n.to.port}),c=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"wave"===n.to.port}),l=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch_cv"===n.to.port}),s="osc".concat(n,"_gate"),u="osc".concat(n,"_freq"),p="osc".concat(n,"_morph"),d="0.0",f="osc".concat(n,"_waveform"),m="0.5";if(a){var _=a.from.id.split(":")[0],g=this.connectionResolver.modules.find(function(e){return e.id===_});if(g){var h,v=(null===(h=_.match(/\d+$/))||void 0===h?void 0:h[0])||"1";s="ADSR"===g.type?"(adsr".concat(v,"_output > 0.1)"):"osc".concat(n,"_gate")}}if(o){var b=o.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k,S="Pot"===y.type?y.params.index:(null===(k=b.match(/\d+$/))||void 0===k?void 0:k[0])||"1";switch(y.type){case"Scale":u="scale".concat(S,"_output");break;case"Pot":var x=y.params.index||1;u="(pot".concat(x,"_value * 2000.0 + 20.0)");break;case"LFO":u="lfo".concat(S,"_output");break;case"ADSR":u="(adsr".concat(S,"_output * 1000.0 + ").concat(e.params.freq||440,")")}}}if(r){var E=r.from.id.split(":")[0],w=this.connectionResolver.modules.find(function(e){return e.id===E});if(w){var P,C=(null===(P=E.match(/\d+$/))||void 0===P?void 0:P[0])||"1";switch(w.type){case"LFO":p="lfo".concat(C,"_output");break;case"Pot":var R=w.params.index||1;p="pot".concat(R,"_value");break;case"ADSR":p="adsr".concat(C,"_output")}}}if(i){var L=i.from.id.split(":")[0],I=this.connectionResolver.modules.find(function(e){return e.id===L});if(I){var M,D=(null===(M=L.match(/\d+$/))||void 0===M?void 0:M[0])||"1";switch(I.type){case"Oscillator":d="osc".concat(D,"_outputL");break;case"LFO":d="lfo".concat(D,"_output");break;case"ADSR":d="adsr".concat(D,"_output");break;case"Pot":var A=I.params.index||1;d="pot".concat(A,"_value")}}}if(c){var T=c.from.id.split(":")[0],O=this.connectionResolver.modules.find(function(e){return e.id===T});if(O){var B,z=(null===(B=T.match(/\d+$/))||void 0===B?void 0:B[0])||"1";switch(O.type){case"Pot":var F=O.params.index||1;f="(int)(pot".concat(F,"_value * 3.99)");break;case"LFO":f="(int)(abs(lfo".concat(z,"_output) * 3.99)")}}}if(l){var N=l.from.id.split(":")[0],G=this.connectionResolver.modules.find(function(e){return e.id===N});if(G){var q,U=(null===(q=N.match(/\d+$/))||void 0===q?void 0:q[0])||"1";switch(G.type){case"ADSR":m="adsr".concat(U,"_output");break;case"LFO":m="lfo".concat(U,"_output");break;case"Pot":var W=G.params.index||1;m="pot".concat(W,"_value")}}}return"\n        // Oscillator ".concat(n," processing\n        // DEBUG: Gate source = ").concat(s,", connection from ").concat(a?a.from.id:"none","\n        if (").concat(s," > 0.1) {\n            float freq = ").concat(u,";\n            float morph = constrain(").concat(p,", 0.0, 1.0);\n            float fm_input = ").concat(d,";\n\n            // Exponential pitch CV modulation (±semitones, like KickDrum pitch envelope)\n            // pitch_amount: +24 = upward sweep, -24 = downward kick pitch drop\n            float pitch_cv = ").concat(m,";\n\n            // Smooth pitch CV to prevent artifacts from rapid ADSR changes\n            // One-pole lowpass: coefficient 0.3 = gentle smoothing without losing responsiveness\n            osc").concat(n,"_pitch_smooth = osc").concat(n,"_pitch_smooth * 0.7 + pitch_cv * 0.3;\n\n            float pitch_offset_semitones = (osc").concat(n,"_pitch_smooth - 0.5) * osc").concat(n,"_pitch_amount;\n            float pitch_multiplier = pow(2.0, pitch_offset_semitones / 12.0);\n            freq = freq * pitch_multiplier;\n\n            // FM synthesis: modulate frequency with FM input and amount\n            float fm_freq_offset = fm_input * osc").concat(n,"_fm_amount * freq; // FM amount as ratio of base frequency\n            float effective_freq = freq + fm_freq_offset;\n\n            // Constrain to reasonable frequency range\n            effective_freq = constrain(effective_freq, 1.0, 20000.0);\n\n            osc").concat(n,"_phase += (2.0 * M_PI * effective_freq) / 44100.0;\n            if (osc").concat(n,"_phase >= 2.0 * M_PI) {\n                osc").concat(n,"_phase -= 2.0 * M_PI;\n            }\n\n            float sample = 0.0;\n\n            // Dynamic wave selection with morphing - only compute needed waveforms (CPU optimization)\n            int current_wave = ").concat(f,";\n            current_wave = constrain(current_wave, 0, 3); // Ensure valid range\n\n            if (current_wave == 0) {\n                // Sine base - morph towards triangle\n                float sine_wave = sin(osc").concat(n,"_phase);\n                if (morph > 0.001) {\n                    float triangle_wave = (2.0 / M_PI) * asin(sine_wave); // Reuse sine_wave to avoid double sin()\n                    sample = sine_wave * (1.0 - morph) + triangle_wave * morph;\n                } else {\n                    sample = sine_wave; // Pure sine - skip expensive asin()\n                }\n            } else if (current_wave == 1) {\n                // Triangle base - morph towards saw\n                float triangle_wave = (2.0 / M_PI) * asin(sin(osc").concat(n,"_phase));\n                if (morph > 0.001) {\n                    float saw_wave = (2.0 / M_PI) * (osc").concat(n,"_phase - M_PI);\n                    sample = triangle_wave * (1.0 - morph) + saw_wave * morph;\n                } else {\n                    sample = triangle_wave; // Pure triangle\n                }\n            } else if (current_wave == 2) {\n                // Saw base - morph towards square\n                float saw_wave = (2.0 / M_PI) * (osc").concat(n,"_phase - M_PI);\n                if (morph > 0.001) {\n                    float square_wave = (osc").concat(n,"_phase < M_PI) ? 1.0 : -1.0;\n                    sample = saw_wave * (1.0 - morph) + square_wave * morph;\n                } else {\n                    sample = saw_wave; // Pure saw\n                }\n            } else if (current_wave == 3) {\n                // Square base - morph towards sine (wrap around)\n                float square_wave = (osc").concat(n,"_phase < M_PI) ? 1.0 : -1.0;\n                if (morph > 0.001) {\n                    float sine_wave = sin(osc").concat(n,"_phase);\n                    sample = square_wave * (1.0 - morph) + sine_wave * morph;\n                } else {\n                    sample = square_wave; // Pure square - skip expensive sin()\n                }\n            }\n\n            osc").concat(n,"_outputL = sample * osc").concat(n,"_amplitude;\n            osc").concat(n,"_outputR = osc").concat(n,"_outputL;\n\n            // DEBUG: Print oscillator output every 500ms\n            static unsigned long oscDebugTime_").concat(n," = 0;\n            if (millis() - oscDebugTime_").concat(n," > 500) {\n                oscDebugTime_").concat(n,' = millis();\n                Serial.print("Osc').concat(n,' - freq=");\n                Serial.print(osc').concat(n,'_freq);\n                Serial.print(", gate=");\n                Serial.print(osc').concat(n,'_gate);\n                Serial.print(", amp=");\n                Serial.print(osc').concat(n,'_amplitude);\n                Serial.print(", out=");\n                Serial.println(osc').concat(n,"_outputL);\n            }\n        } else {\n            osc").concat(n,"_outputL = 0.0;\n            osc").concat(n,"_outputR = 0.0;\n        }\n")}},{key:"generateFilterCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"cutoff_hz"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("inL"===n.to.port||"in"===n.to.port)}),r="filter".concat(n,"_cutoff");if(a){var i=a.from.id.split(":")[0],c=this.connectionResolver.modules.find(function(e){return e.id===i});if(c){var l,s=(null===(l=i.match(/\d+$/))||void 0===l?void 0:l[0])||"1";switch(c.type){case"ADSR":r="(filter".concat(n,"_cutoff * adsr").concat(s,"_output)");break;case"LFO":r="(filter".concat(n,"_lfo_min_hz + lfo").concat(s,"_output * (filter").concat(n,"_lfo_max_hz - filter").concat(n,"_lfo_min_hz))")}}}if(o){var u=o.from.id.split(":")[0],p=this.connectionResolver.modules.find(function(e){return e.id===u});if(p){var d,f=(null===(d=u.match(/\d+$/))||void 0===d?void 0:d[0])||"1";switch(p.type){case"Oscillator":"osc".concat(f,"_outputL");break;case"VCA":"vca".concat(f,"_outputL");break;case"Filter":"filter".concat(f,"_outputL");break;case"Noise":"noise".concat(f,"_output");break;case"AudioMath":"audioMath".concat(f,"_output");break;case"Delay":"delay".concat(f,"_outputL");break;case"CleanReverb":"cleanreverb".concat(f,"_outputL");break;case"Panner":"panner".concat(f,"_outputL");break;case"StereoMixer4":"stereoMixer4_".concat(f,"_outputL");break;case"Matrix2x2":"matrix".concat(f,"_outputL")}}}return"\n        // Filter ".concat(n," processing\n        {\n            float cutoff = constrain(").concat(r,", 20.0, 20000.0); // Constrain cutoff frequency\n            float inputL = filter").concat(n,"_inputL;\n            float inputR = filter").concat(n,"_inputR;\n\n            // Simple and stable low-pass filter (single-pole)\n            float alpha = 2.0 * M_PI * cutoff / 44100.0;\n            alpha = constrain(alpha, 0.001, 0.99); // Keep well below Nyquist\n\n            // Process left channel with simple one-pole lowpass\n            filter").concat(n,"_y1 = filter").concat(n,"_y1 + alpha * (inputL - filter").concat(n,"_y1);\n            float outputL = filter").concat(n,"_y1;\n\n            // Process right channel independently\n            filter").concat(n,"_y2 = filter").concat(n,"_y2 + alpha * (inputR - filter").concat(n,"_y2);\n            float outputR = filter").concat(n,"_y2;\n\n            // Prevent denormals\n            if (fabsf(outputL) < 1e-10f) outputL = 0.0f;\n            if (fabsf(outputR) < 1e-10f) outputR = 0.0f;\n\n            filter").concat(n,"_outputL = outputL;\n            filter").concat(n,"_outputR = outputR;\n        }\n")}},{key:"generateDistortionCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"drive"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"tone"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"mix"===n.to.port}),i="dist".concat(n,"_drive"),c="dist".concat(n,"_tone"),l="dist".concat(n,"_mix");if(a){var s=a.from.id.split(":")[0],u=this.connectionResolver.modules.find(function(e){return e.id===s});if(u){var p,d=(null===(p=s.match(/\d+$/))||void 0===p?void 0:p[0])||"1";switch(u.type){case"Pot":var f=u.params.index||d;i="(pot".concat(f,"_value * 10.0)");break;case"LFO":i="(lfo".concat(d,"_output * 10.0)")}}}if(o){var m=o.from.id.split(":")[0],_=this.connectionResolver.modules.find(function(e){return e.id===m});if(_){var g,h=(null===(g=m.match(/\d+$/))||void 0===g?void 0:g[0])||"1";switch(_.type){case"Pot":var v=_.params.index||h;c="(500.0 + pot".concat(v,"_value * 7500.0)");break;case"LFO":c="(500.0 + lfo".concat(h,"_output * 7500.0)")}}}if(r){var b=r.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k,S=(null===(k=b.match(/\d+$/))||void 0===k?void 0:k[0])||"1";switch(y.type){case"Pot":var x=y.params.index||S;l="pot".concat(x,"_value");break;case"LFO":l="lfo".concat(S,"_output")}}}var E=e.params.bypassMode||"toggle";return"\n        // Distortion ".concat(n," processing - CPU cost: ~20 units\n        {\n            float inputL = dist").concat(n,"_inputL;\n            float inputR = dist").concat(n,"_inputR;\n\n            // Handle bypass control (").concat(E," mode)\n            bool bypassTrigger = (dist").concat(n,"_bypass > 0.5);\n            ").concat("toggle"===E?"\n            // Toggle mode: button press switches bypass on/off\n            if (bypassTrigger && !dist".concat(n,"_lastBypassTrigger) {\n                dist").concat(n,"_bypassState = !dist").concat(n,"_bypassState;  // Toggle on rising edge\n            }\n            dist").concat(n,"_lastBypassTrigger = bypassTrigger;\n            bool isBypassed = dist").concat(n,"_bypassState;\n            "):"\n            // Gate mode: bypassed only while button is held\n            bool isBypassed = bypassTrigger;\n            ","\n\n            if (isBypassed) {\n                // Bypass: pass audio through unprocessed\n                dist").concat(n,"_outputL = inputL;\n                dist").concat(n,"_outputR = inputR;\n            } else {\n                // Active: process distortion\n                float drive = constrain(").concat(i,", 0.1, 10.0);\n                float tone_freq = constrain(").concat(c,", 500.0, 8000.0);\n                float mix = constrain(").concat(l,", 0.0, 1.0);\n\n                // Save dry signal for blending\n                float dryL = inputL;\n                float dryR = inputR;\n\n                // Apply drive (pre-gain)\n                float wetL = inputL * drive;\n                float wetR = inputR * drive;\n\n                // CV-controlled preset selection (for rhythmic preset switching)\n                // Map 0-1 CV to preset index 0-5\n                int presetIdx = constrain((int)(dist").concat(n,"_preset_cv * 5.999), 0, 5);\n\n                // Select active waveshaping table based on CV\n                const float* activeTable = nullptr;\n                switch(presetIdx) {\n                    case 0: activeTable = dist").concat(n,"_table_clean; break;\n                    case 1: activeTable = dist").concat(n,"_table_overdrive; break;\n                    case 2: activeTable = dist").concat(n,"_table_fuzz; break;\n                    case 3: activeTable = dist").concat(n,"_table_speaker; break;\n                    case 4: activeTable = dist").concat(n,"_table_bitcrush; break;\n                    case 5: activeTable = dist").concat(n,"_table_saturatorlive; break;\n                    default: activeTable = dist").concat(n,"_table_overdrive; break;\n                }\n\n                // Waveshaping lookup with linear interpolation\n                // Map -drive..+drive to 0..255 table index\n                float indexL = constrain((wetL + drive) / (2.0 * drive), 0.0, 0.9999) * 256.0;\n                float indexR = constrain((wetR + drive) / (2.0 * drive), 0.0, 0.9999) * 256.0;\n\n                int idxL = (int)indexL;\n                int idxR = (int)indexR;\n                float fracL = indexL - idxL;\n                float fracR = indexR - idxR;\n\n                // Apply waveshaping with selected preset table\n                wetL = activeTable[idxL] * (1.0 - fracL) + activeTable[idxL + 1] * fracL;\n                wetR = activeTable[idxR] * (1.0 - fracR) + activeTable[idxR + 1] * fracR;\n\n                // Optional crossfade between presets (for smooth transitions)\n                if (dist").concat(n,"_presetCrossfade > 0.0 && presetIdx < 5) {\n                    // Crossfade with next preset\n                    const float* nextTable = nullptr;\n                    switch(presetIdx + 1) {\n                        case 1: nextTable = dist").concat(n,"_table_overdrive; break;\n                        case 2: nextTable = dist").concat(n,"_table_fuzz; break;\n                        case 3: nextTable = dist").concat(n,"_table_speaker; break;\n                        case 4: nextTable = dist").concat(n,"_table_bitcrush; break;\n                        case 5: nextTable = dist").concat(n,"_table_saturatorlive; break;\n                        default: nextTable = dist").concat(n,"_table_overdrive; break;\n                    }\n\n                    float nextWetL = nextTable[idxL] * (1.0 - fracL) + nextTable[idxL + 1] * fracL;\n                    float nextWetR = nextTable[idxR] * (1.0 - fracR) + nextTable[idxR + 1] * fracR;\n\n                    // Crossfade amount determined by preset_cv fractional part\n                    float cvFrac = (dist").concat(n,"_preset_cv * 5.999) - presetIdx;\n                    float blend = cvFrac * dist").concat(n,"_presetCrossfade;\n\n                    wetL = wetL * (1.0 - blend) + nextWetL * blend;\n                    wetR = wetR * (1.0 - blend) + nextWetR * blend;\n                }\n\n                // Post-filter (tone control) - simple one-pole lowpass\n                float alpha = 2.0 * M_PI * tone_freq / 44100.0;\n                alpha = constrain(alpha, 0.001, 0.99);\n\n                dist").concat(n,"_filterL = dist").concat(n,"_filterL + alpha * (wetL - dist").concat(n,"_filterL);\n                dist").concat(n,"_filterR = dist").concat(n,"_filterR + alpha * (wetR - dist").concat(n,"_filterR);\n\n                wetL = dist").concat(n,"_filterL;\n                wetR = dist").concat(n,"_filterR;\n\n                // Dry/wet mix\n                dist").concat(n,"_outputL = dryL * (1.0 - mix) + wetL * mix;\n                dist").concat(n,"_outputR = dryR * (1.0 - mix) + wetR * mix;\n\n                // Prevent denormals\n                if (fabsf(dist").concat(n,"_outputL) < 1e-10f) dist").concat(n,"_outputL = 0.0f;\n                if (fabsf(dist").concat(n,"_outputR) < 1e-10f) dist").concat(n,"_outputR = 0.0f;\n            }\n        }\n")}},{key:"generateDistortionVariables",value:function(e,n,t){var a=function(e){for(var n=[],t=0;t<257;t++){var a=t/256*2-1,o=0;switch(e){case"clean":o=a/(1+.3*Math.abs(a));break;case"overdrive":o=Math.abs(a)<.33?2*a:Math.abs(a)<.67?(3-Math.pow(2-3*Math.abs(a),2))/3*Math.sign(a):Math.sign(a);break;case"fuzz":o=a>.4?.8:a<-.5?-1:1.5*a,o=Math.max(-1,Math.min(1,o));break;case"speaker":o=2/(1+Math.exp(-2.5*a))-1;break;case"bitcrush":o=Math.round(8*a)/8,o=Math.max(-1,Math.min(1,o));break;case"saturatorlive":o=[-.5,-.485011,-.470211,-.455768,-.44181,-.428413,-.415592,-.403298,-.391425,-.379822,-.368306,-.356685,-.344776,-.332427,-.319533,-.30605,-.292008,-.277512,-.262746,-.24796,-.233464,-.219603,-.206738,-.195211,-.185318,-.177271,-.171167,-.166964,-.164459,-.16329,-.162946,-.162797,-.16215,-.16031,-.156661,-.150747,-.14235,-.131551,-.118765,-.10475,-.090565,-.077504,-.066979,-.060387,-.05896,-.063616,-.074827,-.092535,-.116102,-.144337,-.175575,-.207814,-.238899,-.266735,-.289493,-.305807,-.314911,-.31673,-.311878,-.30159,-.287577,-.271825,-.256365,-.243043,-.233302,-.22803,-.227474,-.231236,-.238352,-.247446,-.256933,-.26525,-.271078,-.273524,-.272247,-.267498,-.260081,-.251229,-.242417,-.235149,-.230725,-.230052,-.233502,-.240853,-.251316,-.263649,-.276342,-.287843,-.296795,-.302252,-.303831,-.301792,-.297011,-.290866,-.285038,-.28126,-.281052,-.285472,-.294933,-.309108,-.326945,-.346798,-.366647,-.384398,-.398201,-.40676,-.40957,-.407054,-.400564,-.392246,-.384772,-.380967,-.383379,-.393858,-.413175,-.440766,-.474627,-.511389,-.546569,-.574987,-.591303,-.590604,-.568986,-.524057,-.45529,-.364195,-.254262,-.130705,0,.130705,.254262,.364195,.45529,.524057,.568986,.590604,.591303,.574987,.546569,.511389,.474627,.440766,.413175,.393858,.383379,.380967,.384772,.392246,.400564,.407054,.40957,.40676,.398201,.384398,.366647,.346798,.326945,.309108,.294933,.285472,.281052,.28126,.285038,.290866,.297011,.301792,.303831,.302252,.296795,.287843,.276342,.263649,.251316,.240853,.233502,.230052,.230725,.235149,.242417,.251229,.260081,.267498,.272247,.273524,.271078,.26525,.256933,.247446,.238352,.231236,.227474,.22803,.233302,.243043,.256365,.271825,.287577,.30159,.311878,.31673,.314911,.305807,.289493,.266735,.238899,.207814,.175575,.144337,.116102,.092535,.074827,.063616,.05896,.060387,.066979,.077504,.090565,.10475,.118765,.131551,.14235,.150747,.156661,.16031,.16215,.162797,.162946,.16329,.164459,.166964,.171167,.177271,.185318,.195211,.206738,.219603,.233464,.24796,.262746,.277512,.292008,.30605,.319533,.332427,.344776,.356685,.368306,.379822,.391425,.403298,.415592,.428413,.44181,.455768,.470211,.485011,.5][t];break;default:o=a}n.push(o.toFixed(6))}return n.join(", ")};return"\n// ".concat(t.label," ").concat(n," - Waveshaping Distortion with CV Preset Switching\n// All preset waveshaping tables (6KB total, 0.04% of ESP32-S3 16MB flash)\nconst float dist").concat(n,"_table_clean[257] = {").concat(a("clean"),"};\nconst float dist").concat(n,"_table_overdrive[257] = {").concat(a("overdrive"),"};\nconst float dist").concat(n,"_table_fuzz[257] = {").concat(a("fuzz"),"};\nconst float dist").concat(n,"_table_speaker[257] = {").concat(a("speaker"),"};\nconst float dist").concat(n,"_table_bitcrush[257] = {").concat(a("bitcrush"),"};\nconst float dist").concat(n,"_table_saturatorlive[257] = {").concat(a("saturatorlive"),"};\n\n// Filter state for tone control\nfloat dist").concat(n,"_filterL = 0.0;\nfloat dist").concat(n,"_filterR = 0.0;\n\n// I/O variables\nfloat dist").concat(n,"_inputL = 0.0;\nfloat dist").concat(n,"_inputR = 0.0;\nfloat dist").concat(n,"_outputL = 0.0;\nfloat dist").concat(n,"_outputR = 0.0;\n\n// Bypass control\nfloat dist").concat(n,"_bypass = 0.0;  // Control input (0 = active, 1 = bypassed)\nbool dist").concat(n,"_bypassState = false;  // Toggle state\nbool dist").concat(n,"_lastBypassTrigger = false;  // For toggle detection\n\n// Preset CV control\nfloat dist").concat(n,"_preset_cv = 0.0;  // 0-1 CV input for preset selection (0=clean ... 1=saturatorlive)\nint dist").concat(n,"_currentPreset = ").concat(["clean","overdrive","fuzz","speaker","bitcrush","saturatorlive"].indexOf(e.params.preset||"overdrive"),";  // Current preset index (0-5)\nfloat dist").concat(n,"_presetCrossfade = ").concat(e.params.presetCrossfade||0,";  // Crossfade amount (0=instant, 1=full blend)\n\n// Parameters\nfloat dist").concat(n,"_drive = ").concat(e.params.drive||2.5,";\nfloat dist").concat(n,"_tone = ").concat(e.params.tone||2e3,";\nfloat dist").concat(n,"_mix = ").concat(e.params.mix||.8,";\n")}},{key:"generateVCACode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gain"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("inL"===n.to.port||"in"===n.to.port)}),r="vca".concat(n,"_gain"),i="0.0";if(a){var c=a.from.id.split(":")[0],l=this.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s,u=(null===(s=c.match(/\d+$/))||void 0===s?void 0:s[0])||"1";switch(l.type){case"ADSR":r="adsr".concat(u,"_output");break;case"Pot":var p=l.params.index||u;r="pot".concat(p,"_value");break;case"LFO":r="lfo".concat(u,"_output");break;case"Scale":r="scale".concat(u,"_output");break;case"Modulation":r="modulation".concat(u,"_output");break;default:r="1.0"}}}if(o){var d=o.from.id.split(":")[0],f=this.connectionResolver.modules.find(function(e){return e.id===d});if(f){var m,_=(null===(m=d.match(/\d+$/))||void 0===m?void 0:m[0])||"1";switch(f.type){case"Oscillator":i="osc".concat(_,"_outputL");break;case"Filter":i="filter".concat(_,"_outputL");break;case"VCA":i="vca".concat(_,"_outputL");break;case"AudioMath":i="audioMath".concat(_,"_outputL");break;case"Noise":i="noise".concat(_,"_output");break;case"Delay":i="delay".concat(_,"_outputL");break;case"CleanReverb":i="cleanreverb".concat(_,"_outputL");break;case"Panner":i="panner".concat(_,"_outputL");break;case"StereoMixer4":i="stereoMixer4_".concat(_,"_outputL");break;case"Matrix2x2":i="matrix2x2_".concat(_,"_outputL");break;case"SamplePlayer":i="samplePlayer".concat(_,"_outputL");break;case"KickDrum":i="kickDrum".concat(_,"_output");break;case"SnareDrum":i="snareDrum".concat(_,"_output");break;case"Wavetable":i="wavetable".concat(_,"_outputL");break;case"GranularDense":i="granularDense".concat(_,"_outputL");break;case"ChorusFlangeRing":i="chorusFlangeRing".concat(_,"_outputL");break;case"Limiter":i="limiter".concat(_,"_outputL");break;case"NoiseGate":i="noiseGate".concat(_,"_outputL");break;case"EQ8":i="eq8_".concat(_,"_outputL");break;case"Percussion":i="percussion".concat(_,"_output");break;default:i="0.0"}}}return"\n        // VCA ".concat(n," processing\n        {\n            float gain = ").concat(a?"".concat(r," * vca").concat(n,"_gain"):r,";\n            // CRITICAL FIX: Read from input variables set by connection system\n            // OLD BROKEN: float inputL = ").concat(i,"; // Bypassed connections!\n            float inputL = vca").concat(n,"_inputL;\n            float inputR = vca").concat(n,"_inputR;\n\n            // Smooth gain changes to prevent clicking (10% per sample smoothing)\n            vca").concat(n,"_lastGain = vca").concat(n,"_lastGain * 0.9 + gain * 0.1;\n\n            vca").concat(n,"_outputL = inputL * vca").concat(n,"_lastGain;\n            vca").concat(n,"_outputR = inputR * vca").concat(n,"_lastGain;\n        }\n")}},{key:"generateI2SOutCode",value:function(e,n,t){var a=t.find(function(n){return n.to===e.id&&("L"===n.toPort||"inL"===n.toPort)}),o=t.find(function(n){return n.to===e.id&&("R"===n.toPort||"inR"===n.toPort)}),r="0.0",i="0.0";if(a){var c=a.from,l=this.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s,u=(null===(s=c.match(/\d+$/))||void 0===s?void 0:s[0])||"1";switch(l.type){case"VCA":r="vca".concat(u,"_outputL");break;case"Filter":r="filter".concat(u,"_outputL");break;case"Oscillator":r="osc".concat(u,"_outputL");break;case"Delay":r="delay".concat(u,"_outputL");break;case"AudioMath":r="audioMath".concat(u,"_outputL");break;case"Noise":r="noise".concat(u,"_output");break;case"Panner":r="panner".concat(u,"_outputL");break;case"StereoMixer4":r="stereoMixer4_".concat(u,"_outputL");break;case"Matrix2x2":r="matrix2x2_".concat(u,"_outputL");break;case"SamplePlayer":r="samplePlayer".concat(u,"_outputL");break;case"KickDrum":r="kickDrum".concat(u,"_output");break;case"SnareDrum":r="snareDrum".concat(u,"_output");break;case"Wavetable":r="wavetable".concat(u,"_outputL");break;case"GranularDense":r="granular".concat(u,"_outputL");break;case"ChorusFlangeRing":r="chorusFlangeRing".concat(u,"_outputL");break;case"Limiter":r="limiter".concat(u,"_outputL");break;case"NoiseGate":r="noiseGate".concat(u,"_outputL");break;case"EQ8":r="eq8_".concat(u,"_outputL");break;case"Percussion":r="percussion".concat(u,"_output");break;default:r="0.0"}}}if(o){var p=o.from,d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"VCA":i="vca".concat(m,"_outputR");break;case"Filter":i="filter".concat(m,"_outputR");break;case"Oscillator":i="osc".concat(m,"_outputR");break;case"Delay":i="delay".concat(m,"_outputR");break;case"AudioMath":i="audioMath".concat(m,"_outputR");break;case"Noise":i="noise".concat(m,"_output");break;case"CleanReverb":i="cleanreverb".concat(m,"_outputR");break;case"Panner":i="panner".concat(m,"_outputR");break;case"StereoMixer4":i="stereoMixer4_".concat(m,"_outputR");break;case"Matrix2x2":i="matrix2x2_".concat(m,"_outputR");break;case"SamplePlayer":i="samplePlayer".concat(m,"_outputR");break;case"KickDrum":i="kickDrum".concat(m,"_output");break;case"SnareDrum":i="snareDrum".concat(m,"_output");break;case"Wavetable":i="wavetable".concat(m,"_outputR");break;case"GranularDense":i="granular".concat(m,"_outputR");break;case"ChorusFlangeRing":i="chorusFlangeRing".concat(m,"_outputR");break;case"Limiter":i="limiter".concat(m,"_outputR");break;case"NoiseGate":i="noiseGate".concat(m,"_outputR");break;case"EQ8":i="eq8_".concat(m,"_outputR");break;case"Percussion":i="percussion".concat(m,"_output");break;default:i="0.0"}}}return"\n        // I2S Output ".concat(n," - Send to DAC\n        {\n            float inputL = ").concat(r,";\n            float inputR = ").concat(i,";\n\n            i2sout").concat(n,"_inputL = inputL * i2sout").concat(n,"_volume;\n            i2sout").concat(n,"_inputR = inputR * i2sout").concat(n,"_volume;\n\n            // DEBUG: Print I2S input signals every 500ms\n            static unsigned long i2sDebugTime_").concat(n," = 0;\n            if (i == 0 && millis() - i2sDebugTime_").concat(n," > 500) { // Only print once per buffer\n                i2sDebugTime_").concat(n,' = millis();\n                Serial.print("I2S').concat(n,' - inputL=");\n                Serial.print(inputL);\n                Serial.print(", inputR=");\n                Serial.print(inputR);\n                Serial.print(", vol=");\n                Serial.print(i2sout').concat(n,'_volume);\n                Serial.print(", outL=");\n                Serial.println(i2sout').concat(n,"_inputL);\n            }\n\n            // Convert to 16-bit signed integers and add to main audio buffers\n            leftBuffer[i] = i2sout").concat(n,"_inputL;\n            rightBuffer[i] = i2sout").concat(n,"_inputR;\n        }\n")}},{key:"generateWavetableCode",value:function(e,n,t){t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"freq"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"morph"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"table_select"===n.to.port});var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"fm"===n.to.port});return"\n        // Wavetable ".concat(n," processing\n        {\n            // Control processing\n            ").concat(this.generateWavetableControlProcessing(e,n,t),"\n\n            // Audio generation\n            if (wt").concat(n,"_gate > 0.5) {\n                // FM synthesis: modulate frequency with audio-rate input\n                float wt").concat(n,"_fm_input = 0.0;\n                ").concat(a?this.generateWavetableFMConnection(a,n):"","\n                float fm_freq_offset = wt").concat(n,"_fm_input * wt").concat(n,"_fm_amount * wt").concat(n,"_freq;\n                float effective_freq = wt").concat(n,"_freq + fm_freq_offset;\n                effective_freq = constrain(effective_freq, 1.0, 20000.0);\n\n                // Phase increment calculation with FM\n                float phaseIncrement = (effective_freq * WT").concat(n,"_TABLE_SIZE) / SAMPLE_RATE;\n                wt").concat(n,"_phase += phaseIncrement;\n\n                // Keep phase in range [0, TABLE_SIZE) - OPTIMIZED: Single if instead of while loop\n                if (wt").concat(n,"_phase >= WT").concat(n,"_TABLE_SIZE) {\n                    wt").concat(n,"_phase -= WT").concat(n,"_TABLE_SIZE;\n                }\n\n                // Linear interpolation for smooth playback\n                int index1 = (int)wt").concat(n,"_phase;\n                int index2 = (index1 + 1) % WT").concat(n,"_TABLE_SIZE;\n                float frac = wt").concat(n,"_phase - index1;\n\n                // Select wavetable based on current table or morphing\n                float* currentTable;\n                float sample = 0.0;\n\n                if (wt").concat(n,"_morph <= 0.0) {\n                    // Use table 0\n                    currentTable = wt").concat(n,"_table0;\n                    sample = currentTable[index1] * (1.0 - frac) + currentTable[index2] * frac;\n                } else if (wt").concat(n,"_morph < 1.0) {\n                    // Morph between table 0 and table 1\n                    float sample0 = wt").concat(n,"_table0[index1] * (1.0 - frac) + wt").concat(n,"_table0[index2] * frac;\n                    float sample1 = wt").concat(n,"_table1[index1] * (1.0 - frac) + wt").concat(n,"_table1[index2] * frac;\n                    sample = sample0 * (1.0 - wt").concat(n,"_morph) + sample1 * wt").concat(n,"_morph;\n                } else if (wt").concat(n,"_morph < 2.0) {\n                    // Morph between table 1 and table 2\n                    float morphFrac = wt").concat(n,"_morph - 1.0;\n                    float sample1 = wt").concat(n,"_table1[index1] * (1.0 - frac) + wt").concat(n,"_table1[index2] * frac;\n                    float sample2 = wt").concat(n,"_table2[index1] * (1.0 - frac) + wt").concat(n,"_table2[index2] * frac;\n                    sample = sample1 * (1.0 - morphFrac) + sample2 * morphFrac;\n                } else {\n                    // Morph between table 2 and table 3\n                    float morphFrac = constrain(wt").concat(n,"_morph - 2.0, 0.0, 1.0);\n                    float sample2 = wt").concat(n,"_table2[index1] * (1.0 - frac) + wt").concat(n,"_table2[index2] * frac;\n                    float sample3 = wt").concat(n,"_table3[index1] * (1.0 - frac) + wt").concat(n,"_table3[index2] * frac;\n                    sample = sample2 * (1.0 - morphFrac) + sample3 * morphFrac;\n                }\n\n                // Apply gain\n                wt").concat(n,"_outputL = sample * wt").concat(n,"_gain;\n                wt").concat(n,"_outputR = wt").concat(n,"_outputL; // Mono for now\n            } else {\n                wt").concat(n,"_outputL = 0.0;\n                wt").concat(n,"_outputR = 0.0;\n            }\n        }\n")}},{key:"generateGranularCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inR"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"grain_density"===n.to.port}),i=(t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"grain_size_ms"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"position"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"dry_wet"===n.to.port}),"0.0"),c="0.0",l="granular".concat(n,"_grain_density"),s="granular".concat(n,"_grain_size_ms"),u="granular".concat(n,"_position"),p="granular".concat(n,"_pitch"),d="granular".concat(n,"_dry_wet");if(a){var f=a.from.id.split(":")[0],m=this.connectionResolver.modules.find(function(e){return e.id===f});if(m){var _,g=(null===(_=f.match(/\d+$/))||void 0===_?void 0:_[0])||"1";switch(m.type){case"Oscillator":i="osc".concat(g,"_outputL");break;case"VCA":i="vca".concat(g,"_outputL")}}}if(o){var h=o.from.id.split(":")[0],v=this.connectionResolver.modules.find(function(e){return e.id===h});if(v){var b,y=(null===(b=h.match(/\d+$/))||void 0===b?void 0:b[0])||"1";switch(v.type){case"Oscillator":c="osc".concat(y,"_outputR");break;case"VCA":c="vca".concat(y,"_outputR")}}}if(r){var k=r.from.id.split(":")[0],S=this.connectionResolver.modules.find(function(e){return e.id===k});if(S){var x,E=(null===(x=k.match(/\d+$/))||void 0===x?void 0:x[0])||"1";"Pot"===S.type&&(l="(pot".concat(E,"_value * 32.0 + 0.5)"))}}return"\n        // GranularSynth ".concat(n," processing\n        {\n            float inputL = ").concat(i,";\n            float inputR = ").concat(c,";\n            float density = ").concat(l,";\n            float grain_size = ").concat(s,";\n            float position = ").concat(u,";\n            float pitch = ").concat(p,";\n            float dry_wet = ").concat(d,";\n\n            // Write input to circular buffer\n            granular").concat(n,"_buffer_L[granular").concat(n,"_write_pos] = inputL;\n            granular").concat(n,"_buffer_R[granular").concat(n,"_write_pos] = inputR;\n            granular").concat(n,"_write_pos = (granular").concat(n,"_write_pos + 1) % granular").concat(n,"_buffer_size;\n\n            // Update grain interval based on density\n            granular").concat(n,"_grain_interval_ms = 1000.0 / density;\n\n            // Trigger new grains based on density\n            unsigned long currentTime = millis();\n            if (currentTime - granular").concat(n,"_last_grain_trigger >= granular").concat(n,"_grain_interval_ms) {\n                // Find inactive grain slot\n                for (int g = 0; g < 4; g++) {\n                    if (!granular").concat(n,"_grains[g].active) {\n                        // Activate new grain\n                        granular").concat(n,"_grains[g].active = true;\n                        granular").concat(n,"_grains[g].position = position + ((random(-100, 100) / 100.0) * granular").concat(n,"_position_spread);\n                        granular").concat(n,"_grains[g].pitch_ratio = 1.0 + pitch + ((random(-100, 100) / 100.0) * granular").concat(n,"_pitch_spread);\n                        granular").concat(n,"_grains[g].amplitude = 0.25; // 1/4 volume per grain for 4 concurrent grains\n                        granular").concat(n,"_grains[g].grain_size_samples = (int)(grain_size * 44.1); // ms to samples\n                        granular").concat(n,"_grains[g].samples_remaining = granular").concat(n,"_grains[g].grain_size_samples;\n                        break;\n                    }\n                }\n                granular").concat(n,"_last_grain_trigger = currentTime;\n            }\n\n            // Process all active grains\n            float outputL = 0.0;\n            float outputR = 0.0;\n\n            for (int g = 0; g < 4; g++) {\n                if (granular").concat(n,"_grains[g].active) {\n                    // Calculate buffer position for this grain\n                    float bufferPos = granular").concat(n,"_grains[g].position * granular").concat(n,"_buffer_size;\n                    int pos = (int)bufferPos % granular").concat(n,"_buffer_size;\n\n                    // Apply envelope (simple triangular)\n                    float envelope = 1.0;\n                    float progress = (float)(granular").concat(n,"_grains[g].grain_size_samples - granular").concat(n,"_grains[g].samples_remaining) / granular").concat(n,"_grains[g].grain_size_samples;\n                    if (progress < 0.5) {\n                        envelope = progress * 2.0; // Attack\n                    } else {\n                        envelope = 2.0 - (progress * 2.0); // Release\n                    }\n\n                    // Read from buffer and apply grain\n                    outputL += granular").concat(n,"_buffer_L[pos] * granular").concat(n,"_grains[g].amplitude * envelope;\n                    outputR += granular").concat(n,"_buffer_R[pos] * granular").concat(n,"_grains[g].amplitude * envelope;\n\n                    // Update grain state\n                    granular").concat(n,"_grains[g].samples_remaining--;\n                    if (granular").concat(n,"_grains[g].samples_remaining <= 0) {\n                        granular").concat(n,"_grains[g].active = false;\n                    }\n\n                    // Update position based on pitch\n                    granular").concat(n,"_grains[g].position += granular").concat(n,"_grains[g].pitch_ratio / granular").concat(n,"_buffer_size;\n                    if (granular").concat(n,"_grains[g].position >= 1.0) {\n                        granular").concat(n,"_grains[g].position -= 1.0;\n                    }\n                }\n            }\n\n            // Mix dry and processed signals\n            granular").concat(n,"_outputL = (inputL * (1.0 - dry_wet)) + (outputL * dry_wet);\n            granular").concat(n,"_outputR = (inputR * (1.0 - dry_wet)) + (outputR * dry_wet);\n        }\n")}},{key:"generateKickDrumCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"trigger"===n.to.port}),o="false";if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c,l=(null===(c=r.match(/\d+$/))||void 0===c?void 0:c[0])||"1";switch(i.type){case"LEDButton":var s=i.params.index||1;o="btn".concat(s,"_pressed");break;case"Clock":o="clock".concat(l,"_output")}}}return"\n        // KickDrum ".concat(n," - Multi-Layer Drum Synthesizer (Sample + Oscillator + Noise)\n        {\n            bool trigger = ").concat(o,";\n\n            // Trigger all layers on rising edge\n            static bool kick").concat(n,"_lastTrigger = false;\n            if (trigger && !kick").concat(n,"_lastTrigger) {\n                // Sample layer trigger\n                if (kick").concat(n,"_lastLoadedFile != kick").concat(n,'_currentFile) {\n                    String filename = "/kick0" + String(kick').concat(n,'_currentFile) + ".wav";\n                    if (SD.exists(filename)) {\n                        kick').concat(n,"_player.loadFile(filename);\n                        kick").concat(n,"_lastLoadedFile = kick").concat(n,"_currentFile;\n                        kick").concat(n,"_currentFileName = filename;\n                    }\n                }\n                kick").concat(n,"_player.setPlaybackSpeed(kick").concat(n,"_sample_pitch);\n                kick").concat(n,"_player.play();\n\n                // Oscillator layer trigger\n                kick").concat(n,"_osc_amp_stage = 1; // Start attack\n                kick").concat(n,"_osc_amp_time = 0.0;\n\n                // Pitch envelope trigger\n                kick").concat(n,"_pitch_env_stage = 1; // Start attack\n                kick").concat(n,"_pitch_env_time = 0.0;\n                kick").concat(n,"_osc_pitch_env = 0.0; // Start at zero, build up to amount\n\n                // Noise layer trigger\n                kick").concat(n,"_noise_amp_stage = 1; // Start noise attack\n                kick").concat(n,"_noise_amp_time = 0.0;\n\n                kick").concat(n,"_triggered = true;\n            }\n            kick").concat(n,"_lastTrigger = trigger;\n\n            // === SAMPLE LAYER PROCESSING ===\n            if (kick").concat(n,"_player.playing()) {\n                int16_t sample = kick").concat(n,"_player.getNextSample();\n                float sampleFloat = (float)sample / 32767.0f;\n                kick").concat(n,"_sample_outputL = sampleFloat * kick").concat(n,"_sample_gain;\n                kick").concat(n,"_sample_outputR = kick").concat(n,"_sample_outputL;\n            } else {\n                kick").concat(n,"_sample_outputL = 0.0;\n                kick").concat(n,"_sample_outputR = 0.0;\n            }\n\n            // === OSCILLATOR LAYER PROCESSING ===\n            kick").concat(n,"_osc_outputL = 0.0;\n            kick").concat(n,"_osc_outputR = 0.0;\n\n            if (kick").concat(n,"_osc_amp_stage > 0) {\n                float sampleTime = 1.0 / SAMPLE_RATE;\n                kick").concat(n,"_osc_amp_time += sampleTime;\n\n                // Oscillator amplitude envelope\n                switch (kick").concat(n,"_osc_amp_stage) {\n                    case 1: // Attack\n                        if (kick").concat(n,"_osc_amp_time >= kick").concat(n,"_osc_amp_attack) {\n                            kick").concat(n,"_osc_amp_stage = 2;\n                            kick").concat(n,"_osc_amp_time = 0.0;\n                            kick").concat(n,"_osc_amp_env = 1.0;\n                        } else {\n                            kick").concat(n,"_osc_amp_env = kick").concat(n,"_osc_amp_time / kick").concat(n,"_osc_amp_attack;\n                        }\n                        break;\n\n                    case 2: // Decay\n                        if (kick").concat(n,"_osc_amp_time >= kick").concat(n,"_osc_amp_decay) {\n                            kick").concat(n,"_osc_amp_stage = 3;\n                            kick").concat(n,"_osc_amp_time = 0.0;\n                        } else {\n                            float progress = kick").concat(n,"_osc_amp_time / kick").concat(n,"_osc_amp_decay;\n                            kick").concat(n,"_osc_amp_env = 1.0 - progress * (1.0 - kick").concat(n,"_osc_amp_sustain);\n                        }\n                        break;\n\n                    case 3: // Sustain\n                        kick").concat(n,"_osc_amp_env = kick").concat(n,"_osc_amp_sustain;\n                        if (!trigger) {\n                            kick").concat(n,"_osc_amp_stage = 4; // Release\n                            kick").concat(n,"_osc_amp_time = 0.0;\n                        }\n                        break;\n\n                    case 4: // Release\n                        if (kick").concat(n,"_osc_amp_time >= kick").concat(n,"_osc_amp_release) {\n                            kick").concat(n,"_osc_amp_stage = 0; // Idle\n                            kick").concat(n,"_osc_amp_env = 0.0;\n                        } else {\n                            float progress = kick").concat(n,"_osc_amp_time / kick").concat(n,"_osc_amp_release;\n                            kick").concat(n,"_osc_amp_env = kick").concat(n,"_osc_amp_sustain * (1.0 - progress);\n                        }\n                        break;\n                }\n\n                // Pitch envelope ADSR processing\n                if (kick").concat(n,"_pitch_env_stage > 0) {\n                    kick").concat(n,"_pitch_env_time += sampleTime;\n\n                    switch (kick").concat(n,"_pitch_env_stage) {\n                        case 1: // Attack\n                            if (kick").concat(n,"_pitch_env_time >= kick").concat(n,"_pitch_env_attack) {\n                                kick").concat(n,"_pitch_env_stage = 2;\n                                kick").concat(n,"_pitch_env_time = 0.0;\n                                kick").concat(n,"_osc_pitch_env = kick").concat(n,"_pitch_env_amount;\n                            } else {\n                                kick").concat(n,"_osc_pitch_env = (kick").concat(n,"_pitch_env_time / kick").concat(n,"_pitch_env_attack) * kick").concat(n,"_pitch_env_amount;\n                            }\n                            break;\n\n                        case 2: // Decay\n                            if (kick").concat(n,"_pitch_env_time >= kick").concat(n,"_pitch_env_decay) {\n                                kick").concat(n,"_pitch_env_stage = 3;\n                                kick").concat(n,"_pitch_env_time = 0.0;\n                                kick").concat(n,"_osc_pitch_env = kick").concat(n,"_pitch_env_amount * kick").concat(n,"_pitch_env_sustain;\n                            } else {\n                                float progress = kick").concat(n,"_pitch_env_time / kick").concat(n,"_pitch_env_decay;\n                                kick").concat(n,"_osc_pitch_env = kick").concat(n,"_pitch_env_amount * (1.0 - progress * (1.0 - kick").concat(n,"_pitch_env_sustain));\n                            }\n                            break;\n\n                        case 3: // Sustain\n                            kick").concat(n,"_osc_pitch_env = kick").concat(n,"_pitch_env_amount * kick").concat(n,"_pitch_env_sustain;\n                            if (!trigger) {\n                                kick").concat(n,"_pitch_env_stage = 4; // Release\n                                kick").concat(n,"_pitch_env_time = 0.0;\n                            }\n                            break;\n\n                        case 4: // Release\n                            if (kick").concat(n,"_pitch_env_time >= kick").concat(n,"_pitch_env_release) {\n                                kick").concat(n,"_pitch_env_stage = 0; // Idle\n                                kick").concat(n,"_osc_pitch_env = 0.0;\n                            } else {\n                                float progress = kick").concat(n,"_pitch_env_time / kick").concat(n,"_pitch_env_release;\n                                kick").concat(n,"_osc_pitch_env = (kick").concat(n,"_pitch_env_amount * kick").concat(n,"_pitch_env_sustain) * (1.0 - progress);\n                            }\n                            break;\n                    }\n                }\n\n                // Generate oscillator with pitch modulation\n                if (!kick").concat(n,"_osc_mute && kick").concat(n,"_osc_amp_env > 0.001) {\n                    float pitchMod = pow(2.0, kick").concat(n,"_osc_pitch_env);\n                    float oscFreq = kick").concat(n,"_osc_freq * pitchMod;\n                    kick").concat(n,"_osc_phase += 2.0 * PI * oscFreq / SAMPLE_RATE;\n                    if (kick").concat(n,"_osc_phase >= 2.0 * PI) kick").concat(n,"_osc_phase -= 2.0 * PI;\n\n                    float osc_sample = sin(kick").concat(n,"_osc_phase);\n\n                    // Apply distortion if enabled\n                    if (kick").concat(n,"_osc_distortion > 0.0) {\n                        float drive = 1.0 + kick").concat(n,"_osc_distortion; // 1-11 range\n                        osc_sample *= drive;\n                        osc_sample = tanh(osc_sample); // Soft saturation\n                    }\n\n                    osc_sample *= kick").concat(n,"_osc_level * kick").concat(n,"_osc_amp_env;\n                    kick").concat(n,"_osc_outputL = osc_sample;\n                    kick").concat(n,"_osc_outputR = osc_sample;\n                } else if (kick").concat(n,"_osc_amp_stage == 0) {\n                    // Reset phase when envelope is idle to prevent artifacts on retrigger\n                    kick").concat(n,"_osc_phase = 0.0;\n                }\n            }\n\n            // === NOISE LAYER PROCESSING ===\n            kick").concat(n,"_noise_outputL = 0.0;\n            kick").concat(n,"_noise_outputR = 0.0;\n\n            if (kick").concat(n,"_noise_amp_stage > 0) {\n                float sampleTime = 1.0 / SAMPLE_RATE;\n                kick").concat(n,"_noise_amp_time += sampleTime;\n\n                // Noise amplitude envelope\n                switch (kick").concat(n,"_noise_amp_stage) {\n                    case 1: // Attack\n                        if (kick").concat(n,"_noise_amp_time >= kick").concat(n,"_noise_amp_attack) {\n                            kick").concat(n,"_noise_amp_stage = 2;\n                            kick").concat(n,"_noise_amp_time = 0.0;\n                            kick").concat(n,"_noise_amp_env = 1.0;\n                        } else {\n                            kick").concat(n,"_noise_amp_env = kick").concat(n,"_noise_amp_time / kick").concat(n,"_noise_amp_attack;\n                        }\n                        break;\n\n                    case 2: // Decay\n                        if (kick").concat(n,"_noise_amp_time >= kick").concat(n,"_noise_amp_decay) {\n                            kick").concat(n,"_noise_amp_stage = 3;\n                            kick").concat(n,"_noise_amp_time = 0.0;\n                        } else {\n                            float progress = kick").concat(n,"_noise_amp_time / kick").concat(n,"_noise_amp_decay;\n                            kick").concat(n,"_noise_amp_env = 1.0 - progress * (1.0 - kick").concat(n,"_noise_amp_sustain);\n                        }\n                        break;\n\n                    case 3: // Sustain\n                        kick").concat(n,"_noise_amp_env = kick").concat(n,"_noise_amp_sustain;\n                        if (!trigger) {\n                            kick").concat(n,"_noise_amp_stage = 4; // Release\n                            kick").concat(n,"_noise_amp_time = 0.0;\n                        }\n                        break;\n\n                    case 4: // Release\n                        if (kick").concat(n,"_noise_amp_time >= kick").concat(n,"_noise_amp_release) {\n                            kick").concat(n,"_noise_amp_stage = 0; // Idle\n                            kick").concat(n,"_noise_amp_env = 0.0;\n                        } else {\n                            float progress = kick").concat(n,"_noise_amp_time / kick").concat(n,"_noise_amp_release;\n                            kick").concat(n,"_noise_amp_env = kick").concat(n,"_noise_amp_sustain * (1.0 - progress);\n                        }\n                        break;\n                }\n\n                // Generate noise with FPU-safe implementation\n                if (kick").concat(n,"_noise_amp_env > 0.001) {\n                    float white_noise = 0.0;\n                    float pink_noise = 0.0;\n                    float brown_noise = 0.0;\n\n                    // FPU-safe LCG noise generation (isolated from oscillator)\n                    uint32_t temp_seed = kick").concat(n,"_noise_lcg_seed;\n                    temp_seed = (temp_seed * 1103515245U + 12345U) & 0x7FFFFFFFU;\n                    kick").concat(n,"_noise_lcg_seed = temp_seed;\n                    int32_t noise_int = (int32_t)(temp_seed & 0xFFFF) - 32768;\n                    white_noise = (float)noise_int * (1.0f / 32768.0f);\n\n                    // Simple noise approximations (FPU-safe for now)\n                    pink_noise = white_noise * 0.5; // Scaled approximation\n                    brown_noise = white_noise * 0.3; // Scaled approximation\n\n                    // Mix noise types based on current type and morph\n                    float noise_output = 0.0;\n                    if (kick").concat(n,"_noise_type == 0) {\n                        // White noise base - morph towards pink\n                        noise_output = white_noise * (1.0 - kick").concat(n,"_noise_morph) + pink_noise * kick").concat(n,"_noise_morph;\n                    } else if (kick").concat(n,"_noise_type == 1) {\n                        // Pink noise base - morph towards brown\n                        noise_output = pink_noise * (1.0 - kick").concat(n,"_noise_morph) + brown_noise * kick").concat(n,"_noise_morph;\n                    } else if (kick").concat(n,"_noise_type == 2) {\n                        // Brown noise base - morph towards white\n                        noise_output = brown_noise * (1.0 - kick").concat(n,"_noise_morph) + white_noise * kick").concat(n,"_noise_morph;\n                    }\n\n                    float final_noise = noise_output * kick").concat(n,"_noise_gain * kick").concat(n,"_noise_amp_env;\n                    kick").concat(n,"_noise_outputL = final_noise;\n                    kick").concat(n,"_noise_outputR = final_noise;\n                }\n            }\n\n            // === LAYER MIXING ===\n            // Mix all active layers to master output\n            kick").concat(n,"_outputL = kick").concat(n,"_sample_outputL + kick").concat(n,"_osc_outputL + kick").concat(n,"_noise_outputL;\n            kick").concat(n,"_outputR = kick").concat(n,"_sample_outputR + kick").concat(n,"_osc_outputR + kick").concat(n,"_noise_outputR;\n        }\n")}},{key:"generateNoiseCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gain"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"morph"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"type"===n.to.port}),c="noise".concat(n,"_gate"),l="noise".concat(n,"_gain"),s="noise".concat(n,"_morph"),u="noise".concat(n,"_type");if(a){var p=a.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"LEDButton":var _=d.params.index||1;c="btn".concat(_,"_gate");break;case"ADSR":c="(adsr".concat(m,"_output > 0.1)")}}}if(o){var g=o.from.id.split(":")[0],h=this.connectionResolver.modules.find(function(e){return e.id===g});if(h){var v,b=(null===(v=g.match(/\d+$/))||void 0===v?void 0:v[0])||"1";switch(h.type){case"Pot":l=this.getPotReference(h,b);break;case"ADSR":l="adsr".concat(b,"_output")}}}if(r){var y=r.from.id.split(":")[0],k=this.connectionResolver.modules.find(function(e){return e.id===y});if(k){var S,x=(null===(S=y.match(/\d+$/))||void 0===S?void 0:S[0])||"1";switch(k.type){case"Pot":var E=k.params.index||1;s="pot".concat(E,"_value");break;case"LFO":s="lfo".concat(x,"_output")}}}if(i){var w,P=i.from.id.split(":")[0],C=this.connectionResolver.modules.find(function(e){return e.id===P});if(C&&(null===(w=P.match(/\d+$/))||void 0===w||w[0],"Pot"===C.type)){var R=C.params.index||1;u="(int)(pot".concat(R,"_value * 2.99)")}}return"\n        // Noise Generator ".concat(n," processing\n        {\n            float gate = ").concat(c," ? 1.0 : 0.0;\n            float gain = ").concat(l,";\n            float morph = constrain(").concat(s,", 0.0, 1.0);\n            int noiseType = ").concat(u,';\n            noiseType = constrain(noiseType, 0, 2); // Ensure valid range\n\n            // DEBUG: Noise generator gate\n            static unsigned long lastNoiseDebug = 0;\n            if (millis() - lastNoiseDebug > 500) {\n                lastNoiseDebug = millis();\n                Serial.print("DEBUG: Noise generator gate=");\n                Serial.print(gate);\n                Serial.print(", gain=");\n                Serial.print(gain);\n                Serial.print(", currentBank=");\n                Serial.println(currentBank);\n            }\n\n            if (gate > 0.1) {\n                float white_noise = 0.0;\n                float pink_noise = 0.0;\n                float brown_noise = 0.0;\n\n                // Generate white noise using isolated deterministic LCG (avoids ESP32 FPU interference)\n                // Use completely isolated integer math to avoid affecting oscillator FPU state\n                uint32_t temp_seed = noise').concat(n,"_lcg_seed;\n                temp_seed = (temp_seed * 1103515245U + 12345U) & 0x7FFFFFFFU;\n                noise").concat(n,"_lcg_seed = temp_seed;\n                // Convert to float using safe integer division to avoid FPU precision issues\n                int32_t noise_int = (int32_t)(temp_seed & 0xFFFF) - 32768;\n                white_noise = (float)noise_int * (1.0f / 32768.0f);\n\n                // TEMPORARY: White noise only until FPU interference resolved\n                // Complex filtering causes oscillator frequency modulation on ESP32\n                pink_noise = white_noise * 0.5; // Scaled white noise approximation\n                brown_noise = white_noise * 0.3; // Scaled white noise approximation\n\n                // Mix noise types based on current type and morph\n                float output = 0.0;\n                if (noiseType == 0) {\n                    // White noise base - morph towards pink\n                    output = white_noise * (1.0 - morph) + pink_noise * morph * 0.11;\n                } else if (noiseType == 1) {\n                    // Pink noise base - morph towards brown\n                    output = pink_noise * 0.11 * (1.0 - morph) + brown_noise * morph;\n                } else if (noiseType == 2) {\n                    // Brown noise base - morph towards white\n                    output = brown_noise * (1.0 - morph) + white_noise * morph;\n                }\n\n                noise").concat(n,"_output = output * gain;\n\n                // DEBUG: Print noise output every 500ms\n                static unsigned long noiseDebugTime_").concat(n," = 0;\n                if (millis() - noiseDebugTime_").concat(n," > 500) {\n                    noiseDebugTime_").concat(n,' = millis();\n                    Serial.print("Noise').concat(n,' - gate=");\n                    Serial.print(gate);\n                    Serial.print(", gain=");\n                    Serial.print(gain);\n                    Serial.print(", out=");\n                    Serial.println(noise').concat(n,"_output);\n                }\n            } else {\n                noise").concat(n,"_output = 0.0;\n            }\n        }\n")}},{key:"generateReverbCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inR"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"mix"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"size"===n.to.port}),c=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"damp"===n.to.port}),l="0.0",s="0.0",u="reverb".concat(n,"_mix"),p="reverb".concat(n,"_size"),d="reverb".concat(n,"_damp");if(a){var f=a.from.id.split(":")[0],m=this.connectionResolver.modules.find(function(e){return e.id===f});if(m){var _,g=(null===(_=f.match(/\d+$/))||void 0===_?void 0:_[0])||"1";switch(m.type){case"VCA":l="vca".concat(g,"_outputL");break;case"Oscillator":l="osc".concat(g,"_outputL");break;case"Filter":l="filter".concat(g,"_outputL");break;case"Delay":l="delay".concat(g,"_outputL");break;case"LineIn":l="linein".concat(g,"_outputL");break;case"CleanReverb":l="cleanreverb".concat(g,"_outputL");break;case"Reverb":l="reverb".concat(g,"_outputL")}}}if(o){var h=o.from.id.split(":")[0],v=this.connectionResolver.modules.find(function(e){return e.id===h});if(v){var b,y=(null===(b=h.match(/\d+$/))||void 0===b?void 0:b[0])||"1";switch(v.type){case"VCA":s="vca".concat(y,"_outputR");break;case"Oscillator":s="osc".concat(y,"_outputR");break;case"Filter":s="filter".concat(y,"_outputR");break;case"Delay":s="delay".concat(y,"_outputR");break;case"LineIn":s="linein".concat(y,"_outputR");break;case"CleanReverb":s="cleanreverb".concat(y,"_outputR");break;case"Reverb":s="reverb".concat(y,"_outputR")}}}if(r){var k=r.from.id.split(":")[0],S=this.connectionResolver.modules.find(function(e){return e.id===k});if(S){var x,E=(null===(x=k.match(/\d+$/))||void 0===x?void 0:x[0])||"1";switch(S.type){case"Pot":u="pot".concat(E,"_value");break;case"LFO":u="lfo".concat(E,"_output")}}}if(i){var w=i.from.id.split(":")[0],P=this.connectionResolver.modules.find(function(e){return e.id===w});if(P){var C,R=(null===(C=w.match(/\d+$/))||void 0===C?void 0:C[0])||"1";switch(P.type){case"Pot":p="pot".concat(R,"_value");break;case"LFO":p="lfo".concat(R,"_output")}}}if(c){var L=c.from.id.split(":")[0],I=this.connectionResolver.modules.find(function(e){return e.id===L});if(I){var M,D=(null===(M=L.match(/\d+$/))||void 0===M?void 0:M[0])||"1";switch(I.type){case"Pot":d="pot".concat(D,"_value");break;case"LFO":d="lfo".concat(D,"_output")}}}return"\n        // Reverb ".concat(n," processing - Clouds Reverb (Dattorro Algorithm)\n        {\n            float inputL = ").concat(l,";\n            float inputR = ").concat(s,";\n            float mix = constrain(").concat(u,", 0.0, 1.0);\n            float size = constrain(").concat(p,", 0.0, 1.0);\n            float damp = constrain(").concat(d,", 0.0, 1.0);\n\n            reverb").concat(n,"_inputL = inputL;\n            reverb").concat(n,"_inputR = inputR;\n\n            // Mono input sum for reverb tank\n            float input_mono = (inputL + inputR) * 0.5;\n\n            // Pre-delay\n            float predelayed = reverb").concat(n,"_predelay[reverb").concat(n,"_predelay_pos];\n            reverb").concat(n,"_predelay[reverb").concat(n,"_predelay_pos] = input_mono;\n            reverb").concat(n,"_predelay_pos = (reverb").concat(n,"_predelay_pos + 1) % REVERB").concat(n,"_PREDELAY_SIZE;\n\n            // Diffusion stage (4 all-pass filters in series)\n            float diffused = predelayed;\n\n            // All-pass 1 (Left tank input)\n            float ap1_delay = reverb").concat(n,"_ap1L[reverb").concat(n,"_ap1L_pos];\n            float ap1_out = -0.75 * diffused + ap1_delay;\n            reverb").concat(n,"_ap1L[reverb").concat(n,"_ap1L_pos] = diffused + 0.75 * ap1_out;\n            reverb").concat(n,"_ap1L_pos = (reverb").concat(n,"_ap1L_pos + 1) % REVERB").concat(n,"_AP1_SIZE;\n\n            // All-pass 2 (Left tank continued)\n            float ap2_delay = reverb").concat(n,"_ap2L[reverb").concat(n,"_ap2L_pos];\n            float ap2_out = -0.75 * ap1_out + ap2_delay;\n            reverb").concat(n,"_ap2L[reverb").concat(n,"_ap2L_pos] = ap1_out + 0.75 * ap2_out;\n            reverb").concat(n,"_ap2L_pos = (reverb").concat(n,"_ap2L_pos + 1) % REVERB").concat(n,"_AP2_SIZE;\n\n            // Split into left and right tanks\n            float tankL_input = ap2_out;\n            float tankR_input = ap2_out;\n\n            // Left tank processing\n            // Delay 1\n            float delay1_out = reverb").concat(n,"_delay1L[reverb").concat(n,"_delay1L_pos];\n            reverb").concat(n,"_delay1L[reverb").concat(n,"_delay1L_pos] = tankL_input;\n            reverb").concat(n,"_delay1L_pos = (reverb").concat(n,"_delay1L_pos + 1) % REVERB").concat(n,"_DELAY1_SIZE;\n\n            // Low-pass damping filter\n            reverb").concat(n,"_lpf_L = reverb").concat(n,"_lpf_L + damp * (delay1_out - reverb").concat(n,"_lpf_L);\n            delay1_out = reverb").concat(n,"_lpf_L;\n\n            // All-pass 3\n            float ap3_delay = reverb").concat(n,"_ap3R[reverb").concat(n,"_ap3R_pos];\n            float ap3_out = -0.5 * delay1_out + ap3_delay;\n            reverb").concat(n,"_ap3R[reverb").concat(n,"_ap3R_pos] = delay1_out + 0.5 * ap3_out;\n            reverb").concat(n,"_ap3R_pos = (reverb").concat(n,"_ap3R_pos + 1) % REVERB").concat(n,"_AP3_SIZE;\n\n            // Delay 2 (main left delay)\n            float delay2_out = reverb").concat(n,"_delay2L[reverb").concat(n,"_delay2L_pos];\n            reverb").concat(n,"_delay2L[reverb").concat(n,"_delay2L_pos] = ap3_out + reverb").concat(n,"_feedback * size * delay2_out;\n            reverb").concat(n,"_delay2L_pos = (reverb").concat(n,"_delay2L_pos + 1) % REVERB").concat(n,"_DELAY2_SIZE;\n\n            // Right tank processing (simplified for brevity)\n            // All-pass 4\n            float ap4_delay = reverb").concat(n,"_ap4R[reverb").concat(n,"_ap4R_pos];\n            float ap4_out = -0.5 * tankR_input + ap4_delay;\n            reverb").concat(n,"_ap4R[reverb").concat(n,"_ap4R_pos] = tankR_input + 0.5 * ap4_out;\n            reverb").concat(n,"_ap4R_pos = (reverb").concat(n,"_ap4R_pos + 1) % REVERB").concat(n,"_AP4_SIZE;\n\n            // Low-pass damping filter (right)\n            reverb").concat(n,"_lpf_R = reverb").concat(n,"_lpf_R + damp * (ap4_out - reverb").concat(n,"_lpf_R);\n            ap4_out = reverb").concat(n,"_lpf_R;\n\n            // Delay 3 (main right delay)\n            float delay3_out = reverb").concat(n,"_delay3R[reverb").concat(n,"_delay3R_pos];\n            reverb").concat(n,"_delay3R[reverb").concat(n,"_delay3R_pos] = ap4_out + reverb").concat(n,"_feedback * size * delay3_out;\n            reverb").concat(n,"_delay3R_pos = (reverb").concat(n,"_delay3R_pos + 1) % REVERB").concat(n,"_DELAY3_SIZE;\n\n            // Output taps from delay lines (multiple taps for fuller sound)\n            float outL = delay2_out * 0.6 + delay3_out * 0.3;\n            float outR = delay3_out * 0.6 + delay2_out * 0.3;\n\n            // Final output mixing\n            reverb").concat(n,"_outputL = inputL * (1.0 - mix) + outL * mix;\n            reverb").concat(n,"_outputR = inputR * (1.0 - mix) + outR * mix;\n        }\n")}},{key:"generateCleanReverbCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"mix"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"size"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"damp"===n.to.port}),i="cleanreverb".concat(n,"_mix"),c="cleanreverb".concat(n,"_size"),l="cleanreverb".concat(n,"_damp");if(a){var s=a.from.id.split(":")[0],u=this.connectionResolver.modules.find(function(e){return e.id===s});if(u){var p,d=(null===(p=s.match(/\d+$/))||void 0===p?void 0:p[0])||"1";switch(u.type){case"Pot":i="pot".concat(d,"_value");break;case"LFO":i="lfo".concat(d,"_output");break;default:i="".concat(u.type.toLowerCase()).concat(d,"_output")}}}if(o){var f=o.from.id.split(":")[0],m=this.connectionResolver.modules.find(function(e){return e.id===f});if(m){var _,g=(null===(_=f.match(/\d+$/))||void 0===_?void 0:_[0])||"1";switch(m.type){case"Pot":c="pot".concat(g,"_value");break;case"LFO":c="lfo".concat(g,"_output");break;default:c="".concat(m.type.toLowerCase()).concat(g,"_output")}}}if(r){var h=r.from.id.split(":")[0],v=this.connectionResolver.modules.find(function(e){return e.id===h});if(v){var b,y=(null===(b=h.match(/\d+$/))||void 0===b?void 0:b[0])||"1";switch(v.type){case"Pot":l="pot".concat(y,"_value");break;case"LFO":l="lfo".concat(y,"_output");break;default:l="".concat(v.type.toLowerCase()).concat(y,"_output")}}}return"\n        // CleanReverb ".concat(e.id," processing (Freeverb-style diffuse reverb)\n        {\n            // Inputs & raw params (from standard connection system)\n            float inL  = cleanreverb").concat(n,"_inputL;\n            float inR  = cleanreverb").concat(n,"_inputR;\n            float mix  = ").concat(i,";\n            float size = ").concat(c,";\n            float damp = ").concat(l,";\n\n            // Parameter smoothing (one-pole)\n            const float z = 0.0025f; // ~2.5 ms smoothing at 44.1kHz inside sample loop chunk\n            cleanreverb").concat(n,"_mix_z  += z * (mix  - cleanreverb").concat(n,"_mix_z);\n            cleanreverb").concat(n,"_size_z += z * (size - cleanreverb").concat(n,"_size_z);\n            cleanreverb").concat(n,"_damp_z += z * (damp - cleanreverb").concat(n,"_damp_z);\n            mix  = constrain(cleanreverb").concat(n,"_mix_z,  0.0f, 1.0f);\n            size = constrain(cleanreverb").concat(n,"_size_z, 0.0f, 1.0f);\n            damp = constrain(cleanreverb").concat(n,'_damp_z, 0.0f, 1.0f);\n\n            // Map "size" to feedback gain (higher = longer decay, smoother tail)\n            // Extended range: 0.7-0.88 gives classic reverb character with smooth decay\n            const float g = constrain(0.70f + 0.18f * size, 0.0f, 0.88f);\n\n            // Map "damp" to LPF coefficient (Freeverb-style damping)\n            // Higher damp => more filtering => darker tail\n            const float d = constrain(0.2f + 0.7f * (1.0f - damp), 0.05f, 0.95f);\n\n            // Gentle input limiter\n            inL = inL > 0.8f ? 0.8f : (inL < -0.8f ? -0.8f : inL);\n            inR = inR > 0.8f ? 0.8f : (inR < -0.8f ? -0.8f : inR);\n\n            // Mono feed to comb bank (classic Schroeder); stereo will be built later\n            float x = 0.5f * (inL + inR);\n\n            // Predelay (early reflections feel)\n            float pdTap = cleanreverb').concat(n,"_predelay[cleanreverb").concat(n,"_predelay_pos];\n            cleanreverb").concat(n,"_predelay[cleanreverb").concat(n,"_predelay_pos] = x;\n            if (++cleanreverb").concat(n,"_predelay_pos >= CLEANREVERB").concat(n,"_PREDELAY_SIZE) cleanreverb").concat(n,"_predelay_pos = 0;\n            x = pdTap;\n\n            // 4 parallel feedback combs with LPF *inside* the feedback loop (Freeverb style)\n            // comb1\n            float c1 = cleanreverb").concat(n,"_comb1[cleanreverb").concat(n,"_comb1_pos];\n            cleanreverb").concat(n,"_comb1_lpf = c1 * (1.0f - d) + cleanreverb").concat(n,"_comb1_lpf * d;\n            cleanreverb").concat(n,"_comb1[cleanreverb").concat(n,"_comb1_pos] = x + g * cleanreverb").concat(n,"_comb1_lpf;\n            if (++cleanreverb").concat(n,"_comb1_pos >= CLEANREVERB").concat(n,"_COMB1_SIZE) cleanreverb").concat(n,"_comb1_pos = 0;\n\n            // comb2\n            float c2 = cleanreverb").concat(n,"_comb2[cleanreverb").concat(n,"_comb2_pos];\n            cleanreverb").concat(n,"_comb2_lpf = c2 * (1.0f - d) + cleanreverb").concat(n,"_comb2_lpf * d;\n            cleanreverb").concat(n,"_comb2[cleanreverb").concat(n,"_comb2_pos] = x + g * cleanreverb").concat(n,"_comb2_lpf;\n            if (++cleanreverb").concat(n,"_comb2_pos >= CLEANREVERB").concat(n,"_COMB2_SIZE) cleanreverb").concat(n,"_comb2_pos = 0;\n\n            // comb3\n            float c3 = cleanreverb").concat(n,"_comb3[cleanreverb").concat(n,"_comb3_pos];\n            cleanreverb").concat(n,"_comb3_lpf = c3 * (1.0f - d) + cleanreverb").concat(n,"_comb3_lpf * d;\n            cleanreverb").concat(n,"_comb3[cleanreverb").concat(n,"_comb3_pos] = x + g * cleanreverb").concat(n,"_comb3_lpf;\n            if (++cleanreverb").concat(n,"_comb3_pos >= CLEANREVERB").concat(n,"_COMB3_SIZE) cleanreverb").concat(n,"_comb3_pos = 0;\n\n            // comb4\n            float c4 = cleanreverb").concat(n,"_comb4[cleanreverb").concat(n,"_comb4_pos];\n            cleanreverb").concat(n,"_comb4_lpf = c4 * (1.0f - d) + cleanreverb").concat(n,"_comb4_lpf * d;\n            cleanreverb").concat(n,"_comb4[cleanreverb").concat(n,"_comb4_pos] = x + g * cleanreverb").concat(n,"_comb4_lpf;\n            if (++cleanreverb").concat(n,"_comb4_pos >= CLEANREVERB").concat(n,"_COMB4_SIZE) cleanreverb").concat(n,"_comb4_pos = 0;\n\n            // Sum combs\n            float combSum = 0.25f * (c1 + c2 + c3 + c4);\n\n            // 2 serial allpasses for diffusion (critical for smooth reverb character)\n            // AP1\n            float ap1_delay = cleanreverb").concat(n,"_ap1[cleanreverb").concat(n,"_ap1_pos];\n            const float ap1_a = 0.5f;\n            float ap1_out = -ap1_a * combSum + ap1_delay;\n            cleanreverb").concat(n,"_ap1[cleanreverb").concat(n,"_ap1_pos] = combSum + ap1_a * ap1_out;\n            if (++cleanreverb").concat(n,"_ap1_pos >= CLEANREVERB").concat(n,"_AP1_SIZE) cleanreverb").concat(n,"_ap1_pos = 0;\n\n            // AP2\n            float ap2_delay = cleanreverb").concat(n,"_ap2[cleanreverb").concat(n,"_ap2_pos];\n            const float ap2_a = 0.5f;\n            float ap2_out = -ap2_a * ap1_out + ap2_delay;\n            cleanreverb").concat(n,"_ap2[cleanreverb").concat(n,"_ap2_pos] = ap1_out + ap2_a * ap2_out;\n            if (++cleanreverb").concat(n,"_ap2_pos >= CLEANREVERB").concat(n,"_AP2_SIZE) cleanreverb").concat(n,"_ap2_pos = 0;\n\n            // Stereo decorrelation: Use fully diffused allpass output for smooth character\n            // Mix different comb taps with the diffused signal for stereo width\n            float wetL = 0.6f * ap2_out + 0.2f * c1 + 0.2f * c3;\n            float wetR = 0.6f * ap2_out + 0.2f * c2 + 0.2f * c4;\n\n            // Scale down wet signal to prevent buildup (diffused signal is denser)\n            wetL *= 0.5f;\n            wetR *= 0.5f;\n\n            // Final mix (no additional clipping - rely on output limiter)\n            float outL = inL * (1.0f - mix) + wetL * mix;\n            float outR = inR * (1.0f - mix) + wetR * mix;\n\n            // Denormal guard\n            if (fabsf(outL) < 1e-12f) outL = 0.0f;\n            if (fabsf(outR) < 1e-12f) outR = 0.0f;\n\n            cleanreverb").concat(n,"_outputL = outL;\n            cleanreverb").concat(n,"_outputR = outR;\n        }\n")}},{key:"generateSnareDrumCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"trigger"===n.to.port}),o="false";if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c,l=(null===(c=r.match(/\d+$/))||void 0===c?void 0:c[0])||"1";switch(i.type){case"LEDButton":o="btn".concat(l,"_pressed");break;case"Clock":o="clock".concat(l,"_output");break;case"GateGen":o="gate".concat(l,"_output")}}}return"\n        // SnareDrum ".concat(n," processing - Layered Snare Drum Synthesizer\n        {\n            bool trigger = ").concat(o,";\n\n            // Trigger all envelopes on rising edge\n            static bool snare").concat(n,"_lastTrigger = false;\n            if (trigger && !snare").concat(n,"_lastTrigger) {\n                // Start all envelope stages\n                snare").concat(n,"_amp_stage = 1; // Attack\n                snare").concat(n,"_amp_time = 0.0;\n                snare").concat(n,"_pitch_stage = 1; // Attack\n                snare").concat(n,"_pitch_time = 0.0;\n                snare").concat(n,"_noise_stage = 1; // Attack\n                snare").concat(n,"_noise_time = 0.0;\n                snare").concat(n,"_triggered = true;\n            }\n            snare").concat(n,"_lastTrigger = trigger;\n\n            float sampleTime = 1.0 / 44100.0;\n\n            // Process amplitude envelope\n            if (snare").concat(n,"_amp_stage > 0) {\n                snare").concat(n,"_amp_time += sampleTime;\n\n                switch (snare").concat(n,"_amp_stage) {\n                    case 1: // Attack\n                        if (snare").concat(n,"_amp_time >= snare").concat(n,"_amp_attack) {\n                            snare").concat(n,"_amp_stage = 2;\n                            snare").concat(n,"_amp_time = 0.0;\n                            snare").concat(n,"_amp_env = 1.0;\n                        } else {\n                            snare").concat(n,"_amp_env = snare").concat(n,"_amp_time / snare").concat(n,"_amp_attack;\n                        }\n                        break;\n\n                    case 2: // Decay\n                        if (snare").concat(n,"_amp_time >= snare").concat(n,"_amp_decay) {\n                            snare").concat(n,"_amp_stage = 3;\n                            snare").concat(n,"_amp_time = 0.0;\n                        } else {\n                            float progress = snare").concat(n,"_amp_time / snare").concat(n,"_amp_decay;\n                            snare").concat(n,"_amp_env = 1.0 - progress * (1.0 - snare").concat(n,"_amp_sustain);\n                        }\n                        break;\n\n                    case 3: // Sustain\n                        snare").concat(n,"_amp_env = snare").concat(n,"_amp_sustain;\n                        if (!trigger) {\n                            snare").concat(n,"_amp_stage = 4; // Release\n                            snare").concat(n,"_amp_time = 0.0;\n                        }\n                        break;\n\n                    case 4: // Release\n                        if (snare").concat(n,"_amp_time >= snare").concat(n,"_amp_release) {\n                            snare").concat(n,"_amp_stage = 0; // Idle\n                            snare").concat(n,"_amp_env = 0.0;\n                        } else {\n                            float progress = snare").concat(n,"_amp_time / snare").concat(n,"_amp_release;\n                            snare").concat(n,"_amp_env = snare").concat(n,"_amp_sustain * (1.0 - progress);\n                        }\n                        break;\n                }\n            }\n\n            // Process pitch envelope\n            if (snare").concat(n,"_pitch_stage > 0) {\n                snare").concat(n,"_pitch_time += sampleTime;\n\n                switch (snare").concat(n,"_pitch_stage) {\n                    case 1: // Attack\n                        if (snare").concat(n,"_pitch_time >= snare").concat(n,"_pitch_attack) {\n                            snare").concat(n,"_pitch_stage = 2;\n                            snare").concat(n,"_pitch_time = 0.0;\n                            snare").concat(n,"_pitch_env = 1.0;\n                        } else {\n                            snare").concat(n,"_pitch_env = snare").concat(n,"_pitch_time / snare").concat(n,"_pitch_attack;\n                        }\n                        break;\n\n                    case 2: // Decay\n                        if (snare").concat(n,"_pitch_time >= snare").concat(n,"_pitch_decay) {\n                            snare").concat(n,"_pitch_stage = 0; // Skip sustain, go to idle\n                            snare").concat(n,"_pitch_env = 0.0;\n                        } else {\n                            float progress = snare").concat(n,"_pitch_time / snare").concat(n,"_pitch_decay;\n                            snare").concat(n,"_pitch_env = 1.0 - progress;\n                        }\n                        break;\n                }\n            }\n\n            // Process noise envelope\n            if (snare").concat(n,"_noise_stage > 0) {\n                snare").concat(n,"_noise_time += sampleTime;\n\n                switch (snare").concat(n,"_noise_stage) {\n                    case 1: // Attack\n                        if (snare").concat(n,"_noise_time >= snare").concat(n,"_noise_attack) {\n                            snare").concat(n,"_noise_stage = 2;\n                            snare").concat(n,"_noise_time = 0.0;\n                            snare").concat(n,"_noise_env = 1.0;\n                        } else {\n                            snare").concat(n,"_noise_env = snare").concat(n,"_noise_time / snare").concat(n,"_noise_attack;\n                        }\n                        break;\n\n                    case 2: // Decay\n                        if (snare").concat(n,"_noise_time >= snare").concat(n,"_noise_decay) {\n                            snare").concat(n,"_noise_stage = 3;\n                            snare").concat(n,"_noise_time = 0.0;\n                        } else {\n                            float progress = snare").concat(n,"_noise_time / snare").concat(n,"_noise_decay;\n                            snare").concat(n,"_noise_env = 1.0 - progress * (1.0 - snare").concat(n,"_noise_sustain);\n                        }\n                        break;\n\n                    case 3: // Sustain\n                        snare").concat(n,"_noise_env = snare").concat(n,"_noise_sustain;\n                        if (!trigger) {\n                            snare").concat(n,"_noise_stage = 4; // Release\n                            snare").concat(n,"_noise_time = 0.0;\n                        }\n                        break;\n\n                    case 4: // Release\n                        if (snare").concat(n,"_noise_time >= snare").concat(n,"_noise_release) {\n                            snare").concat(n,"_noise_stage = 0; // Idle\n                            snare").concat(n,"_noise_env = 0.0;\n                        } else {\n                            float progress = snare").concat(n,"_noise_time / snare").concat(n,"_noise_release;\n                            snare").concat(n,"_noise_env = snare").concat(n,"_noise_sustain * (1.0 - progress);\n                        }\n                        break;\n                }\n            }\n\n            // Generate sound sources\n            float osc_output = 0.0;\n            float noise_output = 0.0;\n\n            if (snare").concat(n,"_amp_env > 0.001) {\n                // Oscillator layer with pitch envelope\n                float pitch_mod = snare").concat(n,"_pitch_env * snare").concat(n,"_pitch_env_amount;\n                float effective_freq = snare").concat(n,"_osc_freq * pow(2.0, pitch_mod);\n\n                snare").concat(n,"_osc_phase += (2.0 * M_PI * effective_freq) / 44100.0;\n                if (snare").concat(n,"_osc_phase >= 2.0 * M_PI) {\n                    snare").concat(n,"_osc_phase -= 2.0 * M_PI;\n                }\n\n                osc_output = sin(snare").concat(n,"_osc_phase) * snare").concat(n,"_osc_level;\n\n                // Noise layer with separate envelope\n                if (snare").concat(n,"_noise_env > 0.001) {\n                    float white_noise = ((float)random(-32768, 32767)) / 32767.0;\n\n                    // Simple noise filtering based on type\n                    if (snare").concat(n,"_noise_type == 0) {\n                        // White noise (no filtering)\n                        noise_output = white_noise;\n                    } else {\n                        // Simple lowpass for pink/brown approximation\n                        snare").concat(n,"_noise_state = snare").concat(n,"_noise_state * 0.99 + white_noise * 0.01;\n                        noise_output = snare").concat(n,"_noise_state * 10.0; // Boost filtered noise\n                    }\n\n                    noise_output *= snare").concat(n,"_noise_level * snare").concat(n,"_noise_env;\n                }\n            }\n\n            // Mix all layers with amplitude envelope\n            float mixed_output = (osc_output + noise_output) * snare").concat(n,"_amp_env;\n\n            snare").concat(n,"_outputL = mixed_output;\n            snare").concat(n,"_outputR = mixed_output;\n        }\n")}},{key:"generateAudioMathCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inA"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inB"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"mod"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"amount"===n.to.port}),c="0.0",l="0.0",s="0.0",u="audioMath".concat(n,"_amount");if(a){var p=a.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"Oscillator":c="osc".concat(m,"_outputL");break;case"VCA":c="vca".concat(m,"_outputL");break;case"Filter":c="filter".concat(m,"_outputL");break;case"Noise":c="noise".concat(m,"_output")}}}if(o){var _=o.from.id.split(":")[0],g=this.connectionResolver.modules.find(function(e){return e.id===_});if(g){var h,v=(null===(h=_.match(/\d+$/))||void 0===h?void 0:h[0])||"1";switch(g.type){case"Oscillator":l="osc".concat(v,"_outputL");break;case"VCA":l="vca".concat(v,"_outputL");break;case"Filter":l="filter".concat(v,"_outputL");break;case"Noise":l="noise".concat(v,"_output")}}}if(r){var b=r.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k,S=(null===(k=b.match(/\d+$/))||void 0===k?void 0:k[0])||"1";switch(y.type){case"LFO":s="lfo".concat(S,"_output");break;case"ADSR":s="adsr".concat(S,"_output");break;case"Pot":s="pot".concat(S,"_value");break;case"Oscillator":s="osc".concat(S,"_outputL")}}}if(i){var x=i.from.id.split(":")[0],E=this.connectionResolver.modules.find(function(e){return e.id===x});if(E){var w,P=(null===(w=x.match(/\d+$/))||void 0===w?void 0:w[0])||"1";switch(E.type){case"Pot":u="pot".concat(P,"_value");break;case"LFO":u="lfo".concat(P,"_output");break;case"ADSR":u="adsr".concat(P,"_output")}}}return"\n        // AudioMath ".concat(n," processing\n        {\n            audioMath").concat(n,"_inputA = ").concat(c,";\n            audioMath").concat(n,"_inputB = ").concat(l,";\n            audioMath").concat(n,"_modInput = ").concat(s,";\n            float amount = ").concat(u,";\n            float offset = audioMath").concat(n,"_offset;\n\n            switch (audioMath").concat(n,"_mode) {\n                case 0: // Amplitude Modulation (AM)\n                    {\n                        float modulated_signal = audioMath").concat(n,"_modInput + offset;\n                        modulated_signal = constrain(modulated_signal, 0.0, 1.0);\n                        audioMath").concat(n,"_output = audioMath").concat(n,"_inputA * modulated_signal * amount +\n                                                   audioMath").concat(n,"_inputA * (1.0 - amount);\n                    }\n                    break;\n\n                case 1: // Crossfade\n                    {\n                        float mix = constrain(amount + audioMath").concat(n,"_modInput + offset, 0.0, 1.0);\n                        audioMath").concat(n,"_output = audioMath").concat(n,"_inputA * (1.0 - mix) +\n                                                   audioMath").concat(n,"_inputB * mix;\n                    }\n                    break;\n\n                case 2: // Ring Modulation\n                    {\n                        float modulated = audioMath").concat(n,"_inputA * (audioMath").concat(n,"_modInput + offset);\n                        audioMath").concat(n,"_output = modulated * amount +\n                                                   audioMath").concat(n,"_inputA * (1.0 - amount);\n                    }\n                    break;\n\n                case 3: // Vocoder (simplified envelope follower)\n                    {\n                        // Envelope follower on carrier signal (inputA)\n                        float carrier_env = fabs(audioMath").concat(n,"_inputA);\n                        if (carrier_env > audioMath").concat(n,"_vocoder_env) {\n                            audioMath").concat(n,"_vocoder_env += (carrier_env - audioMath").concat(n,"_vocoder_env) *\n                                                            audioMath").concat(n,"_vocoder_attack;\n                        } else {\n                            audioMath").concat(n,"_vocoder_env += (carrier_env - audioMath").concat(n,"_vocoder_env) *\n                                                            audioMath").concat(n,"_vocoder_release;\n                        }\n\n                        // Apply carrier envelope to modulator (inputB)\n                        audioMath").concat(n,"_output = audioMath").concat(n,"_inputB * audioMath").concat(n,"_vocoder_env * amount +\n                                                   audioMath").concat(n,"_inputB * (1.0 - amount);\n                    }\n                    break;\n\n                default:\n                    audioMath").concat(n,"_output = audioMath").concat(n,"_inputA; // Pass-through\n                    break;\n            }\n\n            // Apply final gain limiting\n            audioMath").concat(n,"_output = constrain(audioMath").concat(n,"_output, -1.0, 1.0);\n        }\n")}},{key:"generatePannerCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inR"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pan"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"width"===n.to.port}),c="0.0",l="0.0",s="panner".concat(n,"_pan"),u="panner".concat(n,"_width");if(a){var p=a.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"Oscillator":c="osc".concat(m,"_outputL");break;case"VCA":c="vca".concat(m,"_outputL");break;case"Filter":c="filter".concat(m,"_outputL");break;case"AudioMath":c="audioMath".concat(m,"_output");break;case"Noise":c="noise".concat(m,"_output")}}}if(o){var _=o.from.id.split(":")[0],g=this.connectionResolver.modules.find(function(e){return e.id===_});if(g){var h,v=(null===(h=_.match(/\d+$/))||void 0===h?void 0:h[0])||"1";switch(g.type){case"Oscillator":l="osc".concat(v,"_outputR");break;case"VCA":l="vca".concat(v,"_outputR");break;case"Filter":l="filter".concat(v,"_outputR");break;case"AudioMath":l="audioMath".concat(v,"_output");break;case"Noise":l="noise".concat(v,"_output")}}}if(r){var b=r.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k,S=(null===(k=b.match(/\d+$/))||void 0===k?void 0:k[0])||"1";switch(y.type){case"Pot":s="pot".concat(S,"_value");break;case"LFO":s="(lfo".concat(S,"_output * 0.5 + 0.5)");break;case"ADSR":s="adsr".concat(S,"_output")}}}if(i){var x=i.from.id.split(":")[0],E=this.connectionResolver.modules.find(function(e){return e.id===x});if(E){var w,P=(null===(w=x.match(/\d+$/))||void 0===w?void 0:w[0])||"1";switch(E.type){case"Pot":u="pot".concat(P,"_value");break;case"LFO":u="(lfo".concat(P,"_output * 0.5 + 0.5)");break;case"ADSR":u="adsr".concat(P,"_output")}}}return"\n        // Panner ".concat(n," processing\n        {\n            panner").concat(n,"_inputL = ").concat(c,";\n            panner").concat(n,"_inputR = ").concat(l,";\n            float pan = constrain(").concat(s,", 0.0, 1.0);\n            float width = constrain(").concat(u,", 0.0, 1.0);\n\n            // Convert stereo input to mid/side representation\n            float mid = (panner").concat(n,"_inputL + panner").concat(n,"_inputR) * 0.5;\n            float side = (panner").concat(n,"_inputL - panner").concat(n,"_inputR) * 0.5;\n\n            // Apply width control to side signal\n            side *= width;\n\n            // Convert back to left/right\n            float processedL = mid + side;\n            float processedR = mid - side;\n\n            // Apply constant-power panning\n            float pan_angle = pan * M_PI * 0.5; // 0 to PI/2\n            float left_gain = cos(pan_angle);   // 1.0 at left, 0.707 at center, 0.0 at right\n            float right_gain = sin(pan_angle);  // 0.0 at left, 0.707 at center, 1.0 at right\n\n            panner").concat(n,"_outputL = processedL * left_gain + processedR * left_gain;\n            panner").concat(n,"_outputR = processedL * right_gain + processedR * right_gain;\n\n            // Apply final output limiting\n            panner").concat(n,"_outputL = constrain(panner").concat(n,"_outputL, -1.0, 1.0);\n            panner").concat(n,"_outputR = constrain(panner").concat(n,"_outputR, -1.0, 1.0);\n        }\n")}},{key:"generateStereoMixer4Code",value:function(e,n,t){var a=this,o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"1L"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"1R"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"2L"===n.to.port}),c=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"2R"===n.to.port}),l=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"3L"===n.to.port}),s=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"3R"===n.to.port}),u=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"4L"===n.to.port}),p=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"4R"===n.to.port}),d=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"g1"===n.to.port}),f=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"g2"===n.to.port}),m=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"g3"===n.to.port}),_=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"g4"===n.to.port}),g=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"master"===n.to.port}),h=function(e,n){var t,o;if(!e)return"0.0";var r=e.from.id.split(":")[0],i=a.connectionResolver.modules.find(function(e){return e.id===r});if(!i)return"0.0";var c=(null===(t=i.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";switch(null===(o=r.match(/\d+$/))||void 0===o||o[0],i.type){case"Oscillator":return"osc".concat(c,"L"===n?"_outputL":"_outputR");case"VCA":return"vca".concat(c,"L"===n?"_outputL":"_outputR");case"Filter":return"filter".concat(c,"L"===n?"_outputL":"_outputR");case"Panner":return"panner".concat(c,"L"===n?"_outputL":"_outputR");case"AudioMath":return"audioMath".concat(c,"_output");case"Noise":return"noise".concat(c,"_output");case"StereoMixer4":return"stereoMixer4_".concat(c,"L"===n?"_outputL":"_outputR");default:return"0.0"}},v=function(e,n){var t;if(!e)return n;var o=e.from.id.split(":")[0],r=a.connectionResolver.modules.find(function(e){return e.id===o});if(!r)return n;var i=(null===(t=o.match(/\d+$/))||void 0===t?void 0:t[0])||"1";switch(r.type){case"Pot":var c=r.params.index||1;return"pot".concat(c,"_value");case"LFO":return"(lfo".concat(i,"_output * 0.5 + 0.5)");case"ADSR":return"adsr".concat(i,"_output");default:return n}};return"\n        // StereoMixer4 ".concat(n," processing\n        {\n            // Get input signals\n            stereoMixer4_").concat(n,"_input1L = ").concat(h(o,"L"),";\n            stereoMixer4_").concat(n,"_input1R = ").concat(h(r,"R"),";\n            stereoMixer4_").concat(n,"_input2L = ").concat(h(i,"L"),";\n            stereoMixer4_").concat(n,"_input2R = ").concat(h(c,"R"),";\n            stereoMixer4_").concat(n,"_input3L = ").concat(h(l,"L"),";\n            stereoMixer4_").concat(n,"_input3R = ").concat(h(s,"R"),";\n            stereoMixer4_").concat(n,"_input4L = ").concat(h(u,"L"),";\n            stereoMixer4_").concat(n,"_input4R = ").concat(h(p,"R"),";\n\n            // Get gain controls\n            float gain1 = ").concat(v(d,"stereoMixer4_".concat(n,"_gain1")),";\n            float gain2 = ").concat(v(f,"stereoMixer4_".concat(n,"_gain2")),";\n            float gain3 = ").concat(v(m,"stereoMixer4_".concat(n,"_gain3")),";\n            float gain4 = ").concat(v(_,"stereoMixer4_".concat(n,"_gain4")),";\n            float master = ").concat(v(g,"stereoMixer4_".concat(n,"_master")),";\n\n            // Mix all channels\n            float mixedL = (stereoMixer4_").concat(n,"_input1L * gain1) +\n                           (stereoMixer4_").concat(n,"_input2L * gain2) +\n                           (stereoMixer4_").concat(n,"_input3L * gain3) +\n                           (stereoMixer4_").concat(n,"_input4L * gain4);\n\n            float mixedR = (stereoMixer4_").concat(n,"_input1R * gain1) +\n                           (stereoMixer4_").concat(n,"_input2R * gain2) +\n                           (stereoMixer4_").concat(n,"_input3R * gain3) +\n                           (stereoMixer4_").concat(n,"_input4R * gain4);\n\n            // Apply master gain and output limiting\n            stereoMixer4_").concat(n,"_outputL = constrain(mixedL * master, -1.0, 1.0);\n            stereoMixer4_").concat(n,'_outputR = constrain(mixedR * master, -1.0, 1.0);\n\n            // DEBUG: Print mixer output every 500ms\n            static unsigned long mixerDebugTime = 0;\n            if (millis() - mixerDebugTime > 500) {\n                mixerDebugTime = millis();\n                Serial.print("Mixer').concat(n,' - gains: g1=");\n                Serial.print(gain1);\n                Serial.print(", g2=");\n                Serial.print(gain2);\n                Serial.print(" | inputs: 1L=");\n                Serial.print(stereoMixer4_').concat(n,'_input1L);\n                Serial.print(", 2L=");\n                Serial.print(stereoMixer4_').concat(n,'_input2L);\n                Serial.print(" | output: L=");\n                Serial.print(stereoMixer4_').concat(n,'_outputL);\n                Serial.print(", R=");\n                Serial.println(stereoMixer4_').concat(n,"_outputR);\n            }\n        }\n")}},{key:"generateMatrix2x2Code",value:function(e,n,t){var a=this,o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inAL"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inAR"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inBL"===n.to.port}),c=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inBR"===n.to.port}),l=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"aa"===n.to.port}),s=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"ab"===n.to.port}),u=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"ba"===n.to.port}),p=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"bb"===n.to.port}),d=function(e){var n;if(!e)return"0.0";var t=e.from.id.split(":")[0],o=a.connectionResolver.modules.find(function(e){return e.id===t});if(!o)return"0.0";var r=(null===(n=t.match(/\d+$/))||void 0===n?void 0:n[0])||"1",i=e.from.port;switch(o.type){case"Oscillator":return"osc".concat(r,"outR"===i?"_outputR":"_outputL");case"VCA":return"vca".concat(r,"outR"===i?"_outputR":"_outputL");case"Filter":return"filter".concat(r,"outR"===i?"_outputR":"_outputL");case"Panner":return"panner".concat(r,"outR"===i?"_outputR":"_outputL");case"StereoMixer4":return"stereoMixer4_".concat(r,"outR"===i?"_outputR":"_outputL");case"Matrix2x2":return"outAL"===i?"matrix".concat(r,"_outputAL"):"outAR"===i?"matrix".concat(r,"_outputAR"):"outBL"===i?"matrix".concat(r,"_outputBL"):"outBR"===i?"matrix".concat(r,"_outputBR"):"0.0";case"AudioMath":return"audioMath".concat(r,"_output");case"Noise":return"noise".concat(r,"_output");case"Delay":return"delay".concat(r,"outR"===i?"_outputR":"_outputL");default:return"0.0"}},f=function(e,n){var t;if(!e)return n;var o=e.from.id.split(":")[0],r=a.connectionResolver.modules.find(function(e){return e.id===o});if(!r)return n;var i=(null===(t=o.match(/\d+$/))||void 0===t?void 0:t[0])||"1";switch(r.type){case"Pot":return"(pot".concat(i,"_value * 2.0 - 1.0)");case"LFO":return"lfo".concat(i,"_output");case"ADSR":return"(adsr".concat(i,"_output * 2.0 - 1.0)");default:return n}};return"\n        // Matrix2x2 ".concat(n," processing - 2x2 Audio Router with Feedback\n        {\n            // Get input signals\n            matrix").concat(n,"_inputAL = ").concat(d(o),";\n            matrix").concat(n,"_inputAR = ").concat(d(r),";\n            matrix").concat(n,"_inputBL = ").concat(d(i),";\n            matrix").concat(n,"_inputBR = ").concat(d(c),";\n\n            // Get matrix coefficients (with external control)\n            float aa = ").concat(f(l,"matrix".concat(n,"_aa")),";\n            float ab = ").concat(f(s,"matrix".concat(n,"_ab")),";\n            float ba = ").concat(f(u,"matrix".concat(n,"_ba")),";\n            float bb = ").concat(f(p,"matrix".concat(n,"_bb")),";\n\n            // Constrain matrix gains to prevent runaway feedback\n            aa = constrain(aa, -2.0, 2.0);\n            ab = constrain(ab, -2.0, 2.0);\n            ba = constrain(ba, -2.0, 2.0);\n            bb = constrain(bb, -2.0, 2.0);\n\n            // Matrix multiplication:\n            // [outA] = [aa ab] * [inA]\n            // [outB]   [ba bb]   [inB]\n\n            // Left channel\n            matrix").concat(n,"_outputAL = (matrix").concat(n,"_inputAL * aa) + (matrix").concat(n,"_inputBL * ab);\n            matrix").concat(n,"_outputBL = (matrix").concat(n,"_inputAL * ba) + (matrix").concat(n,"_inputBL * bb);\n\n            // Right channel (same matrix applied to right signals)\n            matrix").concat(n,"_outputAR = (matrix").concat(n,"_inputAR * aa) + (matrix").concat(n,"_inputBR * ab);\n            matrix").concat(n,"_outputBR = (matrix").concat(n,"_inputAR * ba) + (matrix").concat(n,"_inputBR * bb);\n\n            // Apply output limiting to prevent clipping from feedback\n            matrix").concat(n,"_outputAL = constrain(matrix").concat(n,"_outputAL, -1.0, 1.0);\n            matrix").concat(n,"_outputAR = constrain(matrix").concat(n,"_outputAR, -1.0, 1.0);\n            matrix").concat(n,"_outputBL = constrain(matrix").concat(n,"_outputBL, -1.0, 1.0);\n            matrix").concat(n,"_outputBR = constrain(matrix").concat(n,"_outputBR, -1.0, 1.0);\n        }\n")}},{key:"generateChorusFlangeRingCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o="0.0";if(a){var r=a.from.id.split(":")[0];if(this.connectionResolver.modules.find(function(e){return e.id===r})){var i,c=(null===(i=r.match(/\d+$/))||void 0===i?void 0:i[0])||"1";o="osc".concat(c,"_outputL")}}return"\n        // ChorusFlangeRing ".concat(n," processing\n        {\n            float input = ").concat(o,";\n            cfr").concat(n,"_phase += cfr").concat(n,"_rate * 2.0 * M_PI / 44100.0;\n            if (cfr").concat(n,"_phase >= 2.0 * M_PI) cfr").concat(n,"_phase -= 2.0 * M_PI;\n\n            if (cfr").concat(n,"_mode == 2) { // Ring modulation\n                float modulated = input * sin(cfr").concat(n,"_phase) * cfr").concat(n,"_depth;\n                cfr").concat(n,"_outputL = input * (1.0 - cfr").concat(n,"_mix) + modulated * cfr").concat(n,"_mix;\n            } else { // Chorus/Flange (simplified)\n                cfr").concat(n,"_buffer[cfr").concat(n,"_writePos] = input;\n                cfr").concat(n,"_writePos = (cfr").concat(n,"_writePos + 1) % CFR").concat(n,"_BUFFER_SIZE;\n                int delayOffset = (int)(sin(cfr").concat(n,"_phase) * cfr").concat(n,"_depth * 100);\n                int readPos = (cfr").concat(n,"_writePos - 100 - delayOffset + CFR").concat(n,"_BUFFER_SIZE) % CFR").concat(n,"_BUFFER_SIZE;\n                float delayed = cfr").concat(n,"_buffer[readPos];\n                cfr").concat(n,"_outputL = input * (1.0 - cfr").concat(n,"_mix) + delayed * cfr").concat(n,"_mix;\n            }\n            cfr").concat(n,"_outputR = cfr").concat(n,"_outputL;\n        }\n")}},{key:"generateLimiterCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o="0.0";if(a){var r=a.from.id.split(":")[0];if(this.connectionResolver.modules.find(function(e){return e.id===r})){var i,c=(null===(i=r.match(/\d+$/))||void 0===i?void 0:i[0])||"1";o="osc".concat(c,"_outputL")}}return"\n        // Limiter ".concat(n," processing\n        {\n            float input = ").concat(o,";\n            float inputLevel = abs(input);\n            float targetGain = 1.0;\n\n            if (inputLevel > limiter").concat(n,"_threshold) {\n                targetGain = limiter").concat(n,"_threshold / inputLevel;\n            }\n\n            // Envelope following\n            float rate = (targetGain < limiter").concat(n,"_envelope) ? limiter").concat(n,"_attack : limiter").concat(n,"_release;\n            limiter").concat(n,"_envelope = limiter").concat(n,"_envelope * (1.0 - rate) + targetGain * rate;\n\n            float output = input * limiter").concat(n,"_envelope * limiter").concat(n,"_makeup;\n            limiter").concat(n,"_outputL = output;\n            limiter").concat(n,"_outputR = output;\n        }\n")}},{key:"generateEQ8Code",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o="0.0";if(a){var r=a.from.id.split(":")[0];if(this.connectionResolver.modules.find(function(e){return e.id===r})){var i,c=(null===(i=r.match(/\d+$/))||void 0===i?void 0:i[0])||"1";o="osc".concat(c,"_outputL")}}return"\n        // EQ8 ".concat(n," processing (simplified 8-band EQ)\n        {\n            float input = ").concat(o,";\n            float output = input; // Simplified - just pass through for now\n            // TODO: Implement proper 8-band EQ with biquad filters\n            eq").concat(n,"_outputL = output;\n            eq").concat(n,"_outputR = output;\n        }\n")}},{key:"generatePercussionCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"trig"===n.to.port}),o="false";if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c=i.params?i.params.index:0;"LEDButton"===i.type&&(o="btn".concat(c,"_pressed"))}}return"\n        // Percussion ".concat(n," processing\n        {\n            bool trigger = ").concat(o,";\n\n            if (trigger && !perc").concat(n,"_triggered) {\n                perc").concat(n,"_triggered = true;\n                // Reset all envelope stages\n                perc").concat(n,"_stage1 = 1; perc").concat(n,"_stage2 = 1; perc").concat(n,"_stage3 = 1;\n                perc").concat(n,"_time1 = 0.0; perc").concat(n,"_time2 = 0.0; perc").concat(n,"_time3 = 0.0;\n            } else if (!trigger) {\n                perc").concat(n,"_triggered = false;\n            }\n\n            // Simple percussion synthesis (metallic tone with decay)\n            float sampleTime = 1.0 / 44100.0;\n            float tone = sin(2.0 * M_PI * perc").concat(n,"_freq * perc").concat(n,"_time1) * perc").concat(n,"_env1;\n            tone += sin(2.0 * M_PI * perc").concat(n,"_freq * 2.1 * perc").concat(n,"_time2) * perc").concat(n,"_env2 * perc").concat(n,"_metallic;\n\n            // Update envelopes\n            if (perc").concat(n,"_stage1 == 1) {\n                perc").concat(n,"_time1 += sampleTime;\n                perc").concat(n,"_env1 = exp(-perc").concat(n,"_time1 / perc").concat(n,"_decay);\n                if (perc").concat(n,"_env1 < 0.001) perc").concat(n,"_stage1 = 0;\n            }\n\n            perc").concat(n,"_outputL = tone * perc").concat(n,"_gain;\n            perc").concat(n,"_outputR = perc").concat(n,"_outputL;\n        }\n")}},{key:"generateWavetableFMConnection",value:function(e,n){var t,a=e.from.id.split(":")[0],o=this.connectionResolver.modules.find(function(e){return e.id===a});if(!o)return"";var r=(null===(t=a.match(/\d+$/))||void 0===t?void 0:t[0])||"1";switch(o.type){case"Wavetable":return"wt".concat(n,"_fm_input = wt").concat(r,"_outputL; // FM from Wavetable ").concat(r);case"Oscillator":return"wt".concat(n,"_fm_input = osc").concat(r,"_outputL; // FM from Oscillator ").concat(r);case"VCA":return"wt".concat(n,"_fm_input = vca").concat(r,"_outputL; // FM from VCA ").concat(r);case"LFO":return"wt".concat(n,"_fm_input = lfo").concat(r,"_output; // FM from LFO ").concat(r);case"ADSR":return"wt".concat(n,"_fm_input = adsr").concat(r,"_output; // FM from ADSR ").concat(r);default:return""}}},{key:"generateWavetableControlProcessing",value:function(e,n,t){var a=this,o="\n            // Update control parameters\n            float wt".concat(n,"_currentFreq = wt").concat(n,"_freq;\n            float wt").concat(n,"_currentMorph = wt").concat(n,"_morph;\n            float wt").concat(n,"_currentGate = wt").concat(n,"_gate;\n            float wt").concat(n,"_currentPitchCv = 0.5; // Default = no modulation\n");if(t.forEach(function(t){var r,i;if(t.to.id.includes("".concat(e.id,":"))){var c=t.from.id.split(":")[0],l=a.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s=(null===(r=l.params)||void 0===r?void 0:r.index)||(null===(i=c.match(/\d+$/))||void 0===i?void 0:i[0])||"1";switch(t.to.port){case"freq":switch(l.type){case"Pot":o+="\n            wt".concat(n,"_currentFreq = (pot").concat(s,"_value * 2000.0 + 20.0); // 20Hz to 2020Hz\n");break;case"Scale":o+="\n            wt".concat(n,"_currentFreq = scale").concat(s,"_output;\n");break;case"HarmonicSequencer":case"BankSequencer":var u=t.from.port;u&&u.includes("pitch_step")&&u.includes("_hz")&&(o+="\n            wt".concat(n,"_currentFreq = seq").concat(s,"_").concat(u,"; // ").concat(l.type," step frequency\n"));break;case"LFO":o+="\n            wt".concat(n,"_currentFreq = wt").concat(n,"_freq + (lfo").concat(s,"_output * 100.0); // ±100Hz modulation\n");break;case"Automation":var p=t.from.port,d=p.replace("out_","output_");o+="\n            wt".concat(n,"_currentFreq = (automation").concat(s,"_").concat(d," * 2000.0 + 20.0); // Automation ").concat(s," ").concat(p,": 20Hz to 2020Hz\n")}break;case"gate":if("LEDButton"===l.type){var f=l.params.bank||1,m=l.params.locked||!1;o+=m?"\n            wt".concat(n,"_currentGate = btn").concat(s,"_gate ? 1.0 : 0.0; // Button").concat(s," (LOCKED)\n"):"\n            if (currentBank == ".concat(f,") { wt").concat(n,"_currentGate = btn").concat(s,"_gate ? 1.0 : 0.0; } // Button").concat(s," Bank ").concat(f,"\n")}else"ADSR"===l.type&&(o+="\n            wt".concat(n,"_currentGate = adsr").concat(s,"_output;\n"));break;case"morph":switch(l.type){case"Pot":o+="\n            wt".concat(n,"_currentMorph = pot").concat(s,"_value * 3.0; // 0-3 range for 4 tables\n");break;case"LFO":o+="\n            wt".concat(n,"_currentMorph = (lfo").concat(s,"_output + 1.0) * 1.5; // 0-3 range\n");break;case"ADSR":o+="\n            wt".concat(n,"_currentMorph = adsr").concat(s,"_output * 3.0; // 0-3 range\n")}break;case"pitch_cv":switch(l.type){case"ADSR":o+="\n            wt".concat(n,"_currentPitchCv = adsr").concat(s,"_output;\n");break;case"LFO":o+="\n            wt".concat(n,"_currentPitchCv = lfo").concat(s,"_output;\n");break;case"Pot":o+="\n            wt".concat(n,"_currentPitchCv = pot").concat(s,"_value;\n")}break;case"fm_ratio_cv":if("Pot"===l.type)o+="\n            wt".concat(n,"_fm_ratio_cv = pot").concat(s,"_value; // FM ratio CV from pot (0-1)\n");else if("Automation"===l.type){var _=t.from.port.replace("out_","output_");o+="\n            wt".concat(n,"_fm_ratio_cv = automation").concat(s,"_").concat(_,"; // FM ratio CV from Automation (0-1)\n")}}}}}),e.params.fm_tracking){var r=t.find(function(n){var t=n.from.id.split(":")[0],a=n.to.id?n.to.id.split(":")[1]:n.to.port;return t===e.id&&"fm"===a});if(r){var i=r.to.id?r.to.id.split(":")[0]:r.to,c=this.connectionResolver.modules.find(function(e){return e.id===i});if(c&&"Wavetable"===c.type){var l,s=(null===(l=i.match(/\d+$/))||void 0===l?void 0:l[0])||"1",u=e.params.fm_ratio_mode||"zones";o+="\n            // FM Tracking: This modulator tracks Wavetable".concat(s,' frequency\n            // FM Ratio Mapping Mode: "').concat(u,'"\n'),o+="zones"===u?"\n            float cv = wt".concat(n,"_fm_ratio_cv;\n            float computed_ratio;\n\n            // Zone mapping: pure ratios get wider zones for easy tuning\n            if (cv < 0.1) {\n                computed_ratio = 0.5; // 1:2 (octave below) - zone\n            } else if (cv < 0.15) {\n                computed_ratio = 0.5 + (cv - 0.1) / 0.05 * (0.667 - 0.5); // Smooth transition\n            } else if (cv < 0.25) {\n                computed_ratio = 0.667; // 2:3 (perfect fifth down) - zone\n            } else if (cv < 0.3) {\n                computed_ratio = 0.667 + (cv - 0.25) / 0.05 * (1.0 - 0.667); // Smooth transition\n            } else if (cv < 0.4) {\n                computed_ratio = 1.0; // 1:1 (unison) - zone\n            } else if (cv < 0.45) {\n                computed_ratio = 1.0 + (cv - 0.4) / 0.05 * (1.5 - 1.0); // Smooth transition\n            } else if (cv < 0.55) {\n                computed_ratio = 1.5; // 3:2 (perfect fifth) - zone\n            } else if (cv < 0.6) {\n                computed_ratio = 1.5 + (cv - 0.55) / 0.05 * (2.0 - 1.5); // Smooth transition\n            } else if (cv < 0.7) {\n                computed_ratio = 2.0; // 2:1 (octave) - zone\n            } else if (cv < 0.75) {\n                computed_ratio = 2.0 + (cv - 0.7) / 0.05 * (3.0 - 2.0); // Smooth transition\n            } else if (cv < 0.85) {\n                computed_ratio = 3.0; // 3:1 - zone\n            } else if (cv < 0.9) {\n                computed_ratio = 3.0 + (cv - 0.85) / 0.05 * (4.0 - 3.0); // Smooth transition\n            } else {\n                computed_ratio = 4.0; // 4:1 (two octaves) - zone\n            }\n\n            float final_ratio = computed_ratio;\n            wt").concat(n,"_currentFreq = wt").concat(s,"_freq * final_ratio;\n"):"quantized"===u?"\n            float cv = wt".concat(n,"_fm_ratio_cv;\n            float ratios[] = {0.5, 0.667, 1.0, 1.5, 2.0, 3.0, 4.0};\n            int numRatios = 7;\n            float scaledCV = cv * 6.0; // Map 0-1 to 0-6 (ratio indices)\n            int idx = constrain((int)scaledCV, 0, numRatios - 1);\n            float computed_ratio = ratios[idx];\n\n            wt").concat(n,"_currentFreq = wt").concat(s,"_freq * computed_ratio;\n"):"\n            float cv = wt".concat(n,"_fm_ratio_cv;\n            float computed_ratio = 0.1 + cv * 7.9; // 0-1 CV maps to 0.1-8.0 ratio range\n\n            wt").concat(n,"_currentFreq = wt").concat(s,"_freq * computed_ratio;\n")}}}return o+="\n            // Apply exponential pitch CV modulation (±semitones, like Oscillator)\n            float pitch_offset_semitones = (wt".concat(n,"_currentPitchCv - 0.5) * wt").concat(n,"_pitch_amount;\n            float pitch_multiplier = pow(2.0, pitch_offset_semitones / 12.0);\n            wt").concat(n,"_freq = wt").concat(n,"_currentFreq * pitch_multiplier;\n\n            // Apply other control values\n            wt").concat(n,"_morph = wt").concat(n,"_currentMorph;\n            wt").concat(n,"_gate = wt").concat(n,"_currentGate;\n")}},{key:"generateGranularDenseCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inR"===n.to.port});return"\n        // Granular Dense ".concat(n," - 20 concurrent 32ms grains for rich textural synthesis\n        {\n            // Control processing\n            ").concat(this.generateGranularDenseControlProcessing(e,n,t),"\n\n            // Audio input processing\n            granular").concat(n,"_inputL = 0.0;\n            granular").concat(n,"_inputR = 0.0;\n\n            ").concat(a?this.generateGranularDenseInputConnection(a,n,"L"):"","\n            ").concat(o?this.generateGranularDenseInputConnection(o,n,"R"):"","\n\n            // Record input to buffer (if not frozen)\n            if (!granular").concat(n,"_currentFreeze) {\n                granular").concat(n,"_buffer_L[granular").concat(n,"_write_pos] = granular").concat(n,"_inputL;\n                granular").concat(n,"_buffer_R[granular").concat(n,"_write_pos] = granular").concat(n,"_inputR;\n                granular").concat(n,"_write_pos++;\n                if (granular").concat(n,"_write_pos >= granular").concat(n,"_buffer_size) {\n                    granular").concat(n,"_write_pos = 0;\n                }\n            }\n\n            // Grain triggering - rate-limited dense processing\n            float grainTriggerRate = constrain(granular").concat(n,"_currentDensity, 1.0, 20.0); // Max 20 grains/sec\n            int samplesBetweenGrains = (int)(SAMPLE_RATE / grainTriggerRate);\n            granular").concat(n,"_samples_since_grain++;\n\n            if (granular").concat(n,"_samples_since_grain >= samplesBetweenGrains) {\n                // Find inactive grain slot (memory-efficient)\n                int activeGrains = 0;\n                int availableSlot = -1;\n\n                for (int g = 0; g < 20; g++) {\n                    if (granular").concat(n,"_grains[g].active) {\n                        activeGrains++;\n                    } else if (availableSlot == -1) {\n                        availableSlot = g;\n                    }\n                }\n\n                // Limit to 18/20 grains max for stability\n                if (availableSlot != -1 && activeGrains < 18) {\n                    // Trigger new grain with constrained parameters\n                    granular").concat(n,"_grains[availableSlot].active = true;\n\n                    // Grain position with spread\n                    float basePosition = constrain(granular").concat(n,"_currentPosition, 0.1, 0.9);\n                    float spread = constrain(granular").concat(n,"_position_spread, 0.0, 0.3);\n                    float positionJitter = (random(0, 1000) / 1000.0 - 0.5) * spread;\n                    granular").concat(n,"_grains[availableSlot].position = constrain(basePosition + positionJitter, 0.0, 1.0);\n\n                    // Grain pitch with controlled spread\n                    float basePitchRatio = pow(2.0, constrain(granular").concat(n,"_currentPitch, -2.0, 2.0)); // ±2 octaves max\n                    float pitchSpread = constrain(granular").concat(n,"_pitch_spread, 0.0, 0.3);\n                    float pitchJitter = (random(0, 1000) / 1000.0 - 0.5) * pitchSpread;\n                    granular").concat(n,"_grains[availableSlot].pitch_ratio = constrain(basePitchRatio + pitchJitter, 0.25, 4.0);\n\n                    // Fixed 32ms grain duration for dense texture\n                    int grainSamples = (int)(0.032 * SAMPLE_RATE); // 32ms grains\n                    granular").concat(n,"_grains[availableSlot].samples_remaining = grainSamples;\n                    granular").concat(n,"_grains[availableSlot].envelope_pos = 0.0;\n                    granular").concat(n,"_grains[availableSlot].envelope_inc = 1.0 / grainSamples;\n                }\n\n                granular").concat(n,"_samples_since_grain = 0;\n            }\n\n            // Process all active grains with efficient envelope\n            float outL = 0.0;\n            float outR = 0.0;\n\n            for (int g = 0; g < 20; g++) {\n                if (granular").concat(n,"_grains[g].active) {\n                    // Calculate buffer read position\n                    float bufferPos = granular").concat(n,"_grains[g].position * granular").concat(n,"_buffer_size;\n                    int readPos = (int)bufferPos;\n                    float frac = bufferPos - readPos;\n\n                    // Bounds checking\n                    if (readPos >= 0 && readPos < (granular").concat(n,"_buffer_size - 1)) {\n                        // Linear interpolation for smooth pitch shifting\n                        float sampleL = granular").concat(n,"_buffer_L[readPos] * (1.0 - frac) +\n                                       granular").concat(n,"_buffer_L[readPos + 1] * frac;\n                        float sampleR = granular").concat(n,"_buffer_R[readPos] * (1.0 - frac) +\n                                       granular").concat(n,"_buffer_R[readPos + 1] * frac;\n\n                        // Cosine envelope for smooth grains\n                        float envelope = 0.5 * (1.0 + cos(PI * (2.0 * granular").concat(n,"_grains[g].envelope_pos - 1.0)));\n                        envelope = constrain(envelope, 0.0, 1.0);\n\n                        // Scale output to prevent clipping with 20 grains\n                        float grainScale = 0.15; // Reduced amplitude per grain\n                        outL += sampleL * envelope * grainScale;\n                        outR += sampleR * envelope * grainScale;\n                    }\n\n                    // Update grain state\n                    granular").concat(n,"_grains[g].envelope_pos += granular").concat(n,"_grains[g].envelope_inc;\n                    granular").concat(n,"_grains[g].position += granular").concat(n,"_grains[g].pitch_ratio / granular").concat(n,"_buffer_size;\n                    granular").concat(n,"_grains[g].samples_remaining--;\n\n                    // Wrap position\n                    if (granular").concat(n,"_grains[g].position >= 1.0) {\n                        granular").concat(n,"_grains[g].position -= 1.0;\n                    }\n\n                    // Deactivate finished grains\n                    if (granular").concat(n,"_grains[g].samples_remaining <= 0) {\n                        granular").concat(n,"_grains[g].active = false;\n                    }\n                }\n            }\n\n            // Dry/wet mix with input\n            float dryGain = 1.0 - constrain(granular").concat(n,"_currentDryWet, 0.0, 1.0);\n            float wetGain = constrain(granular").concat(n,"_currentDryWet, 0.0, 1.0);\n\n            granular").concat(n,"_outputL = granular").concat(n,"_inputL * dryGain + outL * wetGain;\n            granular").concat(n,"_outputR = granular").concat(n,"_inputR * dryGain + outR * wetGain;\n        }\n")}},{key:"generateGranularDenseControlProcessing",value:function(e,n,t){var a=this,o="\n            // Update granular parameters from connections\n            float granular".concat(n,"_currentDensity = granular").concat(n,"_grain_density;\n            float granular").concat(n,"_currentPosition = granular").concat(n,"_position;\n            float granular").concat(n,"_currentPitch = granular").concat(n,"_pitch;\n            float granular").concat(n,"_currentDryWet = granular").concat(n,"_dry_wet;\n            bool granular").concat(n,"_currentFreeze = granular").concat(n,"_freeze;\n");return t.forEach(function(t){var r,i;if(t.to.id.includes("".concat(e.id,":"))){var c=t.from.id.split(":")[0],l=a.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s=(null===(r=l.params)||void 0===r?void 0:r.index)||(null===(i=c.match(/\d+$/))||void 0===i?void 0:i[0])||"1";switch(t.to.port){case"density":switch(l.type){case"Pot":o+="\n            granular".concat(n,"_currentDensity = pot").concat(s,"_value * 20.0; // 0-20 grains/sec\n");break;case"LFO":o+="\n            granular".concat(n,"_currentDensity = granular").concat(n,"_grain_density + (lfo").concat(s,"_output * 10.0);\n")}break;case"position":switch(l.type){case"Pot":o+="\n            granular".concat(n,"_currentPosition = pot").concat(s,"_value; // 0-1 buffer position\n");break;case"LFO":o+="\n            granular".concat(n,"_currentPosition = constrain(granular").concat(n,"_position + (lfo").concat(s,"_output * 0.3), 0.0, 1.0);\n")}break;case"pitch":switch(l.type){case"Pot":o+="\n            granular".concat(n,"_currentPitch = (pot").concat(s,"_value - 0.5) * 4.0; // ±2 octaves\n");break;case"ADSR":o+="\n            granular".concat(n,"_currentPitch = granular").concat(n,"_pitch + (adsr").concat(s,"_output * 2.0);\n")}break;case"dry_wet":"Pot"===l.type&&(o+="\n            granular".concat(n,"_currentDryWet = pot").concat(s,"_value; // 0=dry, 1=wet\n"));break;case"freeze":"LEDButton"===l.type&&(o+="\n            granular".concat(n,"_currentFreeze = btn").concat(s,"_pressed; // Freeze buffer\n"))}}}}),o+="\n            // Apply parameter constraints for stability\n            granular".concat(n,"_grain_density = constrain(granular").concat(n,"_currentDensity, 1.0, 20.0);\n            granular").concat(n,"_position = constrain(granular").concat(n,"_currentPosition, 0.0, 1.0);\n            granular").concat(n,"_pitch = constrain(granular").concat(n,"_currentPitch, -2.0, 2.0);\n            granular").concat(n,"_dry_wet = constrain(granular").concat(n,"_currentDryWet, 0.0, 1.0);\n            granular").concat(n,"_freeze = granular").concat(n,"_currentFreeze;\n")}},{key:"generateGranularDenseInputConnection",value:function(e,n,t){var a,o=e.from.id.split(":")[0],r=this.connectionResolver.modules.find(function(e){return e.id===o});if(!r)return"";var i=(null===(a=o.match(/\d+$/))||void 0===a?void 0:a[0])||"1";switch(r.type){case"Oscillator":return"granular".concat(n,"_input").concat(t," = osc").concat(i,"_output;");case"Filter":return"granular".concat(n,"_input").concat(t," = filter").concat(i,"_output").concat(t,";");case"VCA":return"granular".concat(n,"_input").concat(t," = vca").concat(i,"_output").concat(t,";");case"SamplePlayer":return"granular".concat(n,"_input").concat(t," = sdPlayer").concat(i,"_output").concat(t,";");default:return"// Unknown input type: ".concat(r.type)}}},{key:"generateSamplePlayerCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"trig"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch"===n.to.port}),r=(t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"sample_select"===n.to.port}),"false"),i="sp".concat(n,"_pitch"),c="sp".concat(n,"_currentFile");if(a){var l=a.from.id.split(":")[0],s=this.connectionResolver.modules.find(function(e){return e.id===l});if(s){var u=s.params?s.params.index:0;"LEDButton"===s.type&&(r="btn".concat(u,"_pressed"))}}if(o){var p=o.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"Scale":i="(scale".concat(m,"_output / 440.0)");break;case"ADSR":i="(sp".concat(n,"_pitch + adsr").concat(m,"_output * 0.5)");break;case"Pot":i="(pot".concat(m,"_value * 2.0 + 0.5)")}}}return e.params.polyphonic?"\n        // SamplePlayer ".concat(n," processing - Polyphonic Mode (6 voices)\n        {\n            bool trigger = ").concat(r,";\n            float pitchRatio = ").concat(i,";\n\n            // Voice allocation and triggering (simplified)\n            if (trigger) {\n                // Find available voice or steal oldest\n                int voiceToUse = sp").concat(n,"_nextVoice;\n                sp").concat(n,"_nextVoice = (sp").concat(n,"_nextVoice + 1) % SP").concat(n,"_VOICES;\n\n                // Initialize voice\n                sp").concat(n,"_voices[voiceToUse].active = true;\n                sp").concat(n,"_voices[voiceToUse].playPosition = 0;\n                sp").concat(n,"_voices[voiceToUse].pitch = pitchRatio;\n                sp").concat(n,"_voices[voiceToUse].fractionalPos = 0.0;\n            }\n\n            // Mix all active voices\n            float mixL = 0.0, mixR = 0.0;\n            for (int v = 0; v < SP").concat(n,"_VOICES; v++) {\n                if (sp").concat(n,"_voices[v].active && sp").concat(n,"_voices[v].psramData) {\n                    // Simple sample playback with pitch control\n                    uint32_t pos = (uint32_t)sp").concat(n,"_voices[v].fractionalPos;\n                    if (pos < sp").concat(n,"_voices[v].sampleLength) {\n                        float sample = (float)sp").concat(n,"_voices[v].psramData[pos] / 32767.0f;\n                        mixL += sample * sp").concat(n,"_voices[v].gain;\n                        mixR += sample * sp").concat(n,"_voices[v].gain;\n\n                        // Advance position with pitch control\n                        sp").concat(n,"_voices[v].fractionalPos += sp").concat(n,"_voices[v].pitch;\n                    } else {\n                        // Sample finished\n                        sp").concat(n,"_voices[v].active = false;\n                    }\n                }\n            }\n\n            sp").concat(n,"_outputL = mixL * sp").concat(n,"_masterGain;\n            sp").concat(n,"_outputR = mixR * sp").concat(n,"_masterGain;\n        }\n"):"\n        // SamplePlayer ".concat(n," processing - Single Voice Mode\n        {\n            // Control signal processing (from existing SampleModules)\n            bool currentTrigger = ").concat(r,";\n            float currentPitch = ").concat(i,";\n            int targetFile = ").concat(c,";\n\n            // Edge detection for trigger\n            if (currentTrigger && !sp").concat(n,"_lastTrigger) {\n                // Trigger detected - start playback\n                if (sp").concat(n,"_lastLoadedFile != -1) {\n                    sp").concat(n,"_player.play();\n                    sp").concat(n,"_playing = true;\n                }\n            }\n            sp").concat(n,"_lastTrigger = currentTrigger;\n\n            // Audio generation\n            if (sp").concat(n,"_playing) {\n                int16_t sampleL = sp").concat(n,"_player.getNextSample();\n                int16_t sampleR = sampleL; // Mono for now\n\n                sp").concat(n,"_outputL = (float)sampleL / 32767.0f * sp").concat(n,"_gain;\n                sp").concat(n,"_outputR = (float)sampleR / 32767.0f * sp").concat(n,"_gain;\n\n                sp").concat(n,"_playing = sp").concat(n,"_player.playing();\n            } else {\n                sp").concat(n,"_outputL = 0.0f;\n                sp").concat(n,"_outputR = 0.0f;\n            }\n\n            // Update pitch if changed\n            if (currentPitch != sp").concat(n,"_pitch) {\n                sp").concat(n,"_pitch = currentPitch;\n                sp").concat(n,"_player.setPlaybackSpeed(sp").concat(n,"_pitch);\n            }\n        }\n")}},{key:"generateProcessingCode",value:function(e,n,t){switch(e.type){case"Oscillator":return this.generateOscillatorProcessingCode(e,n,t);case"Wavetable":return this.generateWavetableCode(e,n,t);case"Noise":case"NoiseGenerator":return this.generateNoiseCode(e,n,t);case"VCA":return this.generateVCAProcessingCode(e,n,t);case"Filter":return this.generateFilterCode(e,n,t);case"Distortion":return this.generateDistortionCode(e,n,t);case"StereoMixer4":return this.generateStereoMixer4ProcessingCode(e,n,t);case"I2SOut":case"PCM5102A Out":return this.generateI2SOutProcessingCode(e,n,t);case"LineIn":return this.generateLineInProcessingCode(e,n,t);case"SamplePlayer":return this.generateSamplePlayerProcessingCode(e,n,t);case"CleanReverb":return this.generateCleanReverbCode(e,n,t);case"Delay":return this.generateDelayCode(e,n,t);case"GranularDense":return this.generateGranularDenseProcessingCode(e,n,t);case"GranularSynth":return this.generateGranularSynthProcessingCode(e,n,t);case"Resonance":return this.generateResonanceProcessingCode(e,n,t);default:return console.warn("No audio processing code generator for: ".concat(e.type)),null}}},{key:"generateNoiseProcessingCode",value:function(e,n,t){return"\n        // Noise Generator ".concat(n," processing\n        if (noise").concat(n,'_debug_counter % 1000 == 0) { // Every ~23ms at 44.1kHz\n            Serial.print("DEBUG: Noise generator').concat(n,' gate=");\n            Serial.print(noise').concat(n,'_gate);\n            Serial.print(", gain=");\n            Serial.print(noise').concat(n,'_gain);\n            Serial.print(", output=");\n            Serial.println(noise').concat(n,"_output);\n        }\n        noise").concat(n,"_debug_counter++;\n\n        float noise").concat(n,"_gateVal = noise").concat(n,"_gate;\n        if (noise").concat(n,"_gateVal > 0.1) {\n            // Generate white noise\n            float sample = ((float)random(-32768, 32768)) / 32768.0;\n            noise").concat(n,"_output = sample * noise").concat(n,"_gain;\n        } else {\n            noise").concat(n,"_output = 0.0;\n        }\n")}},{key:"generateVCAProcessingCode",value:function(e,n,t){return this.generateVCACode(e,n,t)}},{key:"generateFilterProcessingCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("inL"===n.to.port||"input_left"===n.to.port)}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("inR"===n.to.port||"input_right"===n.to.port)}),r="0.0",i="0.0";if(a){var c=a.from.id.split(":")[0],l=this.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s,u=(null===(s=c.match(/\d+$/))||void 0===s?void 0:s[0])||"1";switch(l.type){case"Oscillator":r="osc".concat(u,"_output");break;case"CleanReverb":r="cleanreverb".concat(u,"_outputL");break;case"VCA":r="vca".concat(u,"_outputL");break;case"Noise":r="noise".concat(u,"_output");break;default:r="0.0"}}}if(o){var p=o.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";switch(d.type){case"Oscillator":i="osc".concat(m,"_output");break;case"CleanReverb":i="cleanreverb".concat(m,"_outputR");break;case"VCA":i="vca".concat(m,"_outputR");break;case"Noise":i="noise".concat(m,"_output");break;default:i="0.0"}}}return"\n        // Filter ".concat(n," processing\n        filter").concat(n,"_inputL = ").concat(r,";\n        filter").concat(n,"_inputR = ").concat(i,";\n\n        // Simple low-pass filter implementation\n        float cutoffNorm = constrain(filter").concat(n,"_cutoff / 22050.0, 0.001, 0.99);\n        float alpha = sin(PI * cutoffNorm) / (1.0 + cos(PI * cutoffNorm));\n\n        // Apply filter to left channel\n        filter").concat(n,"_outputL = filter").concat(n,"_y1 + alpha * (filter").concat(n,"_inputL - filter").concat(n,"_y1);\n        filter").concat(n,"_y1 = filter").concat(n,"_outputL;\n\n        // Apply filter to right channel\n        filter").concat(n,"_outputR = filter").concat(n,"_y2 + alpha * (filter").concat(n,"_inputR - filter").concat(n,"_y2);\n        filter").concat(n,"_y2 = filter").concat(n,"_outputR;\n")}},{key:"generateStereoMixer4ProcessingCode",value:function(e,n,t){return"\n        // Stereo Mixer ".concat(n," processing\n        stereoMixer4_").concat(n,"_outputL = (stereoMixer4_").concat(n,"_input1L * stereoMixer4_").concat(n,"_gain1) +\n                                       (stereoMixer4_").concat(n,"_input2L * stereoMixer4_").concat(n,"_gain2) +\n                                       (stereoMixer4_").concat(n,"_input3L * stereoMixer4_").concat(n,"_gain3) +\n                                       (stereoMixer4_").concat(n,"_input4L * stereoMixer4_").concat(n,"_gain4);\n\n        stereoMixer4_").concat(n,"_outputR = (stereoMixer4_").concat(n,"_input1R * stereoMixer4_").concat(n,"_gain1) +\n                                       (stereoMixer4_").concat(n,"_input2R * stereoMixer4_").concat(n,"_gain2) +\n                                       (stereoMixer4_").concat(n,"_input3R * stereoMixer4_").concat(n,"_gain3) +\n                                       (stereoMixer4_").concat(n,"_input4R * stereoMixer4_").concat(n,"_gain4);\n")}},{key:"generateI2SOutProcessingCode",value:function(e,n,t){console.log("DEBUG I2S Processing - Module:",e.id,"Index:",n),console.log("DEBUG I2S Processing - Connections:",t.length);var a=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&("L"===a||"inL"===a)}),o=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&("R"===a||"inR"===a)});console.log("DEBUG I2S Processing - InputL Connection:",a),console.log("DEBUG I2S Processing - InputR Connection:",o);var r="0.0",i="0.0";if(a){for(var c,l,s=(null===(c=(l=a.from&&"string"==typeof a.from?a.from:a.from&&a.from.id?a.from.id.split(":")[0]:"unknown").match(/\d+$/))||void 0===c?void 0:c[0])||"1",u="Unknown",p=0,d=Object.entries({vca:"VCA",oscillator:"Wavetable",wavetable:"Wavetable",osc:"Oscillator",filter:"Filter",noise:"Noise",cleanreverb:"CleanReverb",reverb:"CleanReverb",delay:"Delay",stereomix:"StereoMixer4",panner:"Panner",matrix2x2:"Matrix2x2",granular:"GranularDense",linein:"LineIn",stereoin:"LineIn"});p<d.length;p++){var f=ne(d[p],2),m=f[0],_=f[1];if(l.toLowerCase().startsWith(m)){u=_;break}}switch(console.log("DEBUG I2S Processing - FromModuleId:",l,"Type:",u,"Index:",s),u){case"StereoMixer4":r="stereoMixer4_".concat(s,"_outputL");break;case"Wavetable":r="wt".concat(s,"_outputL");break;case"Oscillator":r="osc".concat(s,"_outputL");break;case"VCA":r="vca".concat(s,"_outputL");break;case"Filter":r="filter".concat(s,"_outputL");break;case"Noise":r="noise".concat(s,"_output");break;case"CleanReverb":r="cleanreverb".concat(s,"_outputL");break;case"Delay":r="delay".concat(s,"_outputL");break;case"GranularDense":r="granular".concat(s,"_outputL");break;case"LineIn":r="linein".concat(s,"_outputL");break;default:r="0.0"}}if(o){for(var g,h,v=(null===(g=(h=o.from&&"string"==typeof o.from?o.from:o.from&&o.from.id?o.from.id.split(":")[0]:"unknown").match(/\d+$/))||void 0===g?void 0:g[0])||"1",b="Unknown",y=0,k=Object.entries({vca:"VCA",oscillator:"Wavetable",wavetable:"Wavetable",osc:"Oscillator",filter:"Filter",noise:"Noise",cleanreverb:"CleanReverb",reverb:"CleanReverb",delay:"Delay",stereomix:"StereoMixer4",panner:"Panner",matrix2x2:"Matrix2x2",granular:"GranularDense",linein:"LineIn",stereoin:"LineIn"});y<k.length;y++){var S=ne(k[y],2),x=S[0],E=S[1];if(h.toLowerCase().startsWith(x)){b=E;break}}switch(console.log("DEBUG I2S Processing - FromModuleId R:",h,"Type:",b,"Index:",v),b){case"StereoMixer4":i="stereoMixer4_".concat(v,"_outputR");break;case"Wavetable":i="wt".concat(v,"_outputR");break;case"Oscillator":i="osc".concat(v,"_outputR");break;case"VCA":i="vca".concat(v,"_outputR");break;case"Filter":i="filter".concat(v,"_outputR");break;case"Noise":i="noise".concat(v,"_output");break;case"CleanReverb":i="cleanreverb".concat(v,"_outputR");break;case"Delay":i="delay".concat(v,"_outputR");break;case"GranularDense":i="granular".concat(v,"_outputR");break;case"LineIn":i="linein".concat(v,"_outputR");break;default:i="0.0"}}return console.log("DEBUG I2S Processing - Final Sources: L="+r+", R="+i),"\n        // I2S Output ".concat(n," processing - assign inputs then process (per sample)\n        i2sout").concat(n,"_inputL = ").concat(r,";\n        i2sout").concat(n,"_inputR = ").concat(i,";\n\n        // Debug output disabled for cleaner serial output\n\n        // Add connected signals to buffers (like working 1709Code)\n        leftBuffer[i] += i2sout").concat(n,"_inputL * i2sout").concat(n,"_volume;\n        rightBuffer[i] += i2sout").concat(n,"_inputR * i2sout").concat(n,"_volume;\n")}},{key:"generateLineInProcessingCode",value:function(e,n,t){var a=e.params.dc_block?"\n        // Apply DC blocking filter (HPF ~3.5Hz at 44.1kHz)\n        float linein".concat(n,"_dc_out_L = linein").concat(n,"_rawL - linein").concat(n,"_dc_x_prev_L + linein").concat(n,"_dc_coeff * linein").concat(n,"_dc_y_prev_L;\n        float linein").concat(n,"_dc_out_R = linein").concat(n,"_rawR - linein").concat(n,"_dc_x_prev_R + linein").concat(n,"_dc_coeff * linein").concat(n,"_dc_y_prev_R;\n        linein").concat(n,"_dc_x_prev_L = linein").concat(n,"_rawL;\n        linein").concat(n,"_dc_x_prev_R = linein").concat(n,"_rawR;\n        linein").concat(n,"_dc_y_prev_L = linein").concat(n,"_dc_out_L;\n        linein").concat(n,"_dc_y_prev_R = linein").concat(n,"_dc_out_R;\n        linein").concat(n,"_outputL = linein").concat(n,"_dc_out_L;\n        linein").concat(n,"_outputR = linein").concat(n,"_dc_out_R;"):"\n        linein".concat(n,"_outputL = linein").concat(n,"_rawL;\n        linein").concat(n,"_outputR = linein").concat(n,"_rawR;");return"\n        // Line In ".concat(n," processing\n        // Read from I2S input buffer (i2sInputBuffer) and apply gain\n        // Note: i2sInputBuffer is populated by i2s_read in the main audio processing function\n        int32_t linein").concat(n,"_sample_L = i2sInputBuffer[i * 2];\n        int32_t linein").concat(n,"_sample_R = i2sInputBuffer[i * 2 + 1];\n\n        // Convert 24-bit in 32-bit slot to float and apply gain\n        int32_t linein").concat(n,"_val24_L = (linein").concat(n,"_sample_L >> 8);  // 24-bit domain\n        int32_t linein").concat(n,"_val24_R = (linein").concat(n,"_sample_R >> 8);\n        float linein").concat(n,"_rawL = ((float)linein").concat(n,"_val24_L / 8388608.0f) * linein").concat(n,"_gain;\n        float linein").concat(n,"_rawR = ((float)linein").concat(n,"_val24_R / 8388608.0f) * linein").concat(n,"_gain;\n\n        // Clamp to valid range\n        if (linein").concat(n,"_rawL >  1.0f) linein").concat(n,"_rawL =  1.0f;\n        if (linein").concat(n,"_rawL < -1.0f) linein").concat(n,"_rawL = -1.0f;\n        if (linein").concat(n,"_rawR >  1.0f) linein").concat(n,"_rawR =  1.0f;\n        if (linein").concat(n,"_rawR < -1.0f) linein").concat(n,"_rawR = -1.0f;\n").concat(a,"\n")}},{key:"generateDelayCode",value:function(e,n,t){var a=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&("inL"===a||"in"===a)}),o=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"inR"===a}),r=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"time"===a}),i=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"feedback"===a}),c=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"mix"===a}),l=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"tempo_hz"===a}),s=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"freeze"===a}),u=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"pingpong"===a}),p=t.find(function(n){var t,a;if(n.to&&"string"==typeof n.to)t=n.to,a=n.toPort;else{if(!n.to||!n.to.id)return!1;t=n.to.id.split(":")[0],a=n.to.port||n.to.id.split(":")[1]}return t===e.id&&"pitch_shift"===a}),d="delay".concat(n,"_time_ms"),f="delay".concat(n,"_feedback"),m="delay".concat(n,"_mix"),_="delay".concat(n,"_pingpong"),g="delay".concat(n,"_freeze"),h="delay".concat(n,"_pitch_shift"),v="delay".concat(n,"_division"),b="delay".concat(n,"_tempo_hz");if(a){var y;a.from&&"string"==typeof a.from?y=a.from:a.from&&a.from.id&&(y=a.from.id.split(":")[0]);var k=this.connectionResolver.modules.find(function(e){return e.id===y});if(k){var S,x=(null===(S=y.match(/\d+$/))||void 0===S?void 0:S[0])||"1";switch(k.type){case"VCA":"vca".concat(x,"_outputL");break;case"Oscillator":"osc".concat(x,"_outputL");break;case"Filter":"filter".concat(x,"_outputL");break;case"Noise":case"NoiseGenerator":"noise".concat(x,"_output");break;case"CleanReverb":"cleanreverb".concat(x,"_outputL");break;case"StereoMixer4":"stereoMixer4_".concat(x,"_outputL")}}}if(o){var E;o.from&&"string"==typeof o.from?E=o.from:o.from&&o.from.id&&(E=o.from.id.split(":")[0]);var w=this.connectionResolver.modules.find(function(e){return e.id===E});if(w){var P,C=(null===(P=E.match(/\d+$/))||void 0===P?void 0:P[0])||"1";switch(w.type){case"VCA":"vca".concat(C,"_outputR");break;case"Oscillator":"osc".concat(C,"_outputR");break;case"Filter":"filter".concat(C,"_outputR");break;case"Noise":case"NoiseGenerator":"noise".concat(C,"_output");break;case"CleanReverb":"cleanreverb".concat(C,"_outputR");break;case"StereoMixer4":"stereoMixer4_".concat(C,"_outputR")}}}if(r){var R;r.from&&"string"==typeof r.from?R=r.from:r.from&&r.from.id&&(R=r.from.id.split(":")[0]);var L=this.connectionResolver.modules.find(function(e){return e.id===R});if(L){var I,M=(null===(I=R.match(/\d+$/))||void 0===I?void 0:I[0])||"1";if("Pot"===L.type){var D=L.params.index||M;d="(pot".concat(D,"_value * 1000.0)")}}}if(i){var A;i.from&&"string"==typeof i.from?A=i.from:i.from&&i.from.id&&(A=i.from.id.split(":")[0]);var T=this.connectionResolver.modules.find(function(e){return e.id===A});if(T){var O,B=(null===(O=A.match(/\d+$/))||void 0===O?void 0:O[0])||"1";if("Pot"===T.type){var z=T.params.index||B;f="pot".concat(z,"_value")}}}if(c){var F;c.from&&"string"==typeof c.from?F=c.from:c.from&&c.from.id&&(F=c.from.id.split(":")[0]);var N=this.connectionResolver.modules.find(function(e){return e.id===F});if(N){var G,q=(null===(G=F.match(/\d+$/))||void 0===G?void 0:G[0])||"1";if("Pot"===N.type){var U=N.params.index||q;m="pot".concat(U,"_value")}}}if(l){var W;l.from&&"string"==typeof l.from?W=l.from:l.from&&l.from.id&&(W=l.from.id.split(":")[0]);var V=this.connectionResolver.modules.find(function(e){return e.id===W});if(V){var j,H=(null===(j=W.match(/\d+$/))||void 0===j?void 0:j[0])||"1";switch(V.type){case"GateGen":case"Gate Generator":b="gate".concat(H,"_rate");break;case"Clock":b="clock".concat(H,"_tempo_hz")}}}if(s){var $;s.from&&"string"==typeof s.from?$=s.from:s.from&&s.from.id&&($=s.from.id.split(":")[0]);var K=this.connectionResolver.modules.find(function(e){return e.id===$});if(K){var Y,X,Z=(null===(Y=$.match(/\d+$/))||void 0===Y?void 0:Y[0])||"1",Q=(null===(X=K.params)||void 0===X?void 0:X.index)||Z;switch(K.type){case"LEDButton":g="btn".concat(Q,"_pressed ? 1.0 : 0.0");break;case"Pot":g="pot".concat(Q,"_value");break;case"ADSR":g="adsr".concat(Z,"_output");break;case"LFO":g="lfo".concat(Z,"_output")}}}if(u){var J;u.from&&"string"==typeof u.from?J=u.from:u.from&&u.from.id&&(J=u.from.id.split(":")[0]);var ee=this.connectionResolver.modules.find(function(e){return e.id===J});if(ee){var ne,te,ae=(null===(ne=J.match(/\d+$/))||void 0===ne?void 0:ne[0])||"1",oe=(null===(te=ee.params)||void 0===te?void 0:te.index)||ae;switch(ee.type){case"Pot":_="pot".concat(oe,"_value");break;case"LFO":_="lfo".concat(ae,"_output")}}}if(p){var re;p.from&&"string"==typeof p.from?re=p.from:p.from&&p.from.id&&(re=p.from.id.split(":")[0]);var ie=this.connectionResolver.modules.find(function(e){return e.id===re});if(ie){var ce,le,se=(null===(ce=re.match(/\d+$/))||void 0===ce?void 0:ce[0])||"1",ue=(null===(le=ie.params)||void 0===le?void 0:le.index)||se;switch(ie.type){case"Pot":h="(0.25 + pot".concat(ue,"_value * 3.75)");break;case"LFO":h="(0.25 + lfo".concat(se,"_output * 3.75)")}}}return"\n        // Delay ".concat(n," processing - Professional Feedback Delay with Ping-Pong, Freeze & Pitch Shift\n        {\n            float time_ms = ").concat(d,";\n            float tempo_hz = ").concat(b,";\n            float division = ").concat(v,";\n            float feedback = ").concat(f,";\n            float mix = ").concat(m,";\n            float pingpong = constrain(").concat(_,", 0.0, 1.0);\n            float freeze = ").concat(g,";\n            float pitch_shift = constrain(").concat(h,", 0.25, 4.0);\n            float inputL = delay").concat(n,"_inputL;\n            float inputR = delay").concat(n,"_inputR;\n\n            // Tempo sync: if tempo_hz is connected, calculate time from tempo and division\n            if (tempo_hz > 0.01) {\n                time_ms = (1000.0 / tempo_hz) * division;\n            }\n\n            float delayTime = constrain(time_ms, 1.0, 2000.0); // 1ms to 2000ms\n            mix = constrain(mix, 0.0, 1.0);\n\n            // Freeze mode: mute input and set infinite feedback\n            if (freeze > 0.5) {\n                inputL = 0.0; // Mute input\n                inputR = 0.0;\n                feedback = 0.99; // Infinite feedback (freeze buffer)\n            } else {\n                feedback = constrain(feedback, 0.0, 0.95); // Prevent runaway feedback (normal mode)\n            }\n\n            // Calculate delay samples from time in milliseconds\n            float delaySamplesFloat = delayTime * 44.1; // Samples at 44.1kHz\n            int delaySamplesInt = (int)delaySamplesFloat;\n            delaySamplesInt = constrain(delaySamplesInt, 1, DELAY").concat(n,"_BUFFER_SIZE - 1);\n\n            // Pitch shift: variable read speed (only when pitch_shift != 1.0)\n            float readPosFloatL, readPosFloatR;\n            if (pitch_shift != 1.0) {\n                // Update read position with pitch ratio\n                delay").concat(n,"_readPosFloat += pitch_shift;\n                if (delay").concat(n,"_readPosFloat >= DELAY").concat(n,"_BUFFER_SIZE) {\n                    delay").concat(n,"_readPosFloat -= DELAY").concat(n,"_BUFFER_SIZE;\n                }\n                readPosFloatL = delay").concat(n,"_readPosFloat;\n                readPosFloatR = delay").concat(n,"_readPosFloat;\n            } else {\n                // Normal mode: read from delay time\n                readPosFloatL = (float)((delay").concat(n,"_writePos - delaySamplesInt + DELAY").concat(n,"_BUFFER_SIZE) % DELAY").concat(n,"_BUFFER_SIZE);\n                readPosFloatR = readPosFloatL;\n            }\n\n            // Linear interpolation for smooth pitch shifting\n            int readPosL_int = (int)readPosFloatL;\n            int readPosL_next = (readPosL_int + 1) % DELAY").concat(n,"_BUFFER_SIZE;\n            float fracL = readPosFloatL - (float)readPosL_int;\n            float delayedL = delay").concat(n,"_bufferL[readPosL_int] * (1.0 - fracL) + delay").concat(n,"_bufferL[readPosL_next] * fracL;\n\n            int readPosR_int = (int)readPosFloatR;\n            int readPosR_next = (readPosR_int + 1) % DELAY").concat(n,"_BUFFER_SIZE;\n            float fracR = readPosFloatR - (float)readPosR_int;\n            float delayedR = delay").concat(n,"_bufferR[readPosR_int] * (1.0 - fracR) + delay").concat(n,"_bufferR[readPosR_next] * fracR;\n\n            // Apply feedback damping filter to prevent harsh feedback\n            delay").concat(n,"_feedback_lpf_L = delay").concat(n,"_feedback_lpf_L * 0.7 + delayedL * 0.3;\n            delay").concat(n,"_feedback_lpf_R = delay").concat(n,"_feedback_lpf_R * 0.7 + delayedR * 0.3;\n\n            // Ping-pong mode: swap L/R feedback\n            float feedbackL_source = delay").concat(n,"_feedback_lpf_L * (1.0 - pingpong) + delay").concat(n,"_feedback_lpf_R * pingpong;\n            float feedbackR_source = delay").concat(n,"_feedback_lpf_R * (1.0 - pingpong) + delay").concat(n,"_feedback_lpf_L * pingpong;\n\n            // Write new samples with feedback\n            delay").concat(n,"_bufferL[delay").concat(n,"_writePos] = inputL + feedbackL_source * feedback;\n            delay").concat(n,"_bufferR[delay").concat(n,"_writePos] = inputR + feedbackR_source * feedback;\n\n            // Advance write position\n            delay").concat(n,"_writePos = (delay").concat(n,"_writePos + 1) % DELAY").concat(n,"_BUFFER_SIZE;\n\n            // Output with dry/wet mix\n            delay").concat(n,"_outputL = inputL * (1.0 - mix) + delayedL * mix;\n            delay").concat(n,"_outputR = inputR * (1.0 - mix) + delayedR * mix;\n\n            // Denormal protection (prevent CPU performance issues and artifacts)\n            if (fabsf(delay").concat(n,"_outputL) < 1e-12f) delay").concat(n,"_outputL = 0.0f;\n            if (fabsf(delay").concat(n,"_outputR) < 1e-12f) delay").concat(n,"_outputR = 0.0f;\n        }\n")}},{key:"generateWavetableVariables",value:function(e,n,t){for(var a=e.params.wavetables||[],o=512,r="",i=0;i<4;i++){var c=a[i];if(c&&c.length>0)r+="\n// Wavetable ".concat(i," data (").concat(c.length," samples)\nfloat wt").concat(n,"_table").concat(i,"[").concat(o,"] = {\n    ").concat(Array.from(c).map(function(e,n){var t=e.toFixed(6)+"f";return n%8==0&&n>0?"\n    "+t:t}).join(", "),"\n};");else{var l=void 0,s=void 0;switch(i){case 0:l=Array.from({length:o},function(e,n){return Math.sin(n/o*2*Math.PI)}),s="sine wave - default";break;case 1:l=Array.from({length:o},function(e,n){return n/o*2-1}),s="sawtooth wave - default";break;case 2:l=Array.from({length:o},function(e,n){return n<256?1:-1}),s="square wave - default";break;case 3:l=Array.from({length:o},function(e,n){var t=n/o;return t<.5?4*t-1:3-4*t}),s="triangle wave - default"}r+="\n// Wavetable ".concat(i," data (").concat(s,")\nfloat wt").concat(n,"_table").concat(i,"[").concat(o,"] = {\n    ").concat(l.map(function(e,n){var t=e.toFixed(6)+"f";return n%8==0&&n>0?"\n    "+t:t}).join(", "),"\n};")}}return"\n// ".concat(t.label," ").concat(n,"\n").concat(r,"\n\n// Wavetable oscillator variables\n#define WT").concat(n,"_TABLE_SIZE ").concat(o,"\nfloat wt").concat(n,"_phase = 0.0;\nfloat wt").concat(n,"_freq = ").concat(e.params.freq||440,";\nfloat wt").concat(n,"_gain = ").concat(e.params.gain||.25,";\nfloat wt").concat(n,"_gate = ").concat(e.params.gate||1,";\nfloat wt").concat(n,"_morph = ").concat(e.params.morph||0,";\nint wt").concat(n,"_current_table = ").concat(e.params.current_table||0,";\nfloat wt").concat(n,"_pitch_amount = ").concat(e.params.pitch_range||24,";\nfloat wt").concat(n,"_fm_amount = ").concat(e.params.fm_amount||0,";\nfloat wt").concat(n,"_fm_ratio = ").concat(e.params.fm_ratio||1,";\nfloat wt").concat(n,"_fm_ratio_cv = 0.0; // CV control for FM ratio (0-1)\nfloat wt").concat(n,"_pitch_smooth = 0.5;\nfloat wt").concat(n,"_outputL = 0.0;\nfloat wt").concat(n,"_outputR = 0.0;\n")}},{key:"generateSamplePlayerProcessingCode",value:function(e,n,t){return this.generateSamplePlayerCode(e,n,t)}},{key:"generateGranularDenseProcessingCode",value:function(e,n,t){var a=this,o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inL"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"inR"===n.to.port}),i="0.0",c="0.0";if(o){var l=o.from.id.split(":")[0],s=this.connectionResolver.modules.find(function(e){return e.id===l});if(s){var u,p=(null===(u=l.match(/\d+$/))||void 0===u?void 0:u[0])||"1";i="".concat(s.type.toLowerCase()).concat(p,"_outputL"),"Oscillator"===s.type&&(i="osc".concat(p,"_outputL"))}}if(r){var d=r.from.id.split(":")[0],f=this.connectionResolver.modules.find(function(e){return e.id===d});if(f){var m,_=(null===(m=d.match(/\d+$/))||void 0===m?void 0:m[0])||"1";c="".concat(f.type.toLowerCase()).concat(_,"_outputR"),"Oscillator"===f.type&&(c="osc".concat(_,"_outputR"))}}var g=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"grain_density"===n.to.port}),h=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"position"===n.to.port}),v=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch"===n.to.port}),b=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"dry_wet"===n.to.port}),y=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"freeze"===n.to.port}),k=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"stereo_width"===n.to.port}),S=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"cloud_pan"===n.to.port}),x=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch_cv_1"===n.to.port}),E=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch_cv_2"===n.to.port}),w=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch_cv_3"===n.to.port}),P=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch_cv_4"===n.to.port}),C="\n        // GranularDense ".concat(n," - Dense granular synthesis with 20 grains (round-robin: 10 grains/sample, ~76% CPU at max density)\n        granular").concat(n,"_inputL = ").concat(i,";\n        granular").concat(n,"_inputR = ").concat(c,";");if(g||(C+="\n        granular".concat(n,"_currentDensity = granular").concat(n,"_grain_density;")),h||(C+="\n        granular".concat(n,"_currentPosition = granular").concat(n,"_position;")),v||(C+="\n        granular".concat(n,"_currentPitch = granular").concat(n,"_pitch;")),b||(C+="\n        granular".concat(n,"_currentDryWet = granular").concat(n,"_dry_wet;")),y||(C+="\n        granular".concat(n,"_currentFreeze = granular").concat(n,"_freeze;")),C+="\n",g){var R=g.from.id.split(":")[0],L=this.connectionResolver.modules.find(function(e){return e.id===R});if("Pot"===(null==L?void 0:L.type)){var I=L.params.index||1;C+=this.generateBankAwareAssignment(L,"granular".concat(n,"_currentDensity = pot").concat(I,"_value * 20.0; // 0-20 grains/sec (round-robin processing)"))}}if(h){var M=h.from.id.split(":")[0],D=this.connectionResolver.modules.find(function(e){return e.id===M});if("Pot"===(null==D?void 0:D.type)){var A=D.params.index||1;C+=this.generateBankAwareAssignment(D,"granular".concat(n,"_currentPosition = pot").concat(A,"_value; // 0-1 position"))}}if(v){var T=v.from.id.split(":")[0],O=this.connectionResolver.modules.find(function(e){return e.id===T});if("Pot"===(null==O?void 0:O.type)){var B=O.params.index||1;C+=this.generateBankAwareAssignment(O,"granular".concat(n,"_currentPitch = (pot").concat(B,"_value - 0.5) * 24.0; // -12 to +12 semitones (1 octave)"))}}if(b){var z=b.from.id.split(":")[0],F=this.connectionResolver.modules.find(function(e){return e.id===z});if("Pot"===(null==F?void 0:F.type)){var N=F.params.index||1;C+=this.generateBankAwareAssignment(F,"granular".concat(n,"_currentDryWet = pot").concat(N,"_value; // 0-1 dry/wet"))}}if(y){var G=y.from.id.split(":")[0],q=this.connectionResolver.modules.find(function(e){return e.id===G});if("LEDButton"===(null==q?void 0:q.type)){var U,W=(null===(U=G.match(/\d+$/))||void 0===U?void 0:U[0])||"1";C+="        granular".concat(n,"_currentFreeze = btn").concat(W,"_output; // Button freeze control\n")}}if(k){var V=k.from.id.split(":")[0],j=this.connectionResolver.modules.find(function(e){return e.id===V});if("Pot"===(null==j?void 0:j.type)){var H=j.params.index||1;C+=this.generateBankAwareAssignment(j,"granular".concat(n,"_currentStereoWidth = pot").concat(H,"_value; // 0-1 stereo width"))}}if(S){var $=S.from.id.split(":")[0],K=this.connectionResolver.modules.find(function(e){return e.id===$});if("Pot"===(null==K?void 0:K.type)){var Y=K.params.index||1;C+=this.generateBankAwareAssignment(K,"granular".concat(n,"_currentCloudPan = 0.1 + (pot").concat(Y,"_value * 0.8); // 0.1-0.9 cloud pan (10% margin)"))}}var X=function(e,t){if(!e)return"";var o="",r=e.from.id.split(":")[0],i=a.connectionResolver.modules.find(function(e){return e.id===r});if("Pot"===(null==i?void 0:i.type)){var c=i.params.index||1;o+=a.generateBankAwareAssignment(i,"granular".concat(n,"_currentPitchCV").concat(t," = (pot").concat(c,"_value - 0.5) * 24.0; // -12 to +12 semitones CV").concat(t))}else if("ADSR"===(null==i?void 0:i.type)){var l,s=(null===(l=r.match(/\d+$/))||void 0===l?void 0:l[0])||"1";o+="        granular".concat(n,"_currentPitchCV").concat(t," = (adsr").concat(s,"_output - 0.5) * 24.0; // CV").concat(t," from ADSR\n")}else if("LFO"===(null==i?void 0:i.type)){var u,p=(null===(u=r.match(/\d+$/))||void 0===u?void 0:u[0])||"1";o+="        granular".concat(n,"_currentPitchCV").concat(t," = lfo").concat(p,"_output * 12.0; // CV").concat(t," from LFO\n")}else if("HarmonicSequencer"===(null==i?void 0:i.type)){var d,f,m=(null===(d=r.match(/\d+$/))||void 0===d?void 0:d[0])||"1",_=(null===(f=e.from.port.match(/v(\d+)_pitch/))||void 0===f?void 0:f[1])||"1";o+="        granular".concat(n,"_currentPitchCV").concat(t," = harmseq").concat(m,"_v").concat(_,"_pitch; // CV").concat(t," from HarmonicSequencer voice ").concat(_,"\n")}return o};C+=X(x,1),C+=X(E,2),C+=X(w,3),C+=X(P,4),C+="\n        // Dense granular processing with freeze capability - 32ms grains, 20 concurrent\n        // Only fill buffer if not frozen\n        if (granular".concat(n,"_currentFreeze < 0.9) {\n            granular").concat(n,"_buffer_L[granular").concat(n,"_write_pos] = granular").concat(n,"_inputL;\n            granular").concat(n,"_buffer_R[granular").concat(n,"_write_pos] = granular").concat(n,"_inputR;\n            granular").concat(n,"_write_pos = (granular").concat(n,"_write_pos + 1) % granular").concat(n,"_buffer_size;\n        }\n\n        // Dense grain triggering with memory-efficient rate limiting\n        granular").concat(n,"_samples_since_grain++;\n        float grainInterval = 44100.0 / constrain(granular").concat(n,"_currentDensity, 0.1f, 20.0f);\n\n        // Only trigger if we have a reasonable interval and available grain slots\n        static int granular").concat(n,"_activeGrainCount = 0;\n        if (granular").concat(n,"_samples_since_grain >= (int)grainInterval && granular").concat(n,"_activeGrainCount < 16) {\n            // Find an inactive grain slot (limit to 16 concurrent for stability at max density)\n            for (int i = 0; i < 20; i++) {\n                if (!granular").concat(n,"_grains[i].active) {\n                    granular").concat(n,"_grains[i].active = true;\n\n                    // Position in buffer with spread - read from BEHIND write position for delay effect\n                    // currentPosition: 0=max delay (oldest audio), 1=min delay (recent audio)\n                    float delayAmount = (1.0f - granular").concat(n,"_currentPosition) * granular").concat(n,"_buffer_size * 0.9f; // Up to 90% of buffer\n                    float basePos = (float)granular").concat(n,"_write_pos - delayAmount;\n                    if (basePos < 0) basePos += granular").concat(n,"_buffer_size;\n\n                    float spreadRange = granular").concat(n,"_position_spread * granular").concat(n,"_buffer_size * 0.5;\n                    float spread = ((float)random(-1000, 1000) / 1000.0) * spreadRange;\n                    granular").concat(n,"_grains[i].position = basePos + spread;\n\n                    // Ensure position is within buffer bounds\n                    if (granular").concat(n,"_grains[i].position < 0)\n                        granular").concat(n,"_grains[i].position += granular").concat(n,"_buffer_size;\n                    if (granular").concat(n,"_grains[i].position >= granular").concat(n,"_buffer_size)\n                        granular").concat(n,"_grains[i].position -= granular").concat(n,"_buffer_size;\n\n                    // Pitch ratio with spread and grouped CV modulation\n                    float pitchSpread = ((float)random(-1000, 1000) / 1000.0) * granular").concat(n,"_pitch_spread;\n\n                    // Select pitch CV based on grain group (dynamic grouping)\n                    float cvPitch = 0.0;\n");var Z=[x,E,w,P].filter(function(e){return void 0!==e}).length;if(0===Z)C+="                    // No pitch CV connections\n";else if(1===Z){var Q=x?1:E?2:w?3:4;C+="                    // Single pitch CV - all grains use CV".concat(Q,"\n"),C+="                    cvPitch = granular".concat(n,"_currentPitchCV").concat(Q,";\n")}else if(2===Z){var J=x?1:E?2:3,ee=P?4:w?3:2;C+="                    // 2 pitch CVs - 10 grains per group\n",C+="                    if (i < 10) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV").concat(J,";\n"),C+="                    } else {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV").concat(ee,";\n"),C+="                    }\n"}else if(3===Z){var ne=[x?1:0,E?2:0,w?3:0,P?4:0].filter(function(e){return e>0});C+="                    // 3 pitch CVs - groups of 7, 7, 6 grains\n",C+="                    if (i < 7) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV").concat(ne[0],";\n"),C+="                    } else if (i < 14) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV").concat(ne[1],";\n"),C+="                    } else {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV").concat(ne[2],";\n"),C+="                    }\n"}else C+="                    // 4 pitch CVs - 5 grains per group\n",C+="                    if (i < 5) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV1;\n"),C+="                    } else if (i < 10) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV2;\n"),C+="                    } else if (i < 15) {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV3;\n"),C+="                    } else {\n",C+="                        cvPitch = granular".concat(n,"_currentPitchCV4;\n"),C+="                    }\n";return C+="\n                    float totalPitch = granular".concat(n,"_currentPitch + cvPitch + pitchSpread;\n                    granular").concat(n,"_grains[i].pitch_ratio = pow(2.0, totalPitch / 12.0);\n\n                    // Reverse every second grain (odd indices)\n                    if (i % 2 == 1) {\n                        granular").concat(n,"_grains[i].pitch_ratio = -granular").concat(n,"_grains[i].pitch_ratio;\n                    }\n"),C+="\n                    // Stereo panning calculation\n",Z>1?(C+="                    if (granular".concat(n,"_grouped_panning > 0.5) {\n"),C+="                        // GROUPED PANNING MODE: Each pitch group has its own pan anchor\n",2===Z?(C+="                        float groupAnchor;\n",C+="                        int groupIndex;\n",C+="                        bool isGroupLeader;\n",C+="                        if (i < 10) {\n",C+="                            groupIndex = 0;\n",C+="                            isGroupLeader = (i == 0);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan - granular").concat(n,"_currentStereoWidth * 0.25; // Group 1 left\n"),C+="                        } else {\n",C+="                            groupIndex = 1;\n",C+="                            isGroupLeader = (i == 10);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan + granular").concat(n,"_currentStereoWidth * 0.25; // Group 2 right\n"),C+="                        }\n"):3===Z?(C+="                        float groupAnchor;\n",C+="                        int groupIndex;\n",C+="                        bool isGroupLeader;\n",C+="                        if (i < 7) {\n",C+="                            groupIndex = 0;\n",C+="                            isGroupLeader = (i == 0);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan - granular").concat(n,"_currentStereoWidth * 0.333; // Group 1 left\n"),C+="                        } else if (i < 14) {\n",C+="                            groupIndex = 1;\n",C+="                            isGroupLeader = (i == 7);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan; // Group 2 center\n"),C+="                        } else {\n",C+="                            groupIndex = 2;\n",C+="                            isGroupLeader = (i == 14);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan + granular").concat(n,"_currentStereoWidth * 0.333; // Group 3 right\n"),C+="                        }\n"):4===Z&&(C+="                        float groupAnchor;\n",C+="                        int groupIndex;\n",C+="                        bool isGroupLeader;\n",C+="                        if (i < 5) {\n",C+="                            groupIndex = 0;\n",C+="                            isGroupLeader = (i == 0);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan - granular").concat(n,"_currentStereoWidth * 0.375; // Group 1 far left\n"),C+="                        } else if (i < 10) {\n",C+="                            groupIndex = 1;\n",C+="                            isGroupLeader = (i == 5);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan - granular").concat(n,"_currentStereoWidth * 0.125; // Group 2 center-left\n"),C+="                        } else if (i < 15) {\n",C+="                            groupIndex = 2;\n",C+="                            isGroupLeader = (i == 10);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan + granular").concat(n,"_currentStereoWidth * 0.125; // Group 3 center-right\n"),C+="                        } else {\n",C+="                            groupIndex = 3;\n",C+="                            isGroupLeader = (i == 15);\n",C+="                            groupAnchor = granular".concat(n,"_currentCloudPan + granular").concat(n,"_currentStereoWidth * 0.375; // Group 4 far right\n"),C+="                        }\n"),C+="                        // First grain of each group uses exact anchor, others spread relative to it\n",C+="                        if (isGroupLeader) {\n",C+="                            granular".concat(n,"_grains[i].pan = constrain(groupAnchor, 0.0f, 1.0f);\n"),C+="                        } else {\n",C+="                            // Spread within group (1/".concat(Z," of total stereo_width per group)\n"),C+="                            float groupSpread = ((float)random(-1000, 1000) / 1000.0) * granular".concat(n,"_currentStereoWidth * 0.5 / ").concat(Z,".0;\n"),C+="                            granular".concat(n,"_grains[i].pan = constrain(groupAnchor + groupSpread, 0.0f, 1.0f);\n"),C+="                        }\n",C+="                    } else {\n",C+="                        // NORMAL MODE: All grains spread from single cloud_pan anchor\n",C+="                        if (i == 0) {\n",C+="                            granular".concat(n,"_grains[i].pan = granular").concat(n,"_currentCloudPan;\n"),C+="                        } else {\n",C+="                            float panSpread = ((float)random(-1000, 1000) / 1000.0) * granular".concat(n,"_currentStereoWidth;\n"),C+="                            granular".concat(n,"_grains[i].pan = constrain(granular").concat(n,"_currentCloudPan + panSpread, 0.05f, 0.95f);\n"),C+="                        }\n",C+="                    }\n"):(C+="                    // Normal panning - first grain anchored, others spread relative\n",C+="                    if (i == 0) {\n",C+="                        granular".concat(n,"_grains[i].pan = granular").concat(n,"_currentCloudPan;\n"),C+="                    } else {\n",C+="                        float panSpread = ((float)random(-1000, 1000) / 1000.0) * granular".concat(n,"_currentStereoWidth;\n"),C+="                        granular".concat(n,"_grains[i].pan = constrain(granular").concat(n,"_currentCloudPan + panSpread, 0.05f, 0.95f);\n"),C+="                    }\n"),C+"\n\n                    // Short 32ms grains for dense texture - fixed size for consistent texture\n                    const int grainSamples = (int)(0.032 * 44100.0); // 32ms\n                    granular".concat(n,"_grains[i].samples_remaining = grainSamples;\n\n                    // Envelope setup for short grains\n                    granular").concat(n,"_grains[i].envelope_pos = 0.0;\n                    granular").concat(n,"_grains[i].envelope_inc = 1.0 / grainSamples;\n\n                    granular").concat(n,"_samples_since_grain = 0;\n                    granular").concat(n,"_activeGrainCount++;\n                    break;\n                }\n            }\n        }\n\n        // Process grains (round-robin: 10 grains per sample for 50% CPU reduction)\n        float grainSumL = 0.0;\n        float grainSumR = 0.0;\n        int activeGrains = 0;\n\n        // Alternate between even-indexed (0,2,4...) and odd-indexed (1,3,5...) grains\n        int startGrain = granular").concat(n,"_process_even ? 0 : 1;\n        for (int i = startGrain; i < 20; i += 2) {\n            if (granular").concat(n,"_grains[i].active) {\n                activeGrains++;\n\n                // Read from buffer with pitch shifting\n                int readPos = (int)granular").concat(n,"_grains[i].position;\n                float sampleL = granular").concat(n,"_buffer_L[readPos];\n                float sampleR = granular").concat(n,"_buffer_R[readPos];\n\n                // Apply envelope (Hann window from pre-calculated table - fast lookup)\n                // Clamp envelope_pos to [0.0, 1.0] to prevent clicks from out-of-range lookups\n                float envPos = constrain(granular").concat(n,"_grains[i].envelope_pos, 0.0f, 1.0f);\n                int tableIdx = (int)(envPos * 255.0f);\n                float envelope = granular").concat(n,"_envelopeTable[tableIdx];\n\n                // Additional fade-in/fade-out for click-free grain edges (first/last 5% of grain)\n                float fadeFactor = 1.0f;\n                if (envPos < 0.05f) {\n                    fadeFactor = envPos / 0.05f; // Fade in over first 5%\n                } else if (envPos > 0.95f) {\n                    fadeFactor = (1.0f - envPos) / 0.05f; // Fade out over last 5%\n                }\n                envelope *= fadeFactor;\n\n                // Apply stereo panning (equal power pan law)\n                float panL = sqrt(1.0 - granular").concat(n,"_grains[i].pan);  // Left channel gain\n                float panR = sqrt(granular").concat(n,"_grains[i].pan);        // Right channel gain\n\n                grainSumL += sampleL * envelope * panL;\n                grainSumR += sampleR * envelope * panR;\n\n                // Advance grain\n                granular").concat(n,"_grains[i].position += granular").concat(n,"_grains[i].pitch_ratio;\n\n                // Wrap position\n                if (granular").concat(n,"_grains[i].position >= granular").concat(n,"_buffer_size) {\n                    granular").concat(n,"_grains[i].position -= granular").concat(n,"_buffer_size;\n                }\n\n                // Advance envelope\n                granular").concat(n,"_grains[i].envelope_pos += granular").concat(n,"_grains[i].envelope_inc;\n                granular").concat(n,"_grains[i].samples_remaining--;\n\n                // Deactivate when finished\n                if (granular").concat(n,"_grains[i].samples_remaining <= 0) {\n                    granular").concat(n,"_grains[i].active = false;\n                    granular").concat(n,"_activeGrainCount--;\n                }\n            }\n        }\n\n        // Toggle round-robin flag for next sample (alternate even/odd grains)\n        granular").concat(n,"_process_even = !granular").concat(n,"_process_even;\n\n        // Scale output by active grains to prevent excessive volume with many concurrent grains\n        if (activeGrains > 0) {\n            float grainScale = 2.0 / sqrt((float)activeGrains); // Boosted grain amplitude for better presence\n            grainSumL *= grainScale;\n            grainSumR *= grainScale;\n        }\n\n        // Apply dry/wet mix\n        float dryGain = 1.0 - granular").concat(n,"_currentDryWet;\n        float wetGain = granular").concat(n,"_currentDryWet;\n\n        granular").concat(n,"_outputL = granular").concat(n,"_inputL * dryGain + grainSumL * wetGain;\n        granular").concat(n,"_outputR = granular").concat(n,"_inputR * dryGain + grainSumR * wetGain;\n")}},{key:"generateGranularSynthProcessingCode",value:function(e,n,t){return"\n        // TODO: Implement GranularSynth processing (4 grains, variable size 10-200ms)\n        granular".concat(n,"_outputL = 0.0;\n        granular").concat(n,"_outputR = 0.0;\n")}},{key:"generateResonanceProcessingCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"trigger"===n.to.port}),o="0.0";if(a){var r,i=a.from.id.split(":")[0],c=(a.from.port,this.connectionResolver.modules.find(function(e){return e.id===i})),l=(null===(r=i.match(/\d+$/))||void 0===r?void 0:r[0])||"1";if(c)switch(c.type){case"LEDButton":o="btn".concat(l,"_gate");break;case"GateGen":o="gategen".concat(l,"_gate");break;default:o="resonance".concat(n,"_trigger")}}return"\n        // Resonance ".concat(n," - Resonant Object Exploration System\n        {\n            // Read control inputs\n            bool trigger = ").concat(o," > 0.5;\n\n            // Mode handling: 0=discovery, 1=performance, 2=exploration\n            int currentMode = resonance").concat(n,"_mode;\n\n            // Update mode from control input if connected\n            if (resonance").concat(n,"_mode_select > 0.0) {\n                currentMode = (int)(resonance").concat(n,"_mode_select * 2.0); // 0.0-0.5=discovery, 0.5-1.0=performance\n                resonance").concat(n,"_mode = currentMode;\n            }\n\n            // Update sensitivity and intensity from control inputs\n            if (resonance").concat(n,"_sensitivity > 0.0) {\n                resonance").concat(n,"_gyroSensitivity = resonance").concat(n,"_sensitivity;\n            }\n            if (resonance").concat(n,"_intensity > 0.0) {\n                resonance").concat(n,"_hapticIntensity = resonance").concat(n,"_intensity;\n            }\n\n            switch (currentMode) {\n                case 0: // DISCOVERY MODE: Frequency sweep analysis\n                {\n                    if (trigger && !resonance").concat(n,"_analyzing) {\n                        // Start frequency sweep analysis\n                        resonance").concat(n,"_analyzing = true;\n                        resonance").concat(n,"_sweepStartTime = millis();\n                        resonance").concat(n,"_currentSweepFreq = resonance").concat(n,"_sweepStart;\n                        resonance").concat(n,"_sweepPhase = 0.0;\n                        resonance").concat(n,"_analysis_complete = 0.0;\n\n                        // Allocate FFT buffers in PSRAM if not already allocated\n                        if (resonance").concat(n,"_fft_input == nullptr) {\n                            resonance").concat(n,"_fft_input = (float*)ps_malloc(resonance").concat(n,"_fftSize * sizeof(float));\n                            resonance").concat(n,"_fft_output = (float*)ps_malloc(resonance").concat(n,"_fftSize * sizeof(float));\n                            resonance").concat(n,"_window = (float*)ps_malloc(resonance").concat(n,"_fftSize * sizeof(float));\n\n                            // Initialize Hann window\n                            for (int i = 0; i < resonance").concat(n,"_fftSize; i++) {\n                                resonance").concat(n,"_window[i] = 0.5 * (1.0 - cos(2.0 * PI * i / (resonance").concat(n,"_fftSize - 1)));\n                            }\n                        }\n                    }\n\n                    if (resonance").concat(n,"_analyzing) {\n                        unsigned long elapsed = millis() - resonance").concat(n,"_sweepStartTime;\n                        float sweepProgress = (float)elapsed / resonance").concat(n,"_sweepDuration;\n\n                        if (sweepProgress < 1.0) {\n                            // Generate logarithmic frequency sweep\n                            float logStart = log(resonance").concat(n,"_sweepStart);\n                            float logEnd = log(resonance").concat(n,"_sweepEnd);\n                            resonance").concat(n,"_currentSweepFreq = exp(logStart + sweepProgress * (logEnd - logStart));\n\n                            // Generate sweep tone through exciter\n                            resonance").concat(n,"_sweepPhase += 2.0 * PI * resonance").concat(n,"_currentSweepFreq / SAMPLE_RATE;\n                            if (resonance").concat(n,"_sweepPhase >= 2.0 * PI) resonance").concat(n,"_sweepPhase -= 2.0 * PI;\n\n                            resonance").concat(n,"_exciterOutput = sin(resonance").concat(n,"_sweepPhase) * 0.3; // 30% amplitude\n\n                            // Collect contact mic input for FFT analysis\n                            // NOTE: Actual FFT runs on Core 0 task to avoid blocking audio\n                            // This is a placeholder - full implementation requires FreeRTOS task\n\n                        } else {\n                            // Sweep complete - trigger FFT analysis\n                            resonance").concat(n,"_analyzing = false;\n                            resonance").concat(n,"_analysis_complete = 1.0;\n                            resonance").concat(n,"_exciterOutput = 0.0;\n\n                            // TODO: Launch Core 0 FFT task here\n                            // For now, output placeholder frequencies\n                            resonance").concat(n,"_freq1 = 100.0;\n                            resonance").concat(n,"_freq2 = 200.0;\n                            resonance").concat(n,"_freq3 = 400.0;\n                            resonance").concat(n,"_freq4 = 800.0;\n                            resonance").concat(n,"_freq5 = 1600.0;\n                            resonance").concat(n,"_freq6 = 3200.0;\n                            resonance").concat(n,"_freq7 = 6400.0;\n                            resonance").concat(n,"_freq8 = 12800.0;\n                            resonance").concat(n,"_resonance_strength = 0.8;\n                        }\n                    } else {\n                        resonance").concat(n,"_exciterOutput = 0.0;\n                    }\n                    break;\n                }\n\n                case 1: // PERFORMANCE MODE: Output stored resonant frequencies\n                {\n                    // Read from object library slot\n                    int objectSlot = (int)(resonance").concat(n,"_object_select * 39.0); // 0-1 maps to 0-39\n                    if (objectSlot != resonance").concat(n,"_objectSlot) {\n                        resonance").concat(n,"_objectSlot = objectSlot;\n                        // TODO: Load resonant frequencies from SPIFFS/SD\n                        // String path = resonance").concat(n,'_objectLibraryPath + String(objectSlot) + ".json";\n                    }\n\n                    // Output resonant frequencies as CV (already set during discovery)\n                    // Frequencies remain stable for performance use\n\n                    // Optionally play through exciter when triggered\n                    if (trigger) {\n                        // Simple resonant tone using detected fundamental\n                        static float perfPhase = 0.0;\n                        perfPhase += 2.0 * PI * resonance').concat(n,"_freq1 / SAMPLE_RATE;\n                        if (perfPhase >= 2.0 * PI) perfPhase -= 2.0 * PI;\n                        resonance").concat(n,"_exciterOutput = sin(perfPhase) * 0.2;\n                    } else {\n                        resonance").concat(n,"_exciterOutput = 0.0;\n                    }\n                    break;\n                }\n\n                case 2: // EXPLORATION MODE: Impulse response with gyroscope sensing\n                {\n                    if (trigger && !resonance").concat(n,"_analyzing) {\n                        // Send impulse through exciter\n                        resonance").concat(n,"_analyzing = true;\n                        resonance").concat(n,"_sweepStartTime = millis();\n                        resonance").concat(n,"_analysis_complete = 0.0;\n                    }\n\n                    if (resonance").concat(n,"_analyzing) {\n                        unsigned long elapsed = millis() - resonance").concat(n,"_sweepStartTime;\n\n                        if (elapsed < resonance").concat(n,"_impulseLength) {\n                            // Generate brief impulse (first 10% is the actual impulse)\n                            if (elapsed < resonance").concat(n,"_impulseLength * 0.1) {\n                                resonance").concat(n,"_exciterOutput = 1.0; // Full amplitude impulse\n                            } else {\n                                resonance").concat(n,"_exciterOutput = 0.0; // Listen to decay\n                            }\n\n                            // Record contact mic response (decay analysis)\n                            // TODO: Measure decay time for Q factor calculation\n\n                        } else {\n                            // Impulse analysis complete\n                            resonance").concat(n,"_analyzing = false;\n                            resonance").concat(n,"_analysis_complete = 1.0;\n                            resonance").concat(n,"_exciterOutput = 0.0;\n\n                            // TODO: Analyze decay for resonance strength\n                            resonance").concat(n,"_resonance_strength = 0.6; // Placeholder\n                        }\n                    } else {\n                        resonance").concat(n,"_exciterOutput = 0.0;\n                    }\n\n                    // TODO: Read gyroscope for vibration sensing\n                    // Wire.requestFrom(GYRO_I2C_ADDR, 6); // Read 6 bytes (XYZ accelerometer)\n\n                    // TODO: Control haptic motors if enabled\n                    if (resonance").concat(n,"_hapticEnable && trigger) {\n                        // Wire.beginTransmission(HAPTIC_I2C_ADDR);\n                        // Wire.write((uint8_t)(resonance").concat(n,"_hapticIntensity * 255));\n                        // Wire.endTransmission();\n                    }\n                    break;\n                }\n            }\n\n            // Read contact mic input (placeholder - actual ADC read goes here)\n            // resonance").concat(n,"_contactMicInput = analogRead(CONTACT_MIC_PIN) / 4095.0;\n        }\n")}}])&&ae(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function ie(e){return ie="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ie(e)}function ce(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,le(a.key),a)}}function le(e){var n=function(e){if("object"!=ie(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ie(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ie(n)?n:n+""}var se=function(){return e=function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.connectionResolver=n},(n=[{key:"generateIncludes",value:function(e){var n=[];return"Sample Player"===e&&(n.push("#include <SD.h>"),n.push("#include <FS.h>"),n.push("#include <freertos/FreeRTOS.h>"),n.push("#include <freertos/task.h>"),n.push("#include <freertos/semphr.h>")),n}},{key:"generateModuleClasses",value:function(){return'\n// WAV File Header Structure\nstruct WAVHeader {\n    char riff[4];           // "RIFF"\n    uint32_t fileSize;      // File size minus 8 bytes\n    char wave[4];           // "WAVE"\n    char fmt[4];            // "fmt "\n    uint32_t fmtSize;       // Format chunk size\n    uint16_t audioFormat;   // Audio format (1 = PCM)\n    uint16_t numChannels;   // Number of channels\n    uint32_t sampleRate;    // Sample rate\n    uint32_t byteRate;      // Byte rate\n    uint16_t blockAlign;    // Block alignment\n    uint16_t bitsPerSample; // Bits per sample\n    char data[4];           // "data"\n    uint32_t dataSize;      // Data size\n};\n\n#define CHUNK_SIZE 4096  // Buffer size in bytes (1024 samples * 2 channels * 2 bytes)\n#define CHUNK_SAMPLES (CHUNK_SIZE / 4) // 1024 samples for stereo 16-bit\n\nclass MinimalWAVPlayer {\nprivate:\n    File wavFile;\n    WAVHeader header;\n    \n    // Double buffering for seamless playback\n    int16_t* bufferA;\n    int16_t* bufferB;\n    int16_t* playingBuffer;       // Currently being played\n    int16_t* loadingBuffer;       // Being loaded in background\n    \n    uint32_t totalDataBytes;      // Total bytes in WAV data section\n    uint32_t filePosition;        // Current position in file (bytes from start of data)\n    uint32_t playingSamples;      // Samples in currently playing buffer\n    uint32_t playPosition;        // Current play position within playing buffer (legacy)\n    float fractionalPosition;     // Fractional position for pitch control\n    \n    bool isPlaying;\n    bool fileEnded;\n    uint16_t channels;\n    \n    // Control variables for new functionality\n    float playbackSpeed;          // Playback speed multiplier (0.1 to 4.0)\n    float startPosition;          // Start position (0.0 to 1.0)  \n    float endPosition;            // End position (0.0 to 1.0)\n    \n    // Background loading task\n    TaskHandle_t loaderTaskHandle;\n    SemaphoreHandle_t bufferMutex;\n    volatile bool loadingBufferReady;\n    volatile uint32_t loadingBufferSamples;\n    \npublic:\n    MinimalWAVPlayer() : bufferA(nullptr), bufferB(nullptr), totalDataBytes(0), filePosition(0),\n                         playingSamples(0), playPosition(0), fractionalPosition(0.0f), isPlaying(false),\n                         fileEnded(false), channels(2), playbackSpeed(1.0f), startPosition(0.0f), \n                         endPosition(1.0f), loaderTaskHandle(NULL), loadingBufferReady(false), \n                         loadingBufferSamples(0) {\n        \n        // Allocate double buffers\n        bufferA = (int16_t*)heap_caps_malloc(CHUNK_SIZE, MALLOC_CAP_SPIRAM);\n        bufferB = (int16_t*)heap_caps_malloc(CHUNK_SIZE, MALLOC_CAP_SPIRAM);\n        \n        if (!bufferA || !bufferB) {\n            if (bufferA) free(bufferA);\n            if (bufferB) free(bufferB);\n            bufferA = (int16_t*)malloc(CHUNK_SIZE);\n            bufferB = (int16_t*)malloc(CHUNK_SIZE);\n        }\n        \n        if (bufferA && bufferB) {\n            playingBuffer = bufferA;\n            loadingBuffer = bufferB;\n            bufferMutex = xSemaphoreCreateMutex();\n        }\n    }\n    \n    // Core player methods would be defined here\n    bool loadFile(const String& filename);\n    void play();\n    void stop();\n    bool playing();\n    void setPlaybackSpeed(float speed);\n    void setStartPosition(float pos);\n    void setEndPosition(float pos);\n    int16_t getNextSample();\n    \n    ~MinimalWAVPlayer() {\n        stop();\n        if (bufferA) free(bufferA);\n        if (bufferB) free(bufferB);\n        if (bufferMutex) vSemaphoreDelete(bufferMutex);\n    }\n};\n'}},{key:"generateGlobalVariables",value:function(e,n,t){return"\n// ".concat(t.label," ").concat(n," - Minimal WAV Player (legacy single-voice)\nMinimalWAVPlayer sdPlayer").concat(n,"_player;\nfloat sdPlayer").concat(n,"_gain = ").concat(e.params.gain||3,";\nfloat sdPlayer").concat(n,"_pitch = ").concat(e.params.pitch||1,";\nbool sdPlayer").concat(n,"_loop = ").concat(e.params.loop||!0,";\nbool sdPlayer").concat(n,"_playing = false;\nint sdPlayer").concat(n,"_currentFile = 1;\nint sdPlayer").concat(n,"_sampleCount = 0;  // Dynamic count of available samples\nString sdPlayer").concat(n,'_currentFileName = "";\nfloat sdPlayer').concat(n,"_triggerThreshold = 0.5;\nbool sdPlayer").concat(n,"_lastTrigger = false;\nfloat sdPlayer").concat(n,"_outputL = 0.0;\nfloat sdPlayer").concat(n,"_outputR = 0.0;\nint sdPlayer").concat(n,"_lastLoadedFile = -1;  // Track loaded sample to avoid unnecessary reloads\n\n// File transfer variables (inline implementation - no external library needed)\nbool fileTransferActive").concat(n," = false;\nString transferFilename").concat(n,' = "";\nFile transferFile').concat(n,";\nuint32_t expectedFileSize").concat(n," = 0;\nuint32_t receivedBytes").concat(n," = 0;\n\n// Ring buffer variables for credit-based file transfer\nuint8_t* ringBuffer").concat(n," = NULL;\nvolatile int ringWritePos").concat(n," = 0;\nvolatile int ringReadPos").concat(n," = 0;\nvolatile int ringBufferCount").concat(n," = 0;\nconst int ringBufferSize").concat(n," = 65536; // 64KB ring buffer\nportMUX_TYPE ringBufferMux").concat(n," = portMUX_INITIALIZER_UNLOCKED;\n")}},{key:"generateSetupCode",value:function(e,n,t){return"\n    // Sample Player ".concat(n," setup\n    sdPlayer").concat(n,'_sampleCount = 10; // Default sample count\n    \n    // Count actual samples available on SD card\n    File root = SD.open("/");\n    int count = 0;\n    while (true) {\n        File entry = root.openNextFile();\n        if (!entry) break;\n        if (entry.name()[0] != \'.\' && !entry.isDirectory()) {\n            String name = String(entry.name()).toLowerCase();\n            if (name.endsWith(".wav")) {\n                count++;\n            }\n        }\n        entry.close();\n    }\n    root.close();\n    \n    if (count > 0) {\n        sdPlayer').concat(n,"_sampleCount = count;\n    }\n    \n    // Preload default sample to avoid SD I/O during audio processing\n    String preloadFile").concat(n,' = "/sample0" + String(sdPlayer').concat(n,'_currentFile) + ".wav";\n    if (SD.exists(preloadFile').concat(n,") && sdPlayer").concat(n,"_player.loadFile(preloadFile").concat(n,".c_str())) {\n        sdPlayer").concat(n,"_lastLoadedFile = 1;\n    }\n    \n    // Initialize ring buffer for file transfers\n    ringBuffer").concat(n," = (uint8_t*)heap_caps_malloc(ringBufferSize").concat(n,", MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);\n    if (!ringBuffer").concat(n,") {\n        ringBuffer").concat(n," = (uint8_t*)malloc(ringBufferSize").concat(n,");\n    }\n")}},{key:"generateProcessingCode",value:function(e,n,t){return["SamplePlayer","SDPlayer"].includes(e.type)?"\n        // Sample Player ".concat(n," processing\n        {\n            // Process control inputs\n            ").concat(this.generateControlProcessing(e,n,t),"\n\n            // Audio generation\n            if (sdPlayer").concat(n,"_playing) {\n                int16_t sampleL = sdPlayer").concat(n,"_player.getNextSample();\n                int16_t sampleR = sampleL; // Mono for now\n\n                sdPlayer").concat(n,"_outputL = (float)sampleL / 32767.0f * sdPlayer").concat(n,"_gain;\n                sdPlayer").concat(n,"_outputR = (float)sampleR / 32767.0f * sdPlayer").concat(n,"_gain;\n\n                sdPlayer").concat(n,"_playing = sdPlayer").concat(n,"_player.playing();\n            } else {\n                sdPlayer").concat(n,"_outputL = 0.0f;\n                sdPlayer").concat(n,"_outputR = 0.0f;\n            }\n        }\n"):null}},{key:"generateControlProcessing",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"pitch"===n.to.port}),r=(t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"sample_select"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"start_pos"===n.to.port}),t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"end_pos"===n.to.port}),"\n            // Control signal processing\n            float sdPlayer".concat(n,"_currentPitch = sdPlayer").concat(n,"_pitch;\n            int sdPlayer").concat(n,"_targetFile = sdPlayer").concat(n,"_currentFile;\n            float sdPlayer").concat(n,"_startPos = ").concat(e.params.start_pos||0,";\n            float sdPlayer").concat(n,"_endPos = ").concat(e.params.end_pos||1,";\n            \n            // Track loaded sample to avoid unnecessary reloads (declared globally)\n"));if(a){var i=a.from.id.split(":")[0],c=this.connectionResolver.modules.find(function(e){return e.id===i});if(c){var l,s=(null===(l=i.match(/\d+$/))||void 0===l?void 0:l[0])||"1";r+="\n                // Trigger from ".concat(c.type," ").concat(s,"\n                bool currentTrigger = false;\n                switch (").concat("LEDButton"===c.type?"true":"false",") {\n                    case true: // LEDButton\n                        currentTrigger = btn").concat(s,"_pressed;\n                        break;\n                    default:\n                        currentTrigger = false;\n                        break;\n                }\n                \n                // Edge detection for trigger\n                if (currentTrigger && !sdPlayer").concat(n,"_lastTrigger) {\n                    // Trigger detected - start playback\n                    if (sdPlayer").concat(n,"_lastLoadedFile != -1) {\n                        sdPlayer").concat(n,"_player.play();\n                        sdPlayer").concat(n,"_playing = true;\n                    }\n                }\n                sdPlayer").concat(n,"_lastTrigger = currentTrigger;\n")}}if(o){var u=o.from.id.split(":")[0],p=this.connectionResolver.modules.find(function(e){return e.id===u});if(p){var d,f=(null===(d=u.match(/\d+$/))||void 0===d?void 0:d[0])||"1";r+="\n                // Pitch control from ".concat(p.type," ").concat(f,"\n                float scaleFreq = scale").concat(f,"_output;\n                float scalePitchRatio = scaleFreq / 440.0; // Convert frequency to pitch ratio (440Hz = 1.0x)\n                scalePitchRatio = constrain(scalePitchRatio, 0.25, 4.0); // Limit to reasonable range\n                sdPlayer").concat(n,"_currentPitch = scalePitchRatio;\n                \n                // Final safety constraint\n                sdPlayer").concat(n,"_currentPitch = constrain(sdPlayer").concat(n,"_currentPitch, 0.1, 8.0);\n                \n                sdPlayer").concat(n,"_player.setPlaybackSpeed(sdPlayer").concat(n,"_currentPitch);\n")}}return r}}])&&ce(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function ue(e){return ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ue(e)}function pe(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,de(a.key),a)}}function de(e){var n=function(e){if("object"!=ue(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ue(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ue(n)?n:n+""}var fe=function(){return e=function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.connectionResolver=n},(n=[{key:"getWaveTypeIndex",value:function(e){if("number"==typeof e)return e;if("string"!=typeof e)return 0;switch(e.toLowerCase()){case"sine":default:return 0;case"sawtooth":case"saw":return 1;case"square":return 2;case"triangle":case"tri":return 3}}},{key:"generateIncludes",value:function(e){var n=[];switch(e){case"ADSR":case"Scale":case"LFO":case"HarmonicSequencer":n.push("#include <math.h>"),n.push("#include <string.h>");break;case"MIDIIn":n.push("#include <HardwareSerial.h>")}return n}},{key:"generateGlobalVariables",value:function(e,n,t){switch(e.type){case"ADSR":var a=e.params.loop_mode||"oneshot";return"\n// ".concat(t.label," ").concat(n,"\nfloat adsr").concat(n,"_attack = ").concat((e.params.attack_ms||10)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_decay = ").concat((e.params.decay_ms||120)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_sustain = ").concat(e.params.sustain||.6,"; // Already 0-1 range\nfloat adsr").concat(n,"_release = ").concat((e.params.release_ms||200)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_timescale = ").concat(e.params.timescale||1,"; // Timing scale multiplier\nconst char* adsr").concat(n,'_loop_mode = "').concat(a,'"; // "oneshot", "loop", "pingpong"\nfloat adsr').concat(n,"_level = 0.0;\nint adsr").concat(n,"_stage = 0; // 0=idle, 1=attack, 2=decay, 3=sustain, 4=release\nbool adsr").concat(n,"_gate = false;\nbool adsr").concat(n,"_lastGate = false;\nvolatile float adsr").concat(n,"_output = 0.0;\nvolatile float adsr").concat(n,"_prevOutput = 0.0; // Previous buffer's output for interpolation\nvolatile float adsr").concat(n,"_targetOutput = 0.0; // Target output from envelope processing\nfloat adsr").concat(n,"_stageTime = 0.0; // Time within current stage\nfloat adsr").concat(n,"_releaseStartLevel = 0.0; // Level when release stage started\nfloat adsr").concat(n,"_attackStartLevel = 0.0; // Level when attack stage started\n// Curve types: ").concat(e.params.attack_curve||"linear",", ").concat(e.params.decay_curve||"exp",", ").concat(e.params.release_curve||"exp","\n");case"Scale":return"\n// ".concat(t.label," ").concat(n,"\nfloat scale").concat(n,"_input = 0.0;\nvolatile float scale").concat(n,"_output = ").concat(12*e.params.base_octave+60||60,"; // Middle C as default\n");case"LFO":return"\n// ".concat(t.label," ").concat(n,"\nfloat lfo").concat(n,"_freq = ").concat(e.params.freq||1,";\nfloat lfo").concat(n,"_phase = 0.0;\nvolatile float lfo").concat(n,"_output = 0.0;\nint lfo").concat(n,"_waveform = ").concat(this.getWaveTypeIndex(e.params.waveform),"; // 0=sine, 1=triangle, 2=saw, 3=square\nfloat lfo").concat(n,"_amplitude = ").concat(e.params.amplitude||1,";\nfloat lfo").concat(n,"_offset = ").concat(e.params.offset||0,";\n\n// Additional variables for legacy compatibility\nbool lfo").concat(n,"_sync_to_clock = ").concat(e.params.sync_to_clock||!1,";\nunsigned long lfo").concat(n,"_last_update = 0;\nfloat lfo").concat(n,"_rate_hz = ").concat(e.params.rate_hz||e.params.freq||1,";\nint lfo").concat(n,"_wave = ").concat(this.getWaveTypeIndex(e.params.wave||e.params.waveform),";\nfloat lfo").concat(n,"_depth = ").concat(e.params.depth||e.params.amplitude||1,";\n");case"Automation":for(var o=e.params.buffer_size||1e3,r=e.params.num_inputs||1,i="",c="",l="",s="",u="",p=1;p<=r;p++)i+="float automation".concat(n,"_input_").concat(p," = 0.0;\n"),c+="volatile float automation".concat(n,"_output_").concat(p," = 0.0;\n"),l+="float* automation".concat(n,"_buffer_").concat(p," = nullptr; // PSRAM buffer for channel ").concat(p,"\n"),s+="float automation".concat(n,"_last_input_").concat(p," = 0.0; // For touch detection\n"),u+="int automation".concat(n,"_channel_").concat(p,"_length = 0; // Channel ").concat(p," loop length\n"),u+="int automation".concat(n,"_channel_").concat(p,"_position = 0; // Channel ").concat(p," playback position\n"),u+="bool automation".concat(n,"_channel_").concat(p,"_recording = false; // Channel ").concat(p," recording\n"),u+="bool automation".concat(n,"_channel_").concat(p,"_playing = false; // Channel ").concat(p," playing\n"),u+="unsigned long automation".concat(n,"_channel_").concat(p,"_start_time = 0; // Channel ").concat(p," playback start\n");return"\n// ".concat(t.label," ").concat(n," - Independent Per-Channel Automation (").concat(r," channels)\nconst int automation").concat(n,"_buffer_size = ").concat(o,";\nconst int automation").concat(n,"_num_inputs = ").concat(r,";\nconst float automation").concat(n,"_movement_threshold = 0.005; // 0.5% movement = channel is being moved\nconst float automation").concat(n,"_touch_threshold = 0.01; // 1% change triggers touch override (smooth takeover)\nconst unsigned long automation").concat(n,"_touch_grace_ms = 50; // 50ms grace period (minimal for responsiveness)\n").concat(l).concat(u,"\n// Global recording trigger (button)\nbool automation").concat(n,"_record_trigger = false;\nbool automation").concat(n,"_last_record_trigger = false;\nbool automation").concat(n,"_loop = ").concat(e.params.loop||!0,";\n\n// Clock sync and playback modes\nbool automation").concat(n,"_clock_sync = ").concat(e.params.clock_sync||!1,"; // Sync to Clock module\nint automation").concat(n,"_clock_quantize = ").concat(e.params.clock_quantize||4,"; // Quantize to N beats (1, 2, 4, 8, 16)\nfloat automation").concat(n,"_clock_input = 0.0; // Clock signal input\nbool automation").concat(n,"_last_clock = false;\nint automation").concat(n,"_playback_mode = 0; // 0=normal, 1=reverse, 2=double, 3=half, 4=pingpong\nbool automation").concat(n,"_mode_select = false; // Encoder button held for mode selection\nint automation").concat(n,"_selected_mode = 0; // Mode being previewed during selection\n\n").concat(i).concat(c).concat(s,"\n");case"GateGen":return"\n// ".concat(t.label," ").concat(n," - Gate Generator with S&H and gate input control\nfloat gate").concat(n,"_length = ").concat(e.params.gate_length||.8,"; // Gate length as fraction of clock period\nbool gate").concat(n,"_use_self_clock = ").concat(e.params.use_self_clock||!0,";\nfloat gate").concat(n,"_self_clock_bpm = ").concat(e.params.self_clock_bpm||120,";\nfloat gate").concat(n,"_probability = ").concat(e.params.probability||1,"; // Probability 0-1\nbool gate").concat(n,"_retrigger = ").concat(e.params.retrigger||!0,";\nbool gate").concat(n,"_sh_enabled = ").concat(e.params.sh_enabled||!0,"; // Sample & Hold enabled\nbool gate").concat(n,"_state = false;\nbool gate").concat(n,"_last_clock = false;\nunsigned long gate").concat(n,"_start_time = 0;\nunsigned long gate").concat(n,"_last_self_clock = 0;\nfloat gate").concat(n,"_output = 0.0;\nfloat gate").concat(n,"_sh_input = 0.0; // Sample & Hold input\nfloat gate").concat(n,"_sh_output = 0.0; // Sample & Hold output (held value)\nfloat gate").concat(n,"_gate_input = 0.0; // Gate input control\nbool gate").concat(n,"_gate_enabled = true; // Gate control state\nfloat gate").concat(n,"_rate = 0.0; // Rate output in Hz for tempo sync\nbool gate").concat(n,"_running = false; // Start/stop control (encoder button)\n");case"MIDIIn":return"\n// ".concat(t.label," ").concat(n," - UART MIDI Input\nHardwareSerial midi").concat(n,"Serial(").concat(e.params.rxPin>=16?2:1,"); // Serial2 for GPIO16+, Serial1 for lower pins\n// MIDI parsing state\nbyte midi").concat(n,"_status = 0;\nbyte midi").concat(n,"_data1 = 0;\nbyte midi").concat(n,"_data2 = 0;\nint midi").concat(n,"_dataIndex = 0;\nbool midi").concat(n,"_running_status = false;\n\n// Configuration\nint midi").concat(n,"_channel = ").concat(e.params.channel||1,"; // MIDI channel (1-16)\nbool midi").concat(n,"_omni = ").concat(e.params.omni||!0,"; // Omni mode\nint midi").concat(n,"_rxPin = ").concat(e.params.rxPin||18,";\nint midi").concat(n,"_txPin = ").concat(e.params.txPin||-1,"; // -1 = RX only\n\n// Control Change mappings\nint midi").concat(n,"_cc1 = ").concat(e.params.cc1||1,"; // Modulation wheel\nint midi").concat(n,"_cc2 = ").concat(e.params.cc2||74,"; // Filter cutoff\nint midi").concat(n,"_cc3 = ").concat(e.params.cc3||71,"; // Filter resonance\nint midi").concat(n,"_cc4 = ").concat(e.params.cc4||10,"; // Pan\n\n// Feature enables\nbool midi").concat(n,"_use_gate = ").concat(e.params.use_gate||!0,";\nbool midi").concat(n,"_use_vel = ").concat(e.params.use_vel||!1,";\nbool midi").concat(n,"_use_clock = ").concat(e.params.use_clock||!0,";\nbool midi").concat(n,"_use_prog = ").concat(e.params.use_prog||!0,";\n\n// Output values\nfloat midi").concat(n,"_note = 60.0; // Current MIDI note number\nfloat midi").concat(n,"_freq = 261.63; // Current frequency (C4)\nfloat midi").concat(n,"_gate = 0.0; // Gate output (0 or 1)\nfloat midi").concat(n,"_velocity = 0.8; // Velocity (0-1)\nfloat midi").concat(n,"_cc1_value = 0.0; // CC1 value (0-1)\nfloat midi").concat(n,"_cc2_value = 0.0; // CC2 value (0-1)\nfloat midi").concat(n,"_cc3_value = 0.0; // CC3 value (0-1)\nfloat midi").concat(n,"_cc4_value = 0.0; // CC4 value (0-1)\nbool midi").concat(n,"_clock_tick = false; // Clock tick output\nint midi").concat(n,"_program = 0; // Program change value (0-127)\n\n// Note tracking for monophonic mode\nint midi").concat(n,"_last_note = -1;\nbool midi").concat(n,"_note_on = false;\n");case"Clock":return"\n// ".concat(t.label," ").concat(n,"\nfloat clock").concat(n,"_bpm = ").concat(e.params.bpm||120,";\nunsigned long clock").concat(n,"_lastTick = 0;\nbool clock").concat(n,"_output = false;\nunsigned long clock").concat(n,"_interval = 0;\nint clock").concat(n,"_division = ").concat(e.params.division||1,"; // Clock division factor\n");case"Modulation":return"\n// ".concat(t.label," ").concat(n," - 4×LFO Modulation Matrix\nfloat mod").concat(n,"_lfo1_rate = ").concat(e.params.lfo1_rate||1,";\nfloat mod").concat(n,"_lfo2_rate = ").concat(e.params.lfo2_rate||2,";\nfloat mod").concat(n,"_lfo3_rate = ").concat(e.params.lfo3_rate||.5,";\nfloat mod").concat(n,"_lfo4_rate = ").concat(e.params.lfo4_rate||4,";\nfloat mod").concat(n,"_phase1 = 0.0, mod").concat(n,"_phase2 = 0.0;\nfloat mod").concat(n,"_phase3 = 0.0, mod").concat(n,"_phase4 = 0.0;\nfloat mod").concat(n,"_output1 = 0.0, mod").concat(n,"_output2 = 0.0;\nfloat mod").concat(n,"_output3 = 0.0, mod").concat(n,"_output4 = 0.0;\nint mod").concat(n,"_wave1 = ").concat(e.params.wave1||0,"; // 0=sine, 1=tri, 2=saw, 3=square\nint mod").concat(n,"_wave2 = ").concat(e.params.wave2||1,";\nint mod").concat(n,"_wave3 = ").concat(e.params.wave3||2,";\nint mod").concat(n,"_wave4 = ").concat(e.params.wave4||3,";\n");case"Invert":return"\n// ".concat(t.label," ").concat(n," - Control Signal Inverter\nfloat invert").concat(n,"_input = 0.0;\nfloat invert").concat(n,"_output = 0.0;\nfloat invert").concat(n,"_gain = ").concat(e.params.gain||1,";\nfloat invert").concat(n,"_offset = ").concat(e.params.offset||0,";\n");case"HarmonicSequencer":var d=this.generateStepArray(e,4,1,"pitch",function(e){return(.1*e).toFixed(2)}),f=this.generateStepArray(e,4,1,"duration",function(){return"1.0"}),m=this.generateStepArray(e,4,1,"muted",function(){return"false"}),_=this.generateStepArray(e,4,1,"active",function(e){return"true"}),g=this.generateStepArray(e,4,1,"pitchRandomness",function(){return"0.0"}),h=this.generateStepArray(e,4,1,"probability",function(){return"1.0"}),v=this.generateStepArray(e,4,1,"glissando_time",function(){return"0.0"}),b=this.generateStepArray(e,4,1,"glissando_probability",function(){return"0.0"}),y=this.generateStepArray(e,4,1,"glissando_curve",function(){return"0"},function(e){return"exponential"===e?"1":"logarithmic"===e?"2":"0"}),k=this.generateStepArray(e,4,1,"pattern",function(){return"0"},function(e){return"up_down"===e?"1":"chord"===e?"2":"random"===e?"3":"octave"===e?"4":"fifth"===e?"5":"0"}),S=this.generateStepArray(e,4,1,"interval",function(){return"2"}),x=this.generateStepArray(e,4,1,"patternProbability",function(){return"1.0"});return"\n// ".concat(t.label," ").concat(n," - Single-Bank Navigation Sequencer\n// Sequencer state\nbool seq").concat(n,"_running = ").concat(e.params.running||!1,";\nint seq").concat(n,"_current_step = ").concat(e.params.current_step||0,"; // 0-").concat(3," global step\nint seq").concat(n,"_current_bank = 0; // Current bank (0-based) for compatibility\n\n// Single-bank navigation system\nint seq").concat(n,"_view_group = 0; // Current step group being viewed (0-0)\nint seq").concat(n,"_step_groups = 1; // Total step groups available\nint seq").concat(n,"_navigation_trigger_btn = -1; // Which button triggered navigation (-1 = none)\nint seq").concat(n,"_sequence_length = ").concat(e.params.sequence_length||4,";\nint seq").concat(n,"_loop_start = ").concat(e.params.loop_start||0,";\nint seq").concat(n,"_loop_end = ").concat(e.params.loop_end||3,";\nbool seq").concat(n,"_loop_active = ").concat(e.params.loop_active||!1,";\n\n// Timing\nfloat seq").concat(n,"_bpm = ").concat(e.params.bpm||120,";\nint seq").concat(n,"_clock_div = ").concat(e.params.clock_div||4,";\nfloat seq").concat(n,"_swing = ").concat(e.params.swing||0,";\nfloat seq").concat(n,"_gate_length = ").concat(e.params.gate_length||.7,";\nunsigned long seq").concat(n,"_last_clock = 0;\nunsigned long seq").concat(n,"_step_start_time = 0;\nbool seq").concat(n,"_last_clock_state = false;\nbool seq").concat(n,"_gate_active = false;\n\n// Step data arrays (").concat(1," banks × 4 steps each = ").concat(4," total steps)\nfloat seq").concat(n,"_pitch[").concat(4,"] = {").concat(d,"};\nfloat seq").concat(n,"_duration[").concat(4,"] = {").concat(f,"};\nbool seq").concat(n,"_muted[").concat(4,"] = {").concat(m,"};\nbool seq").concat(n,"_active[").concat(4,"] = {").concat(_,"};\nfloat seq").concat(n,"_pitch_randomness[").concat(4,"] = {").concat(g,"};\nfloat seq").concat(n,"_probability[").concat(4,"] = {").concat(h,"};\nfloat seq").concat(n,"_glissando_time[").concat(4,"] = {").concat(v,"};\nfloat seq").concat(n,"_glissando_probability[").concat(4,"] = {").concat(b,"};\nint seq").concat(n,"_glissando_curve[").concat(4,"] = {").concat(y,"}; // 0=linear, 1=exponential, 2=logarithmic\nint seq").concat(n,"_pattern[").concat(4,"] = {").concat(k,"}; // 0=static, 1=up_down, 2=chord, 3=random, 4=octave, 5=fifth\nint seq").concat(n,"_interval[").concat(4,"] = {").concat(S,"}; // Semitone interval amount (1-12)\nfloat seq").concat(n,"_pattern_probability[").concat(4,"] = {").concat(x,"}; // Pattern trigger probability (0.0-1.0)\nint seq").concat(n,"_pattern_counter[").concat(4,"] = {0, 0, 0, 0}; // Pattern alternation counter per step\n\n// Hardware button states\nbool seq").concat(n,"_btn_pressed[4] = {false, false, false, false};\nbool seq").concat(n,"_btn_last[4] = {false, false, false, false};\nunsigned long seq").concat(n,"_btn_press_time[4] = {0, 0, 0, 0}; // Track button press duration\nbool seq").concat(n,"_btn_long_hold_handled[4] = {false, false, false, false}; // Prevent multiple long hold actions\nbool seq").concat(n,"_btn_used_for_shift[4] = {false, false, false, false}; // Track if button was used for shift mode\n\n// Encoder button states for sequence clear\nbool seq").concat(n,"_enc_btn_last = false;\nunsigned long seq").concat(n,"_enc_btn_press_time = 0;\nbool seq").concat(n,"_enc_long_hold_handled = false;\n\n// Playback behavior control\nint seq").concat(n,"_playback_mode = 0; // 0=iteration, 1=rest, 2=reverse\nbool seq").concat(n,"_reverse_direction = false; // For reverse mode\n\n// Soft takeover system for duration control (when in shift mode)\nfloat seq").concat(n,"_last_pot_values[4] = {0.0, 0.0, 0.0, 0.0}; // Last pot positions\nbool seq").concat(n,"_pot_taken_over[4] = {true, true, true, true}; // Has pot taken over pitch control\n\n// Pot smoothing to reduce noise-induced pitch wavering\nfloat seq").concat(n,"_smoothed_pot[4] = {0.0, 0.0, 0.0, 0.0}; // Smoothed pot values\n\n// Cascading harmonic linking system\nbool seq").concat(n,"_harmonic_linking = ").concat(e.params.harmonic_linking?"true":"false",";\nint seq").concat(n,"_harmonic_follow_steps[").concat(4,"] = {").concat(e.params.harmonic_follow_steps?e.params.harmonic_follow_steps.join(", "):"-1, -1, -1, -1","}; // Which step each step follows (-1 = none)\nfloat seq").concat(n,"_harmonic_intervals[").concat(4,"] = {").concat(e.params.harmonic_intervals?e.params.harmonic_intervals.map(function(e){return e/12}).join(", "):"0.583, 0.583, 0.583, 0.583","}; // Convert semitones to CV (7/12 = perfect fifth)\nfloat seq").concat(n,"_base_pitch[").concat(4,"] = {").concat(f.split(", ").map(function(e,n){return"0.0"}).join(", "),"}; // Base pitch before harmonic adjustments\nfloat seq").concat(n,"_last_base_pitch[").concat(4,"] = {").concat(f.split(", ").map(function(e,n){return"0.0"}).join(", "),"}; // Track base pitch changes for cascading updates\nconst float seq").concat(n,"_pot_smooth_factor = 0.8; // Smoothing factor (0.0=no smooth, 1.0=max smooth)\n\n// Musical Scale System (always active)\nconst char* seq").concat(n,'_quantization_scale = "').concat(e.params.quantization_scale||"major",'";\nconst char* seq').concat(n,'_quantization_root = "').concat(e.params.quantization_root||"C",'";\nconst char* seq').concat(n,'_quantization_tuning = "').concat(e.params.quantization_tuning||"12tet",'";\n\n// Outputs\nvolatile float seq').concat(n,"_pitch_sum = 0.0;\nvolatile float seq").concat(n,"_pitch_hz = 440.0;  // Direct frequency output in Hz\nvolatile float seq").concat(n,"_gate_sum = 0.0;\nvolatile float seq").concat(n,"_current_step_cv = 0.0;\nvolatile float seq").concat(n,"_current_bank_cv = 0.0;\nvolatile float seq").concat(n,"_sampled_pitch = 0.0; // Sample-and-hold for pitch randomness\n\n// Random pitch offsets - calculated once per sequence pass, not per step\nfloat seq").concat(n,"_pitch_random_offset[").concat(4,"] = {").concat(f.split(", ").map(function(e,n){return"0.0"}).join(", "),"}; // Random offset per step\nint seq").concat(n,"_last_step = -1; // Track last step to detect sequence loop\n\n// Chord/arpeggio intervals (semitone offsets from root)\n").concat(e.params.steps.map(function(e,t){var a=e.chordIntervals||[0];return"const float seq".concat(n,"_chord_intervals_step").concat(t+1,"[] = {").concat(a.map(function(e){return"".concat(e,".0")}).join(", "),"}; // Step ").concat(t+1," chord intervals\nconst int seq").concat(n,"_chord_intervals_step").concat(t+1,"_count = ").concat(a.length,";")}).join("\n"),"\n// Diatonic mode flags (true = scale-aware transposition)\n").concat(e.params.steps.map(function(e,t){return"const bool seq".concat(n,"_chord_diatonic_step").concat(t+1," = ").concat(!1!==e.chordDiatonic?"true":"false",";")}).join("\n"),"\n// Chord position counters (which interval in the chord is currently playing)\nint seq").concat(n,"_chord_position[").concat(4,"] = {").concat(e.params.steps.map(function(){return"0"}).join(", "),"}; // Current chord tone index per step\n\n// Individual step outputs (4 steps)\nvolatile float seq").concat(n,"_pitch_step1 = 0.0, seq").concat(n,"_pitch_step2 = 0.0, seq").concat(n,"_pitch_step3 = 0.0, seq").concat(n,"_pitch_step4 = 0.0;\nvolatile float seq").concat(n,"_pitch_step1_hz = 440.0, seq").concat(n,"_pitch_step2_hz = 440.0, seq").concat(n,"_pitch_step3_hz = 440.0, seq").concat(n,"_pitch_step4_hz = 440.0;\nvolatile float seq").concat(n,"_gate_step1 = 0.0, seq").concat(n,"_gate_step2 = 0.0, seq").concat(n,"_gate_step3 = 0.0, seq").concat(n,"_gate_step4 = 0.0;\n\n// Glissando state variables\nfloat seq").concat(n,"_glissando_start_pitch = 0.0; // Starting pitch for glissando\nfloat seq").concat(n,"_glissando_target_pitch = 0.0; // Target pitch for glissando\nunsigned long seq").concat(n,"_glissando_start_time = 0; // When glissando started\nbool seq").concat(n,"_glissando_active = false; // Whether glissando is currently active\nvolatile float seq").concat(n,"_glissando_current_hz = 440.0; // Current interpolated frequency\n\n// Pattern variables (melodic patterns)\nbool seq").concat(n,"_pattern_enabled = ").concat(e.params.pattern_enabled?"true":"false",";\nunsigned long seq").concat(n,"_pattern_start_time = 0; // When current step pattern started\nfloat seq").concat(n,"_pattern_phase = 0.0; // Pattern phase (0.0-1.0)\n\n// Pattern calculation function - works around pot position with intervals and probability\nfloat calculatePatternModulation").concat(n,"(int stepIndex, unsigned long currentTime, unsigned long stepStartTime, float stepDuration, float potPosition) {\n    if (!seq").concat(n,"_pattern_enabled) return 0.0;\n\n    int patternType = seq").concat(n,"_pattern[stepIndex];\n    if (patternType == 0) return 0.0; // Static pattern\n\n    // Check probability - use deterministic check based on pattern counter to avoid tremolo\n    float probability = seq").concat(n,"_pattern_probability[stepIndex];\n    // Use pattern counter to create deterministic but varied probability\n    float deterministicCheck = (float)(seq").concat(n,"_pattern_counter[stepIndex] % 100) / 100.0;\n    if (deterministicCheck > probability) return 0.0;\n\n    // Get interval amount in semitones\n    int intervalSemitones = seq").concat(n,"_interval[stepIndex];\n    float intervalCV = (float)intervalSemitones / 12.0; // Convert semitones to CV (1V/oct)\n\n    // Calculate pattern phase (0.0-1.0) based on time within step\n    float stepTimeMs = stepDuration * 1000.0;\n    float elapsedTime = (float)(currentTime - stepStartTime);\n    float phase = elapsedTime / stepTimeMs;\n    phase = constrain(phase, 0.0, 1.0);\n\n    float modulation = 0.0;\n    switch (patternType) {\n        case 1: // Up/Down Alternating - alternate between +interval and -interval\n            modulation = (seq").concat(n,"_pattern_counter[stepIndex] % 2 == 0) ? intervalCV : -intervalCV;\n            break;\n\n        case 2: // Chord/Arpeggio - cycle through custom chord intervals per pass\n            {\n                // Get the correct chord interval array and count for this step\n                const float* chordIntervals;\n                int chordCount;\n                switch (stepIndex) {\n                    case 0: chordIntervals = seq").concat(n,"_chord_intervals_step1; chordCount = seq").concat(n,"_chord_intervals_step1_count; break;\n                    case 1: chordIntervals = seq").concat(n,"_chord_intervals_step2; chordCount = seq").concat(n,"_chord_intervals_step2_count; break;\n                    case 2: chordIntervals = seq").concat(n,"_chord_intervals_step3; chordCount = seq").concat(n,"_chord_intervals_step3_count; break;\n                    case 3: chordIntervals = seq").concat(n,"_chord_intervals_step4; chordCount = seq").concat(n,"_chord_intervals_step4_count; break;\n                    default: chordIntervals = seq").concat(n,"_chord_intervals_step1; chordCount = 1; break;\n                }\n\n                // Cycle through chord tones - one different tone per pass through step\n                int chordTone = seq").concat(n,"_pattern_counter[stepIndex] % chordCount;\n                float intervalSemitones = chordIntervals[chordTone];\n                modulation = intervalSemitones / 12.0; // Convert semitones to CV (1V/oct)\n            }\n            break;\n\n        case 3: // Random Jump - random ±interval amount\n            modulation = (((float)random(0, 1000) / 1000.0) - 0.5) * 2.0 * intervalCV;\n            break;\n\n        case 4: // Octave Jump - alternate between pot position and +octave\n            modulation = (seq").concat(n,"_pattern_counter[stepIndex] % 2 == 0) ? 0.0 : (12.0 / 12.0); // +1 octave\n            break;\n\n        case 5: // Fifth Jump - alternate between pot position and +perfect fifth\n            modulation = (seq").concat(n,"_pattern_counter[stepIndex] % 2 == 0) ? 0.0 : (7.0 / 12.0); // +perfect fifth\n            break;\n    }\n\n    return modulation;\n}\n\n// Cascading harmonic relationship system - allows chained dependencies\nvoid updateHarmonicRelationships").concat(n,"() {\n    if (!seq").concat(n,"_harmonic_linking) return;\n\n    // Check each step to see if its followed step has changed\n    bool needsAnotherPass = true;\n    int passCount = 0;\n    const int maxPasses = 4; // Prevent infinite loops\n\n    while (needsAnotherPass && passCount < maxPasses) {\n        needsAnotherPass = false;\n        passCount++;\n\n        for (int step = 0; step < ").concat(4,"; step++) {\n            int followsStep = seq").concat(n,"_harmonic_follow_steps[step];\n            if (followsStep == -1) continue; // This step doesn't follow anyone\n\n            // Check if the step we're following has changed its base pitch\n            float followedBasePitch = seq").concat(n,"_base_pitch[followsStep];\n            if (abs(followedBasePitch - seq").concat(n,"_last_base_pitch[followsStep]) > 0.001) {\n                // The followed step's base pitch changed, update this step\n                float pitchChange = followedBasePitch - seq").concat(n,"_last_base_pitch[followsStep];\n\n                // Apply additive harmonic interval + cascading change\n                float harmonicInterval = seq").concat(n,"_harmonic_intervals[step];\n                float newPitch = seq").concat(n,"_base_pitch[step] + pitchChange + harmonicInterval;\n\n                // Extended range: allow harmonic relationships to exceed 0-1 pot range\n                // Clamp to reasonable musical range: -2 to +3 (5 octave span)\n                newPitch = constrain(newPitch, -2.0, 3.0);\n\n                // Update this step's pitch if it changed significantly\n                if (abs(newPitch - seq").concat(n,"_pitch[step]) > 0.001) {\n                    seq").concat(n,"_pitch[step] = newPitch;\n                    // Mark that we need another pass to handle cascading\n                    needsAnotherPass = true;\n                }\n            }\n        }\n\n        // Update last base pitch tracking after each pass\n        for (int step = 0; step < ").concat(4,"; step++) {\n            seq").concat(n,"_last_base_pitch[step] = seq").concat(n,"_base_pitch[step];\n        }\n    }\n}\n");default:return""}}},{key:"generateGlissandoFunction",value:function(e,n){return"\n// Glissando interpolation function for Sequencer ".concat(n,"\nfloat glissandoInterpolate").concat(n,'(float startPitch, float targetPitch, float progress, const char* curve) {\n    // Clamp progress to 0-1 range\n    progress = constrain(progress, 0.0, 1.0);\n\n    if (strcmp(curve, "linear") == 0) {\n        // Linear interpolation\n        return startPitch + (targetPitch - startPitch) * progress;\n    } else if (strcmp(curve, "exponential") == 0) {\n        // Exponential curve (fast start, slow end)\n        float expProgress = 1.0 - exp(-3.0 * progress);\n        return startPitch + (targetPitch - startPitch) * expProgress;\n    } else if (strcmp(curve, "logarithmic") == 0) {\n        // Logarithmic curve (slow start, fast end)\n        float logProgress = log(1.0 + progress * (exp(1.0) - 1.0));\n        return startPitch + (targetPitch - startPitch) * logProgress;\n    } else {\n        // Default to linear\n        return startPitch + (targetPitch - startPitch) * progress;\n    }\n}\n')}},{key:"generateQuantizationFunction",value:function(e,n){return"\n// Musical Scale Quantization Function for Sequencer ".concat(n,"\nfloat quantizePitch").concat(n,"(float inputPitch) {\n\n    // Convert 0-1 pitch to MIDI note number (C3=48 to C7=84, 3 octaves)\n    float midiNote = 48.0 + (inputPitch * 36.0);\n\n    // Get root note offset (C=0, C#=1, D=2, etc.)\n    int rootOffset = 0;\n    if (strcmp(seq").concat(n,'_quantization_root, "C#") == 0 || strcmp(seq').concat(n,'_quantization_root, "Db") == 0) rootOffset = 1;\n    else if (strcmp(seq').concat(n,'_quantization_root, "D") == 0) rootOffset = 2;\n    else if (strcmp(seq').concat(n,'_quantization_root, "D#") == 0 || strcmp(seq').concat(n,'_quantization_root, "Eb") == 0) rootOffset = 3;\n    else if (strcmp(seq').concat(n,'_quantization_root, "E") == 0) rootOffset = 4;\n    else if (strcmp(seq').concat(n,'_quantization_root, "F") == 0) rootOffset = 5;\n    else if (strcmp(seq').concat(n,'_quantization_root, "F#") == 0 || strcmp(seq').concat(n,'_quantization_root, "Gb") == 0) rootOffset = 6;\n    else if (strcmp(seq').concat(n,'_quantization_root, "G") == 0) rootOffset = 7;\n    else if (strcmp(seq').concat(n,'_quantization_root, "G#") == 0 || strcmp(seq').concat(n,'_quantization_root, "Ab") == 0) rootOffset = 8;\n    else if (strcmp(seq').concat(n,'_quantization_root, "A") == 0) rootOffset = 9;\n    else if (strcmp(seq').concat(n,'_quantization_root, "A#") == 0 || strcmp(seq').concat(n,'_quantization_root, "Bb") == 0) rootOffset = 10;\n    else if (strcmp(seq').concat(n,'_quantization_root, "B") == 0) rootOffset = 11;\n\n    // Define scale intervals\n    int scaleIntervals[12];\n    int scaleLength = 12;\n\n    if (strcmp(seq').concat(n,'_quantization_scale, "major") == 0) {\n        int intervals[] = {0, 2, 4, 5, 7, 9, 11};\n        scaleLength = 7;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "minor") == 0) {\n        int intervals[] = {0, 2, 3, 5, 7, 8, 10};\n        scaleLength = 7;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "pentatonic_major") == 0) {\n        int intervals[] = {0, 2, 4, 7, 9};\n        scaleLength = 5;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "pentatonic_minor") == 0) {\n        int intervals[] = {0, 3, 5, 7, 10};\n        scaleLength = 5;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "blues") == 0) {\n        int intervals[] = {0, 3, 5, 6, 7, 10};\n        scaleLength = 6;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "dorian") == 0) {\n        int intervals[] = {0, 2, 3, 5, 7, 9, 10};\n        scaleLength = 7;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else if (strcmp(seq').concat(n,'_quantization_scale, "wholetone") == 0) {\n        int intervals[] = {0, 2, 4, 6, 8, 10};\n        scaleLength = 6;\n        for (int i = 0; i < scaleLength; i++) scaleIntervals[i] = intervals[i];\n    } else {\n        // Chromatic or unknown scale - all 12 semitones\n        for (int i = 0; i < 12; i++) scaleIntervals[i] = i;\n        scaleLength = 12;\n    }\n\n    // Get the note within the octave (0-11)\n    int noteInOctave = ((int)midiNote + rootOffset) % 12;\n    int octave = ((int)midiNote + rootOffset) / 12;\n\n    // Find closest scale note\n    int closestInterval = scaleIntervals[0];\n    int minDistance = abs(noteInOctave - closestInterval);\n\n    for (int i = 1; i < scaleLength; i++) {\n        int distance = abs(noteInOctave - scaleIntervals[i]);\n        if (distance < minDistance) {\n            minDistance = distance;\n            closestInterval = scaleIntervals[i];\n        }\n    }\n\n    // Handle wrapping at octave boundaries\n    if (minDistance > 6) {\n        // Check if wrapping to next/previous octave is closer\n        int wrapUpDistance = abs(noteInOctave - (closestInterval + 12));\n        int wrapDownDistance = abs(noteInOctave - (closestInterval - 12));\n\n        if (wrapUpDistance < minDistance) {\n            closestInterval += 12;\n            octave -= 1;\n        } else if (wrapDownDistance < minDistance) {\n            closestInterval -= 12;\n            octave += 1;\n        }\n    }\n\n    // Reconstruct quantized MIDI note\n    float quantizedMidi = (octave * 12) + closestInterval - rootOffset;\n\n    // Convert back to 0-1 range\n    float quantizedPitch = (quantizedMidi - 48.0) / 36.0;\n\n    // Clamp to valid range\n    if (quantizedPitch < 0.0) quantizedPitch = 0.0;\n    if (quantizedPitch > 1.0) quantizedPitch = 1.0;\n\n    return quantizedPitch;\n}\n')}},{key:"generateProcessingCode",value:function(e,n,t){switch(e.type){case"ADSR":return this.generateADSRCode(e,n,t);case"Scale":return this.generateScaleCode(e,n,t);case"LFO":return this.generateLFOCode(e,n,t);case"GateGen":return this.generateGateGenCode(e,n,t);case"MIDIIn":return this.generateMIDIInCode(e,n,t);case"Clock":return this.generateClockCode(e,n,t);case"Modulation":return this.generateModulationCode(e,n,t);case"Invert":return this.generateInvertCode(e,n,t);case"HarmonicSequencer":return this.generateHarmonicSequencerCode(e,n,t);case"Automation":return this.generateAutomationCode(e,n,t);default:return""}}},{key:"generateADSRCode",value:function(e,n,t){return"\n        // ADSR ".concat(n," processing\n        {\n            bool currentGate = (adsr").concat(n,"_gate > 0.5);\n            \n            // Gate edge detection\n            if (currentGate && !adsr").concat(n,"_lastGate) {\n                // Gate on - start attack\n                // Capture current level to avoid click (smooth retriggering)\n                adsr").concat(n,"_attackStartLevel = adsr").concat(n,"_level;\n                adsr").concat(n,"_stage = 1;\n                adsr").concat(n,"_stageTime = 0.0;\n            } else if (!currentGate && adsr").concat(n,"_lastGate) {\n                // Gate off - start release\n                if (adsr").concat(n,"_stage != 0) {\n                    adsr").concat(n,"_releaseStartLevel = adsr").concat(n,"_level; // Capture current level for release\n                    adsr").concat(n,"_stage = 4;\n                    adsr").concat(n,"_stageTime = 0.0;\n                }\n            }\n            \n            adsr").concat(n,"_lastGate = currentGate;\n\n            // Process envelope stages\n            // CRITICAL: This runs once per buffer, so advance time by buffer duration\n            // timescale > 1 = slower (more time per buffer), timescale < 1 = faster (less time per buffer)\n            float bufferTime = (BUFFER_SIZE / 44100.0) / adsr").concat(n,"_timescale; // Buffer duration in seconds (DIVIDE for correct behavior)\n            adsr").concat(n,"_stageTime += bufferTime;\n            \n            switch (adsr").concat(n,"_stage) {\n                case 0: // Idle\n                    adsr").concat(n,"_level = 0.0;\n                    break;\n                    \n                case 1: // Attack\n                    if (adsr").concat(n,"_attack > 0.0) {\n                        float progress = adsr").concat(n,"_stageTime / adsr").concat(n,"_attack;\n                        if (progress >= 1.0) {\n                            adsr").concat(n,"_level = 1.0;\n                            adsr").concat(n,"_stage = 2;\n                            adsr").concat(n,"_stageTime = 0.0;\n                        } else {\n                            // Smooth attack: interpolate from captured start level to 1.0\n                            // This prevents clicks when retriggering during decay/release\n                            adsr").concat(n,"_level = adsr").concat(n,"_attackStartLevel + (1.0 - adsr").concat(n,"_attackStartLevel) * progress;\n                        }\n                    } else {\n                        adsr").concat(n,"_level = 1.0;\n                        adsr").concat(n,"_stage = 2;\n                        adsr").concat(n,"_stageTime = 0.0;\n                    }\n                    break;\n                    \n                case 2: // Decay\n                    if (adsr").concat(n,"_decay > 0.0) {\n                        float progress = adsr").concat(n,"_stageTime / adsr").concat(n,"_decay;\n                        if (progress >= 1.0) {\n                            adsr").concat(n,"_level = adsr").concat(n,"_sustain;\n                            adsr").concat(n,"_stage = 3;\n                        } else {\n                            adsr").concat(n,"_level = 1.0 - progress * (1.0 - adsr").concat(n,"_sustain);\n                        }\n                    } else {\n                        adsr").concat(n,"_level = adsr").concat(n,"_sustain;\n                        adsr").concat(n,"_stage = 3;\n                    }\n                    break;\n                    \n                case 3: // Sustain\n                    adsr").concat(n,"_level = adsr").concat(n,"_sustain;\n                    break;\n                    \n                case 4: // Release\n                    if (adsr").concat(n,"_release > 0.0) {\n                        float progress = adsr").concat(n,"_stageTime / adsr").concat(n,"_release;\n                        if (progress >= 1.0) {\n                            adsr").concat(n,"_level = 0.0;\n\n                            // Looping logic\n                            if (strcmp(adsr").concat(n,'_loop_mode, "loop") == 0) {\n                                // Loop mode: restart attack from 0\n                                adsr').concat(n,"_attackStartLevel = 0.0;\n                                adsr").concat(n,"_stage = 1; // Go to attack\n                                adsr").concat(n,"_stageTime = 0.0;\n                            } else if (strcmp(adsr").concat(n,'_loop_mode, "pingpong") == 0) {\n                                // Pingpong mode: reverse direction (future implementation)\n                                adsr').concat(n,"_attackStartLevel = 0.0;\n                                adsr").concat(n,"_stage = 1; // For now, same as loop\n                                adsr").concat(n,"_stageTime = 0.0;\n                            } else {\n                                // Oneshot mode: go to idle\n                                adsr").concat(n,"_stage = 0;\n                            }\n                        } else {\n                            // Exponential release curve: faster at start, slower toward zero\n                            float releaseAmount = progress * progress; // Quadratic curve for smooth release\n                            adsr").concat(n,"_level = adsr").concat(n,"_releaseStartLevel * (1.0 - releaseAmount);\n\n                            // Ensure envelope reaches exactly zero when very close\n                            if (adsr").concat(n,"_level < 0.001) {\n                                adsr").concat(n,"_level = 0.0;\n\n                                // Looping logic for early termination\n                                if (strcmp(adsr").concat(n,'_loop_mode, "loop") == 0) {\n                                    adsr').concat(n,"_attackStartLevel = 0.0;\n                                    adsr").concat(n,"_stage = 1;\n                                    adsr").concat(n,"_stageTime = 0.0;\n                                } else if (strcmp(adsr").concat(n,'_loop_mode, "pingpong") == 0) {\n                                    adsr').concat(n,"_attackStartLevel = 0.0;\n                                    adsr").concat(n,"_stage = 1;\n                                    adsr").concat(n,"_stageTime = 0.0;\n                                } else {\n                                    adsr").concat(n,"_stage = 0;\n                                }\n                            }\n                        }\n                    } else {\n                        adsr").concat(n,"_level = 0.0;\n\n                        // Looping logic for instant release\n                        if (strcmp(adsr").concat(n,'_loop_mode, "loop") == 0) {\n                            adsr').concat(n,"_attackStartLevel = 0.0;\n                            adsr").concat(n,"_stage = 1;\n                            adsr").concat(n,"_stageTime = 0.0;\n                        } else if (strcmp(adsr").concat(n,'_loop_mode, "pingpong") == 0) {\n                            adsr').concat(n,"_attackStartLevel = 0.0;\n                            adsr").concat(n,"_stage = 1;\n                            adsr").concat(n,"_stageTime = 0.0;\n                        } else {\n                            adsr").concat(n,"_stage = 0;\n                        }\n                    }\n                    break;\n            }\n\n            // Store previous output and set new target for interpolation\n            adsr").concat(n,"_prevOutput = adsr").concat(n,"_output;\n            adsr").concat(n,"_targetOutput = adsr").concat(n,"_level;\n        }\n")}},{key:"generateScaleCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("in"===n.to.port||void 0===n.to.port)}),o="0.0",r="",i=this.connectionResolver.modules.find(function(e){return"HarmonicSequencer"===e.type});if(i){var c,l=(null===(c=i.id.match(/\d+$/))||void 0===c?void 0:c[0])||"1";o="seq".concat(l,"_pitch_sum"),r="seq".concat(l,"_running && seq").concat(l,"_gate_active")}else r="false";if(a){var s=a.from.id.split(":")[0],u=this.connectionResolver.modules.find(function(e){return e.id===s});if(u){var p,d=(null===(p=s.match(/\d+$/))||void 0===p?void 0:p[0])||"1";switch(u.type){case"GateGen":o="gate".concat(d,"_sh_output");break;case"LFO":o="lfo".concat(d,"_output");break;case"Pot":o="pot".concat(d,"_value")}}}return"\n        // Scale ".concat(n," processing\n        {\n            float input = ").concat(o,";\n            scale").concat(n,"_input = input;\n\n            // Only output frequency when HarmonicSequencer is running and has a gate\n            bool hasActiveGate = ").concat(r,";\n\n            static float lastInput = -1.0;\n            static float lastOutput = 0.0;\n            static bool lastGateState = false;\n            static unsigned long lastDebugTime = 0;\n\n            // Debug output every 100ms or when values change significantly\n            unsigned long currentTime = millis();\n            bool shouldDebug = (currentTime - lastDebugTime > 100) ||\n                              (abs(input - lastInput) > 0.01) ||\n                              (hasActiveGate != lastGateState);\n\n            if (hasActiveGate && input > 0.0) {\n                // Convert 0-1 input to MIDI note number using module parameters\n                int baseOctave = ").concat(e.params.base_octave||4,"; // Base octave (C4 = octave 4)\n                int octaveRange = ").concat(e.params.octave_range||2,'; // Octaves to span\n                int baseNote = (baseOctave * 12) + 12; // Convert octave to MIDI note (C0=12, C4=60)\n                int rangeSemitones = octaveRange * 12; // Convert octaves to semitones\n                int midiNote = baseNote + (int)(input * rangeSemitones);\n                float newOutput = 440.0 * pow(2.0, (midiNote - 69) / 12.0); // Convert to frequency\n\n                // Debug output changes\n                if (shouldDebug && (abs(newOutput - lastOutput) > 1.0)) {\n                    Serial.print("Scale').concat(n,': IN=");\n                    Serial.print(input, 3);\n                    Serial.print(" MIDI=");\n                    Serial.print(midiNote);\n                    Serial.print(" FREQ=");\n                    Serial.print(newOutput, 1);\n                    Serial.print(" GATE=");\n                    Serial.println(hasActiveGate ? "ON" : "OFF");\n                    lastDebugTime = currentTime;\n                }\n\n                scale').concat(n,'_output = newOutput;\n                lastOutput = newOutput;\n            } else {\n                // No active gate or zero input - maintain last frequency to avoid clicks\n                if (shouldDebug && hasActiveGate != lastGateState) {\n                    Serial.print("Scale').concat(n,': GATE=");\n                    Serial.print(hasActiveGate ? "ON" : "OFF");\n                    Serial.print(" (holding freq=");\n                    Serial.print(scale').concat(n,'_output, 1);\n                    Serial.println(")");\n                    lastDebugTime = currentTime;\n                }\n                // scale').concat(n,"_output remains at last value\n            }\n\n            lastInput = input;\n            lastGateState = hasActiveGate;\n        }\n")}},{key:"generateLFOCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"rate_hz"===n.to.port}),o="lfo".concat(n,"_rate_hz");if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c,l=(null===(c=r.match(/\d+$/))||void 0===c?void 0:c[0])||"1";switch(i.type){case"Pot":o="(1.0 + pot".concat(l,"_value * 39.0)");break;case"ADSR":o="(1.0 + adsr".concat(l,"_output * 39.0)")}}}return"\n        // LFO ".concat(n," - Low Frequency Oscillator (RESTORED ORIGINAL IMPLEMENTATION)\n        {\n            unsigned long currentTime = millis();\n\n            // Update LFO phase based on rate\n            if (!lfo").concat(n,"_sync_to_clock) {\n                // Free-running mode\n                float deltaTime = (currentTime - lfo").concat(n,"_last_update) / 1000.0; // Convert to seconds\n                lfo").concat(n,"_phase += ").concat(o," * deltaTime * 2.0 * M_PI;\n\n                // Wrap phase to 0-2π\n                while (lfo").concat(n,"_phase >= 2.0 * M_PI) {\n                    lfo").concat(n,"_phase -= 2.0 * M_PI;\n                }\n            } else {\n                // Clock-sync mode - would need clock input connection\n                // For now, just use free-running mode\n            }\n            lfo").concat(n,"_last_update = currentTime;\n\n            // Generate LFO waveform\n            float waveValue = 0.0;\n            switch (lfo").concat(n,"_wave) {\n                case 0: // Sine\n                    waveValue = sin(lfo").concat(n,"_phase);\n                    break;\n                case 1: // Sawtooth\n                    waveValue = 2.0 * (lfo").concat(n,"_phase / (2.0 * M_PI)) - 1.0;\n                    break;\n                case 2: // Square\n                    waveValue = (lfo").concat(n,"_phase < M_PI) ? 1.0 : -1.0;\n                    break;\n                case 3: // Triangle\n                    if (lfo").concat(n,"_phase < M_PI) {\n                        waveValue = -1.0 + 2.0 * (lfo").concat(n,"_phase / M_PI);\n                    } else {\n                        waveValue = 1.0 - 2.0 * ((lfo").concat(n,"_phase - M_PI) / M_PI);\n                    }\n                    break;\n            }\n\n            // Apply depth and offset (convert from -1/+1 to 0-1 range with offset and depth)\n            lfo").concat(n,"_output = lfo").concat(n,"_offset + (waveValue * lfo").concat(n,"_depth * 0.5);\n\n            // Clamp output to 0-1 range for control signals\n            if (lfo").concat(n,"_output < 0.0) lfo").concat(n,"_output = 0.0;\n            if (lfo").concat(n,"_output > 1.0) lfo").concat(n,"_output = 1.0;\n        }\n")}},{key:"generateClockCode",value:function(e,n,t){return"\n        // Clock ".concat(n," processing\n        {\n            // Calculate interval from BPM\n            clock").concat(n,"_interval = (60000 / clock").concat(n,"_bpm) / clock").concat(n,"_division;\n            \n            unsigned long currentTime = millis();\n            if (currentTime - clock").concat(n,"_lastTick >= clock").concat(n,"_interval) {\n                clock").concat(n,"_output = !clock").concat(n,"_output; // Toggle output\n                clock").concat(n,"_lastTick = currentTime;\n            }\n        }\n")}},{key:"generateGateGenCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"self_clock_bpm"===n.to.port}),o=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"probability"===n.to.port}),r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate_input"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"sh_input"===n.to.port}),c="gate".concat(n,"_self_clock_bpm"),l="gate".concat(n,"_probability"),s="true",u="0.5";if(a){var p=a.from.id.split(":")[0],d=this.connectionResolver.modules.find(function(e){return e.id===p});if(d){var f,m=(null===(f=p.match(/\d+$/))||void 0===f?void 0:f[0])||"1";"Pot"===d.type&&(c="(60.0 + pot".concat(m,"_value * 240.0)"))}}if(o){var _=o.from.id.split(":")[0],g=this.connectionResolver.modules.find(function(e){return e.id===_});if(g){var h,v=(null===(h=_.match(/\d+$/))||void 0===h?void 0:h[0])||"1";"Pot"===g.type&&(l="pot".concat(v,"_value"))}}if(r){var b=r.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k=y.params.index;switch(y.type){case"LEDButton":s="btn".concat(k,"_pressed");break;case"ADSR":s="(adsr".concat(k,"_output > 0.5)");break;case"LFO":s="(lfo".concat(k,"_output > 0.5)");break;case"Clock":s="clock".concat(k,"_output")}}}if(i){var S=i.from.id.split(":")[0],x=this.connectionResolver.modules.find(function(e){return e.id===S});if(x){var E,w=(null===(E=S.match(/\d+$/))||void 0===E?void 0:E[0])||"1";switch(x.type){case"LFO":u="lfo".concat(w,"_output");break;case"Pot":u="pot".concat(w,"_value");break;case"ADSR":u="adsr".concat(w,"_output")}}}return"\n        // GateGen ".concat(n," processing\n        {\n            float currentBPM = ").concat(c,";\n            float currentProbability = ").concat(l,";\n            bool gateInputState = ").concat(s,";\n            float shInput = ").concat(u,";\n\n            // Output rate in Hz for tempo sync\n            gate").concat(n,"_rate = currentBPM / 60.0;\n\n            // Update gate enable state\n            gate").concat(n,"_gate_enabled = gateInputState;\n\n            // Self-clock generation (only when running)\n            if (gate").concat(n,"_use_self_clock && gate").concat(n,"_gate_enabled && gate").concat(n,"_running) {\n                unsigned long currentTime = millis();\n                unsigned long clockInterval = (unsigned long)(60000.0 / currentBPM);\n\n                if (currentTime - gate").concat(n,"_last_self_clock >= clockInterval) {\n                    // Clock trigger - test probability\n                    float randVal = (float)random(0, 1000) / 1000.0;\n                    if (randVal < currentProbability) {\n                        // Trigger gate\n                        gate").concat(n,"_state = true;\n                        gate").concat(n,"_start_time = currentTime;\n\n                        // Sample & Hold on trigger\n                        if (gate").concat(n,"_sh_enabled) {\n                            gate").concat(n,"_sh_output = shInput;\n                        }\n                    }\n                    gate").concat(n,"_last_self_clock = currentTime;\n                }\n\n                // Check gate length\n                if (gate").concat(n,"_state) {\n                    unsigned long gateLength = (unsigned long)(clockInterval * gate").concat(n,"_length);\n                    if (currentTime - gate").concat(n,"_start_time >= gateLength) {\n                        gate").concat(n,"_state = false;\n                    }\n                }\n            }\n\n            // Update outputs\n            gate").concat(n,"_output = gate").concat(n,"_state ? 1.0 : 0.0;\n            gate").concat(n,"_sh_input = shInput;\n        }\n")}},{key:"generateMIDIInCode",value:function(e,n,t){return"\n        // MIDIIn ".concat(n," processing - UART MIDI Input\n        {\n            // Process incoming MIDI bytes\n            while (midi").concat(n,"Serial.available()) {\n                byte midiByte = midi").concat(n,"Serial.read();\n\n                // Parse MIDI message\n                if (midiByte >= 0x80) {\n                    // Status byte\n                    midi").concat(n,"_status = midiByte;\n                    midi").concat(n,"_dataIndex = 0;\n                    midi").concat(n,"_running_status = true;\n                } else if (midi").concat(n,"_running_status) {\n                    // Data byte\n                    if (midi").concat(n,"_dataIndex == 0) {\n                        midi").concat(n,"_data1 = midiByte;\n                        midi").concat(n,"_dataIndex = 1;\n                    } else if (midi").concat(n,"_dataIndex == 1) {\n                        midi").concat(n,"_data2 = midiByte;\n                        midi").concat(n,"_dataIndex = 0;\n\n                        // Process complete MIDI message\n                        byte messageType = midi").concat(n,"_status & 0xF0;\n                        byte channel = (midi").concat(n,"_status & 0x0F) + 1; // Convert to 1-16\n\n                        // Check channel filter\n                        if (midi").concat(n,"_omni || channel == midi").concat(n,"_channel) {\n                            switch (messageType) {\n                                case 0x90: // Note On\n                                    if (midi").concat(n,"_data2 > 0) { // Velocity > 0\n                                        if (midi").concat(n,"_use_gate) {\n                                            midi").concat(n,"_note = midi").concat(n,"_data1;\n                                            midi").concat(n,"_freq = 440.0 * pow(2.0, (midi").concat(n,"_note - 69) / 12.0);\n                                            midi").concat(n,"_gate = 1.0;\n                                            midi").concat(n,"_note_on = true;\n                                            midi").concat(n,"_last_note = midi").concat(n,"_data1;\n                                        }\n                                        if (midi").concat(n,"_use_vel) {\n                                            midi").concat(n,"_velocity = midi").concat(n,"_data2 / 127.0;\n                                        }\n                                    } else {\n                                        // Note On with velocity 0 = Note Off\n                                        if (midi").concat(n,"_use_gate && midi").concat(n,"_data1 == midi").concat(n,"_last_note) {\n                                            midi").concat(n,"_gate = 0.0;\n                                            midi").concat(n,"_note_on = false;\n                                        }\n                                    }\n                                    break;\n\n                                case 0x80: // Note Off\n                                    if (midi").concat(n,"_use_gate && midi").concat(n,"_data1 == midi").concat(n,"_last_note) {\n                                        midi").concat(n,"_gate = 0.0;\n                                        midi").concat(n,"_note_on = false;\n                                    }\n                                    break;\n\n                                case 0xB0: // Control Change\n                                    if (midi").concat(n,"_data1 == midi").concat(n,"_cc1) {\n                                        midi").concat(n,"_cc1_value = midi").concat(n,"_data2 / 127.0;\n                                    } else if (midi").concat(n,"_data1 == midi").concat(n,"_cc2) {\n                                        midi").concat(n,"_cc2_value = midi").concat(n,"_data2 / 127.0;\n                                    } else if (midi").concat(n,"_data1 == midi").concat(n,"_cc3) {\n                                        midi").concat(n,"_cc3_value = midi").concat(n,"_data2 / 127.0;\n                                    } else if (midi").concat(n,"_data1 == midi").concat(n,"_cc4) {\n                                        midi").concat(n,"_cc4_value = midi").concat(n,"_data2 / 127.0;\n                                    }\n                                    break;\n\n                                case 0xC0: // Program Change\n                                    if (midi").concat(n,"_use_prog) {\n                                        midi").concat(n,"_program = midi").concat(n,"_data1;\n                                    }\n                                    break;\n\n                                case 0xF8: // MIDI Clock\n                                    if (midi").concat(n,"_use_clock) {\n                                        midi").concat(n,"_clock_tick = true;\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Clear clock tick (it's a momentary signal)\n            if (midi").concat(n,"_clock_tick) {\n                midi").concat(n,"_clock_tick = false;\n            }\n        }\n")}},{key:"generateModulationCode",value:function(e,n,t){return"\n        // Modulation ".concat(n," - 4×LFO Matrix processing\n        {\n            unsigned long currentTime = millis();\n            float deltaTime = (currentTime - lfo").concat(n,"_last_update) / 1000.0;\n\n            // Update all 4 LFO phases\n            mod").concat(n,"_phase1 += mod").concat(n,"_lfo1_rate * deltaTime * 2.0 * M_PI;\n            mod").concat(n,"_phase2 += mod").concat(n,"_lfo2_rate * deltaTime * 2.0 * M_PI;\n            mod").concat(n,"_phase3 += mod").concat(n,"_lfo3_rate * deltaTime * 2.0 * M_PI;\n            mod").concat(n,"_phase4 += mod").concat(n,"_lfo4_rate * deltaTime * 2.0 * M_PI;\n\n            // Wrap phases\n            if (mod").concat(n,"_phase1 >= 2.0 * M_PI) mod").concat(n,"_phase1 -= 2.0 * M_PI;\n            if (mod").concat(n,"_phase2 >= 2.0 * M_PI) mod").concat(n,"_phase2 -= 2.0 * M_PI;\n            if (mod").concat(n,"_phase3 >= 2.0 * M_PI) mod").concat(n,"_phase3 -= 2.0 * M_PI;\n            if (mod").concat(n,"_phase4 >= 2.0 * M_PI) mod").concat(n,"_phase4 -= 2.0 * M_PI;\n\n            // Generate LFO outputs (simplified - just sine waves for now)\n            mod").concat(n,"_output1 = (sin(mod").concat(n,"_phase1) + 1.0) * 0.5; // 0-1 range\n            mod").concat(n,"_output2 = (sin(mod").concat(n,"_phase2) + 1.0) * 0.5;\n            mod").concat(n,"_output3 = (sin(mod").concat(n,"_phase3) + 1.0) * 0.5;\n            mod").concat(n,"_output4 = (sin(mod").concat(n,"_phase4) + 1.0) * 0.5;\n        }\n")}},{key:"generateInvertCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&("in"===n.to.port||void 0===n.to.port)}),o="0.5";if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c,l=(null===(c=r.match(/\d+$/))||void 0===c?void 0:c[0])||"1";switch(i.type){case"ADSR":o="adsr".concat(l,"_output");break;case"LFO":o="lfo".concat(l,"_output");break;case"Pot":o="pot".concat(l,"_value")}}}return"\n        // Invert ".concat(n," processing\n        {\n            invert").concat(n,"_input = ").concat(o,";\n            // Invert: 1.0 - input, with gain and offset\n            invert").concat(n,"_output = (1.0 - invert").concat(n,"_input) * invert").concat(n,"_gain + invert").concat(n,"_offset;\n            // Clamp to 0-1 range for control signals\n            invert").concat(n,"_output = constrain(invert").concat(n,"_output, 0.0, 1.0);\n        }\n")}},{key:"generateStepArray",value:function(e,n,t,a,o,r){for(var i=[],c=0;c<t;c++)for(var l=e.params["bank".concat(c,"_steps")]||[],s=0;s<4;s++){var u=4*c+s;if(u<n){var p=null;if(l[s]&&void 0!==l[s][a]?p=l[s]:e.params.steps&&e.params.steps[u]&&void 0!==e.params.steps[u][a]&&(p=e.params.steps[u]),p)if("muted"===a||"active"===a)i.push(p[a]?"true":"false");else{var d=p[a].toString();r&&(d=r(p[a])),i.push(d)}else i.push(o(u))}}return i.join(", ")}},{key:"generateHarmonicSequencerCode",value:function(e,n,t){var a=e.params.step_count||4,o=e.params.start_bank||1,r=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"clock"===n.to.port}),i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"start_stop"===n.to.port}),c=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"behavior"===n.to.port}),l=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"bpm"===n.to.port}),s=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"clock_div"===n.to.port}),u="false",p="false",d="0.0";"rest"===e.params.playback_mode?d="0.5":"reverse"===e.params.playback_mode&&(d="0.8");var f="seq".concat(n,"_bpm"),m="seq".concat(n,"_clock_div");if(r){var _=r.from.id.split(":")[0],g=this.connectionResolver.modules.find(function(e){return e.id===_});if(g){var h,v=(null===(h=_.match(/\d+$/))||void 0===h?void 0:h[0])||"1";switch(g.type){case"Clock":u="clock".concat(v,"_output");break;case"LFO":u="(lfo".concat(v,"_output > 0.5)");break;case"LEDButton":u="btn".concat(g.params.index,"_pressed")}}}if(i){var b=i.from.id.split(":")[0],y=this.connectionResolver.modules.find(function(e){return e.id===b});if(y){var k=y.params.index;switch(y.type){case"LEDButton":p="btn".concat(k,"_pressed");break;case"Encoder":p="enc".concat(k,"_button_pressed")}}}var S=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"gate"===n.to.port}),x=null;if(S){var E=S.from.id.split(":")[0],w=this.connectionResolver.modules.find(function(e){return e.id===E});if(w){var P,C=(null===(P=E.match(/\d+$/))||void 0===P?void 0:P[0])||"1";switch(w.type){case"ADSR":x="adsr".concat(C,"_output");break;case"LFO":x="lfo".concat(C,"_output");break;case"LEDButton":x="btn".concat(w.params.index,"_gate");break;case"Clock":x="clock".concat(C,"_output");break;case"GateGen":x="gategen".concat(C,"_gate");break;case"HarmonicSequencer":x="seq".concat(C,"_gate_sum")}}}if(c){var R=c.from.id.split(":")[0],L=this.connectionResolver.modules.find(function(e){return e.id===R});if(L){var I,M=(null===(I=R.match(/\d+$/))||void 0===I?void 0:I[0])||"1";switch(L.type){case"Pot":d="pot".concat(L.params.index,"_value");break;case"ADSR":d="adsr".concat(M,"_output");break;case"LFO":d="lfo".concat(M,"_output")}}}if(l){var D=l.from.id.split(":")[0],A=this.connectionResolver.modules.find(function(e){return e.id===D});if(A){var T,O=(null===(T=D.match(/\d+$/))||void 0===T?void 0:T[0])||"1";switch(A.type){case"Pot":f="(60.0 + pot".concat(A.params.index,"_value * 200.0)");break;case"ADSR":f="(60.0 + adsr".concat(O,"_output * 200.0)");break;case"LFO":f="(60.0 + lfo".concat(O,"_output * 200.0)")}}}if(s){var B=s.from.id.split(":")[0],z=this.connectionResolver.modules.find(function(e){return e.id===B});if(z){var F,N=(null===(F=B.match(/\d+$/))||void 0===F?void 0:F[0])||"1";switch(z.type){case"Pot":m="(int)(1.0 + pot".concat(z.params.index,"_value * 15.0)");break;case"ADSR":m="(int)(1.0 + adsr".concat(N,"_output * 15.0)");break;case"LFO":m="(int)(1.0 + lfo".concat(N,"_output * 15.0)")}}}return"\n        // HarmonicSequencer ".concat(n," processing\n        {\n            // Banking: Only process pots when in correct bank (").concat(o,")\n            if (currentBank == ").concat(o,") {\n                // Read and smooth hardware pots to reduce noise-induced pitch wavering\n                float pot1_raw = analogRead(7) / 4095.0; // GPIO7 - POT1\n                float pot2_raw = analogRead(3) / 4095.0; // GPIO3 - POT2\n                float pot3_raw = analogRead(4) / 4095.0; // GPIO4 - POT3\n                float pot4_raw = analogRead(5) / 4095.0; // GPIO5 - POT4\n\n                // Apply exponential smoothing to reduce pot noise\n                seq").concat(n,"_smoothed_pot[0] = seq").concat(n,"_smoothed_pot[0] * seq").concat(n,"_pot_smooth_factor + pot1_raw * (1.0 - seq").concat(n,"_pot_smooth_factor);\n                seq").concat(n,"_smoothed_pot[1] = seq").concat(n,"_smoothed_pot[1] * seq").concat(n,"_pot_smooth_factor + pot2_raw * (1.0 - seq").concat(n,"_pot_smooth_factor);\n                seq").concat(n,"_smoothed_pot[2] = seq").concat(n,"_smoothed_pot[2] * seq").concat(n,"_pot_smooth_factor + pot3_raw * (1.0 - seq").concat(n,"_pot_smooth_factor);\n                seq").concat(n,"_smoothed_pot[3] = seq").concat(n,"_smoothed_pot[3] * seq").concat(n,"_pot_smooth_factor + pot4_raw * (1.0 - seq").concat(n,"_pot_smooth_factor);\n            } // End banking check for pot reading\n\n            float pot1_val = seq").concat(n,"_smoothed_pot[0];\n            float pot2_val = seq").concat(n,"_smoothed_pot[1];\n            float pot3_val = seq").concat(n,"_smoothed_pot[2];\n            float pot4_val = seq").concat(n,"_smoothed_pot[3];\n\n            // Rate-limited MCP23017 I2C read to prevent audio interference\n            static unsigned long lastMcpRead = 0;\n            static bool btn_current[4] = {false, false, false, false};\n            if (currentTime - lastMcpRead > 20) { // Read every 20ms to avoid I2S interference\n                lastMcpRead = currentTime;\n                uint16_t mcpInputs = mcp.readGPIOAB();\n                btn_current[0] = !(mcpInputs & (1 << 0)); // GPA0 - active low\n                btn_current[1] = !(mcpInputs & (1 << 1)); // GPA1 - active low\n                btn_current[2] = !(mcpInputs & (1 << 2)); // GPA2 - active low\n                btn_current[3] = !(mcpInputs & (1 << 3)); // GPA3 - active low\n            }\n\n            // Single-bank navigation system: Use encoder button to switch between step groups\n            // Banking: Only process pot manipulation when in correct bank (").concat(o,")\n            if (currentBank == ").concat(o,") {\n                // Navigation: Long press Button 1-4 + Encoder press → Switch to step group 1-4\n                // Step mapping: Button 1-4 controls steps within current view group\n                int viewGroupStart = seq").concat(n,"_view_group * 4; // Step offset for current view (0-").concat(a-1,")\n                if (viewGroupStart >= 0 && viewGroupStart < ").concat(a,") { // Safety check for configured step count\n                    // Check if any buttons are currently held (shift mode)\n                    bool shiftMode = btn_current[0] || btn_current[1] || btn_current[2] || btn_current[3];\n\n                if (shiftMode) {\n                    // SHIFT MODE: Held buttons enable duration control\n                    // Only update duration for pots whose buttons are held\n                    if (btn_current[0]) {\n                        // Check soft takeover for duration\n                        float targetDuration = 0.25 + (pot1_val * 3.75); // Map to 0.25x-4.0x\n                        float currentDuration = seq").concat(n,"_duration[viewGroupStart + 0];\n                        if (seq").concat(n,"_pot_taken_over[0] || abs(targetDuration - currentDuration) < 0.1) {\n                            seq").concat(n,"_duration[viewGroupStart + 0] = targetDuration;\n                            seq").concat(n,"_pot_taken_over[0] = true;\n                            // Mark as shift mode only when pot is actually being used\n                            if (currentTime - seq").concat(n,"_btn_press_time[0] > 500) {\n                                seq").concat(n,"_btn_used_for_shift[0] = true;\n                            }\n                        }\n                    }\n                    if (btn_current[1]) {\n                        float targetDuration = 0.25 + (pot2_val * 3.75);\n                        float currentDuration = seq").concat(n,"_duration[viewGroupStart + 1];\n                        if (seq").concat(n,"_pot_taken_over[1] || abs(targetDuration - currentDuration) < 0.1) {\n                            seq").concat(n,"_duration[viewGroupStart + 1] = targetDuration;\n                            seq").concat(n,"_pot_taken_over[1] = true;\n                            // Mark as shift mode only when pot is actually being used\n                            if (currentTime - seq").concat(n,"_btn_press_time[1] > 500) {\n                                seq").concat(n,"_btn_used_for_shift[1] = true;\n                            }\n                        }\n                    }\n                    if (btn_current[2]) {\n                        float targetDuration = 0.25 + (pot3_val * 3.75);\n                        float currentDuration = seq").concat(n,"_duration[viewGroupStart + 2];\n                        if (seq").concat(n,"_pot_taken_over[2] || abs(targetDuration - currentDuration) < 0.1) {\n                            seq").concat(n,"_duration[viewGroupStart + 2] = targetDuration;\n                            seq").concat(n,"_pot_taken_over[2] = true;\n                            // Mark as shift mode only when pot is actually being used\n                            if (currentTime - seq").concat(n,"_btn_press_time[2] > 500) {\n                                seq").concat(n,"_btn_used_for_shift[2] = true;\n                            }\n                        }\n                    }\n                    if (btn_current[3]) {\n                        float targetDuration = 0.25 + (pot4_val * 3.75);\n                        float currentDuration = seq").concat(n,"_duration[viewGroupStart + 3];\n                        if (seq").concat(n,"_pot_taken_over[3] || abs(targetDuration - currentDuration) < 0.1) {\n                            seq").concat(n,"_duration[viewGroupStart + 3] = targetDuration;\n                            seq").concat(n,"_pot_taken_over[3] = true;\n                            // Mark as shift mode only when pot is actually being used\n                            if (currentTime - seq").concat(n,"_btn_press_time[3] > 500) {\n                                seq").concat(n,"_btn_used_for_shift[3] = true;\n                            }\n                        }\n                    }\n                } else {\n                    // NORMAL MODE: Pots control pitch with soft takeover after duration editing\n                    // Pot 1 pitch control with soft takeover\n                    float targetPitch1 = pot1_val;\n                    float currentPitch1 = seq").concat(n,"_pitch[viewGroupStart + 0];\n                    if (seq").concat(n,"_pot_taken_over[0] || abs(targetPitch1 - currentPitch1) < 0.05) {\n                        seq").concat(n,"_pitch[viewGroupStart + 0] = targetPitch1;\n                        seq").concat(n,"_base_pitch[viewGroupStart + 0] = targetPitch1; // Track base pitch for harmonic linking\n                        seq").concat(n,"_pot_taken_over[0] = true;\n                    }\n\n                    // Pot 2 pitch control with soft takeover\n                    float targetPitch2 = pot2_val;\n                    float currentPitch2 = seq").concat(n,"_pitch[viewGroupStart + 1];\n                    if (seq").concat(n,"_pot_taken_over[1] || abs(targetPitch2 - currentPitch2) < 0.05) {\n                        seq").concat(n,"_pitch[viewGroupStart + 1] = targetPitch2;\n                        seq").concat(n,"_base_pitch[viewGroupStart + 1] = targetPitch2; // Track base pitch for harmonic linking\n                        seq").concat(n,"_pot_taken_over[1] = true;\n                    }\n\n                    // Pot 3 pitch control with soft takeover\n                    float targetPitch3 = pot3_val;\n                    float currentPitch3 = seq").concat(n,"_pitch[viewGroupStart + 2];\n                    if (seq").concat(n,"_pot_taken_over[2] || abs(targetPitch3 - currentPitch3) < 0.05) {\n                        seq").concat(n,"_pitch[viewGroupStart + 2] = targetPitch3;\n                        seq").concat(n,"_base_pitch[viewGroupStart + 2] = targetPitch3; // Track base pitch for harmonic linking\n                        seq").concat(n,"_pot_taken_over[2] = true;\n                    }\n\n                    // Pot 4 pitch control with soft takeover\n                    float targetPitch4 = pot4_val;\n                    float currentPitch4 = seq").concat(n,"_pitch[viewGroupStart + 3];\n                    if (seq").concat(n,"_pot_taken_over[3] || abs(targetPitch4 - currentPitch4) < 0.05) {\n                        seq").concat(n,"_pitch[viewGroupStart + 3] = targetPitch4;\n                        seq").concat(n,"_base_pitch[viewGroupStart + 3] = targetPitch4; // Track base pitch for harmonic linking\n                        seq").concat(n,"_pot_taken_over[3] = true;\n                    }\n                }\n\n                // Update harmonic relationships after pot changes\n                updateHarmonicRelationships").concat(n,"();\n\n                // Reset takeover flags when buttons are released\n                if (!btn_current[0]) seq").concat(n,"_pot_taken_over[0] = false;\n                if (!btn_current[1]) seq").concat(n,"_pot_taken_over[1] = false;\n                if (!btn_current[2]) seq").concat(n,"_pot_taken_over[2] = false;\n                if (!btn_current[3]) seq").concat(n,"_pot_taken_over[3] = false;\n            }\n            } // End banking check for pot manipulation\n\n            // Behavior control - determine playback mode\n            float behaviorInput = ").concat(d,";\n            if (behaviorInput < 0.33) {\n                seq").concat(n,"_playback_mode = 0; // Iteration mode (default)\n            } else if (behaviorInput < 0.66) {\n                seq").concat(n,"_playback_mode = 1; // Rest mode (linear ").concat(a," steps)\n            } else {\n                seq").concat(n,"_playback_mode = 2; // Reverse mode\n            }\n\n            // Handle button press detection and timing\n            for (int btn = 0; btn < 4; btn++) {\n                if (btn_current[btn] && !seq").concat(n,"_btn_last[btn]) {\n                    // Button just pressed - start timing\n                    seq").concat(n,"_btn_press_time[btn] = currentTime;\n                    seq").concat(n,"_btn_long_hold_handled[btn] = false;\n                } else if (btn_current[btn] && seq").concat(n,"_btn_last[btn]) {\n                    // Button held - used for shift mode (duration control) - no additional action needed\n                    // The shift mode logic is handled in the pot control section above\n                } else if (!btn_current[btn] && seq").concat(n,"_btn_last[btn]) {\n                    // Button just released - only toggle step if button wasn't used for shift mode\n                    if (!seq").concat(n,"_btn_used_for_shift[btn]) {\n                        int stepIndex = seq").concat(n,"_view_group * 4 + btn;\n                        if (stepIndex >= 0 && stepIndex < ").concat(a,") {\n                            seq").concat(n,"_active[stepIndex] = !seq").concat(n,'_active[stepIndex];\n                            Serial.print("Step ");\n                            Serial.print(stepIndex + 1);\n                            Serial.println(seq').concat(n,'_active[stepIndex] ? " ACTIVATED" : " DEACTIVATED");\n\n                            // Update step count for iteration mode\n                            int activeCount = 0;\n                            for (int i = 0; i < ').concat(a,"; i++) {\n                                if (seq").concat(n,'_active[i]) activeCount++;\n                            }\n                            Serial.print("Active steps: ");\n                            Serial.println(activeCount);\n                        }\n                    } else {\n                        Serial.print("Button ");\n                        Serial.print(btn + 1);\n                        Serial.println(" was used for duration control - no step toggle");\n                    }\n                }\n                seq').concat(n,"_btn_last[btn] = btn_current[btn];\n\n                // Reset shift mode flag after button state is updated\n                if (!btn_current[btn]) {\n                    seq").concat(n,"_btn_used_for_shift[btn] = false;\n                }\n            }\n\n            // Encoder button handling - long hold clears sequence, short press starts/stops\n            bool encBtnCurrent = !digitalRead(6); // Encoder button - active low\n            bool startStopTrigger = ").concat(p,";\n\n            // TEMPORARY: Use encoder button for start/stop if no connection\n            if (").concat(p," == false) {\n                // Encoder button press detection with long hold for sequence clear\n                if (encBtnCurrent && !seq").concat(n,"_enc_btn_last) {\n                    // Button just pressed - start timing\n                    seq").concat(n,"_enc_btn_press_time = currentTime;\n                    seq").concat(n,"_enc_long_hold_handled = false;\n\n                    // IMMEDIATE START/STOP TRIGGER: Trigger immediately on press for responsiveness\n                    // (Long hold will override if held for 2+ seconds)\n                    if (seq").concat(n,"_navigation_trigger_btn < 0) {\n                        // No navigation in progress - trigger start/stop immediately\n                        startStopTrigger = true;\n                    }\n\n                    // Navigation: Check if any button is held for step group navigation (only if more than 1 group)\n                    if (seq").concat(n,"_step_groups > 1) {\n                        for (int navBtn = 0; navBtn < 4; navBtn++) {\n                            if (btn_current[navBtn] && (currentTime - seq").concat(n,"_btn_press_time[navBtn] > 1000)) {\n                                // Long press detected - this will be group navigation trigger\n                                seq").concat(n,"_navigation_trigger_btn = navBtn; // Remember which button triggered navigation\n                            }\n                        }\n                    }\n                } else if (encBtnCurrent && seq").concat(n,"_enc_btn_last) {\n                    // Button held - check for long hold (2 seconds for sequence clear)\n                    unsigned long holdDuration = currentTime - seq").concat(n,"_enc_btn_press_time;\n                    if (holdDuration > 2000 && !seq").concat(n,"_enc_long_hold_handled) {\n                        // Long hold detected - clear sequence and reset all parameters\n                        for (int i = 0; i < ").concat(a,"; i++) {\n                            seq").concat(n,"_active[i] = false;          // Clear active states\n                            seq").concat(n,"_pitch[i] = (i % 4) * 0.25;  // Reset to default pitch pattern (0, 0.25, 0.5, 0.75)\n                            seq").concat(n,"_duration[i] = 1.0;         // Reset to default duration (1.0x)\n                            seq").concat(n,"_muted[i] = false;          // Unmute all steps\n                            seq").concat(n,"_pitch_randomness[i] = 0.0; // Clear pitch randomness\n                            seq").concat(n,"_probability[i] = 1.0;      // Reset probability to 100%\n                            seq").concat(n,"_glissando_time[i] = 0.0;   // Clear glissando time\n                            seq").concat(n,"_glissando_probability[i] = 0.0; // Clear glissando probability\n                        }\n                        seq").concat(n,'_enc_long_hold_handled = true;\n                        Serial.println("HarmonicSequencer: SEQUENCE CLEARED & RESET TO DEFAULTS (long encoder hold)");\n                    }\n                } else if (!encBtnCurrent && seq').concat(n,"_enc_btn_last) {\n                    // Button just released - handle navigation if needed\n                    if (seq").concat(n,"_navigation_trigger_btn >= 0 && seq").concat(n,"_step_groups > 1) {\n                        // Navigation trigger detected - switch to step group based on button held\n                        int targetGroup = seq").concat(n,"_navigation_trigger_btn; // Button 0-3 maps to group 0-3\n                        if (targetGroup < seq").concat(n,"_step_groups) {\n                            seq").concat(n,'_view_group = targetGroup;\n                            Serial.print("Navigation: Switched to step group ");\n                            Serial.print(targetGroup + 1);\n                            Serial.print(" (steps ");\n                            Serial.print(targetGroup * 4 + 1);\n                            Serial.print("-");\n                            Serial.print(min((targetGroup + 1) * 4, ').concat(a,'));\n                            Serial.println(")");\n                        }\n                        seq').concat(n,"_navigation_trigger_btn = -1; // Reset navigation trigger\n                    }\n                }\n                seq").concat(n,"_enc_btn_last = encBtnCurrent;\n            } else {\n                // External start/stop connection exists\n                startStopTrigger = ").concat(p,";\n            }\n\n            // Start/Stop processing\n            static bool lastStartStopTrigger = false;\n            if (startStopTrigger && !lastStartStopTrigger) {\n                seq").concat(n,"_running = !seq").concat(n,"_running;\n                if (seq").concat(n,"_running) {\n                    seq").concat(n,"_current_step = 0; // Reset to beginning when starting\n                    seq").concat(n,"_last_step = -1; // Reset last step tracker\n\n                    // Generate initial random offsets for first sequence pass\n                    for (int i = 0; i < ").concat(a,"; i++) {\n                        float basePitch = seq").concat(n,"_pitch[i];\n                        float randomness = seq").concat(n,"_pitch_randomness[i];\n                        float randomRange = basePitch * randomness;\n                        seq").concat(n,'_pitch_random_offset[i] = (((float)random(0, 1000) / 1000.0) - 0.5) * 2.0 * randomRange;\n                    }\n\n                    Serial.println("HarmonicSequencer STARTED");\n                } else {\n                    Serial.println("HarmonicSequencer STOPPED");\n                }\n            }\n            lastStartStopTrigger = startStopTrigger;\n\n            // Clock processing\n            bool clockTrigger = ').concat(u,";\n\n            // AUTO CLOCK: Use internal clock when no external clock connected\n            if (").concat(u," == false) {\n                static unsigned long lastInternalClock = 0;\n                // Calculate step duration based on BPM and clock division (supports CV control)\n                float currentBpm = ").concat(f,";\n                int currentClockDiv = ").concat(m,";\n                unsigned long baseDuration = (60000 / currentBpm) / currentClockDiv; // Convert BPM to milliseconds per step\n                unsigned long currentStepDuration = (unsigned long)(baseDuration * seq").concat(n,"_duration[seq").concat(n,"_current_step]);\n\n                if (currentTime - lastInternalClock > currentStepDuration) {\n                    lastInternalClock = currentTime;\n                    clockTrigger = true;\n                }\n            }\n\n            if (seq").concat(n,"_running) {\n                // Advance step on clock trigger\n                if (clockTrigger && !seq").concat(n,"_last_clock_state) {\n                    // Find next step based on playback mode\n                    int nextStep = seq").concat(n,"_current_step;\n                    int attempts = 0;\n\n                    if (seq").concat(n,"_playback_mode == 1) {\n                        // Rest mode: Linear progression through all ").concat(a," steps (includes rests)\n                        if (seq").concat(n,"_reverse_direction) {\n                            nextStep = (seq").concat(n,"_current_step - 1 + ").concat(a,") % ").concat(a,";\n                        } else {\n                            nextStep = (seq").concat(n,"_current_step + 1) % ").concat(a,";\n                        }\n                    } else if (seq").concat(n,"_playback_mode == 2) {\n                        // Reverse mode: Only active steps, but in reverse order\n                        do {\n                            nextStep = (nextStep - 1 + ").concat(a,") % ").concat(a,";\n                            attempts++;\n                            if (attempts > ").concat(a,") break; // Prevent infinite loop\n                        } while (!seq").concat(n,"_active[nextStep] && attempts <= ").concat(a,");\n                    } else {\n                        // Iteration mode (default): Only active steps, forward\n                        do {\n                            nextStep = (nextStep + 1) % ").concat(a,";\n                            attempts++;\n                            if (attempts > ").concat(a,") break; // Prevent infinite loop\n                        } while (!seq").concat(n,"_active[nextStep] && attempts <= ").concat(a,");\n                    }\n\n                    // Detect sequence loop (when going to step 0 from a higher step)\n                    // Regenerate random pitch offsets once per sequence pass\n                    if (nextStep == 0 && seq").concat(n,"_last_step > 0) {\n                        // Sequence looped - regenerate all random offsets for this pass\n                        for (int i = 0; i < ").concat(a,"; i++) {\n                            float basePitch = seq").concat(n,"_pitch[i];\n                            float patternMod = 0.0; // Simplified - pattern affects playback, not random generation\n                            float modifiedPitch = basePitch + patternMod;\n\n                            float randomness = seq").concat(n,"_pitch_randomness[i];\n                            float randomRange = modifiedPitch * randomness;\n                            seq").concat(n,'_pitch_random_offset[i] = (((float)random(0, 1000) / 1000.0) - 0.5) * 2.0 * randomRange;\n                        }\n                        Serial.println("Seq').concat(n,': New random pass generated");\n                    }\n\n                    seq').concat(n,"_last_step = seq").concat(n,"_current_step; // Store current before updating\n                    seq").concat(n,"_current_step = nextStep;\n                    seq").concat(n,"_step_start_time = currentTime;\n\n                    // Increment pattern counter for this step (for pattern alternation)\n                    seq").concat(n,"_pattern_counter[seq").concat(n,"_current_step]++;\n\n                    // Use pre-calculated random offset from current sequence pass\n                    float basePitch = seq").concat(n,"_pitch[seq").concat(n,"_current_step];\n\n                    // Apply melodic pattern modulation around pot position\n                    // If this step is harmonically linked, use the pattern counter from the followed step\n                    int followedStep = seq").concat(n,"_harmonic_follow_steps[seq").concat(n,"_current_step];\n                    int effectiveStepForPattern = (followedStep != -1) ? followedStep : seq").concat(n,"_current_step;\n                    float patternModulation = calculatePatternModulation").concat(n,"(effectiveStepForPattern, currentTime, seq").concat(n,"_step_start_time, seq").concat(n,"_duration[seq").concat(n,"_current_step], basePitch);\n\n                    // Diatonic mode: double quantization to keep intervals in scale\n                    // Chromatic mode: single quantization at the end\n                    bool isDiatonic = false;\n                    switch (seq").concat(n,"_current_step) {\n                        case 0: isDiatonic = seq").concat(n,"_chord_diatonic_step1; break;\n                        case 1: isDiatonic = seq").concat(n,"_chord_diatonic_step2; break;\n                        case 2: isDiatonic = seq").concat(n,"_chord_diatonic_step3; break;\n                        case 3: isDiatonic = seq").concat(n,"_chord_diatonic_step4; break;\n                    }\n\n                    float modifiedPitch;\n                    if (isDiatonic) {\n                        // Diatonic mode: quantize base, add pattern, quantize again\n                        float quantizedBase = quantizePitch").concat(n,"(basePitch);\n                        modifiedPitch = quantizePitch").concat(n,"(quantizedBase + patternModulation);\n                    } else {\n                        // Chromatic mode: add pattern, quantize once at end\n                        modifiedPitch = basePitch + patternModulation;\n                    }\n\n                    // Use stored random offset instead of calculating new one each step\n                    float randomOffset = seq").concat(n,"_pitch_random_offset[seq").concat(n,"_current_step];\n                    float rawPitch = modifiedPitch + randomOffset;\n\n                    // Apply musical scale quantization (always active)\n                    seq").concat(n,"_sampled_pitch = quantizePitch").concat(n,"(rawPitch);\n\n                    // Gate activation depends on mode and step state\n                    if (seq").concat(n,"_playback_mode == 1) {\n                        // Rest mode: Gate active for all steps, but inactive steps produce silence\n                        seq").concat(n,"_gate_active = !seq").concat(n,"_muted[seq").concat(n,"_current_step];\n                    } else {\n                        // Iteration/Reverse modes: Gate only active for non-muted steps\n                        seq").concat(n,"_gate_active = seq").concat(n,"_active[seq").concat(n,"_current_step] && !seq").concat(n,"_muted[seq").concat(n,"_current_step];\n                    }\n\n                    // Update current bank based on current step\n                    seq").concat(n,"_current_bank = seq").concat(n,'_current_step / 4;\n\n                    // Debug output\n                    Serial.print("Step: ");\n                    Serial.print(seq').concat(n,'_current_step + 1);\n                    Serial.print(", Bank: ");\n                    Serial.print(seq').concat(n,'_current_bank + 1);\n                    Serial.print(", Duration: ");\n                    Serial.print(seq').concat(n,"_duration[seq").concat(n,'_current_step]);\n                    Serial.print("x, Gate: ");\n                    Serial.println(seq').concat(n,'_gate_active ? "ON" : "OFF");\n                }\n                seq').concat(n,"_last_clock_state = clockTrigger;\n\n                // Gate length control with individual step durations\n                if (seq").concat(n,"_gate_active) {\n                    unsigned long baseDuration = 500; // Base step duration (120 BPM)\n                    // Apply individual step duration multiplier\n                    unsigned long stepDuration = (unsigned long)(baseDuration * seq").concat(n,"_duration[seq").concat(n,"_current_step]);\n                    unsigned long gateLength = (unsigned long)(stepDuration * seq").concat(n,"_gate_length);\n                    if (currentTime - seq").concat(n,"_step_start_time > gateLength) {\n                        seq").concat(n,"_gate_active = false;\n                    }\n                }\n            }\n\n            // LED Chase - show currently playing step (only if step is active)\n            uint16_t ledOutputs = 0;\n            if (seq").concat(n,"_running) {\n                // Light LED for current playing step only if the step is active\n                int currentStepInBank = seq").concat(n,"_current_step % 4; // 0-3 within any bank\n                bool currentStepActive = seq").concat(n,"_active[seq").concat(n,"_current_step]; // Check if current step is active\n\n                // Set LED bits for current step only if active (GPA6, GPA7, GPB0, GPB1)\n                if (currentStepActive) {\n                    if (currentStepInBank == 0) ledOutputs |= (1 << 6);      // GPA6 - Step 1 LED\n                    else if (currentStepInBank == 1) ledOutputs |= (1 << 7); // GPA7 - Step 2 LED\n                    else if (currentStepInBank == 2) ledOutputs |= (1 << 8); // GPB0 - Step 3 LED\n                    else if (currentStepInBank == 3) ledOutputs |= (1 << 9); // GPB1 - Step 4 LED\n                }\n            } else {\n                // When stopped, show encoder-selected bank\n                int encoderBank = currentBank - 1; // 0-3\n                if (encoderBank == 0) ledOutputs |= (1 << 6);      // Bank 1\n                else if (encoderBank == 1) ledOutputs |= (1 << 7); // Bank 2\n                else if (encoderBank == 2) ledOutputs |= (1 << 8); // Bank 3\n                else if (encoderBank == 3) ledOutputs |= (1 << 9); // Bank 4\n            }\n\n            // Only update LEDs when not showing bank indicator\n            if (!showingBankIndicator) {\n                mcp.writeGPIOAB(ledOutputs);\n            }\n\n            // Generate outputs based on mode and step state\n            static float lastPitchOutput = -1.0;\n            static int lastStepOutput = -1;\n            static unsigned long lastSeqDebugTime = 0;\n            static bool lastRunningState = false;\n\n            if (seq").concat(n,"_running && seq").concat(n,"_gate_active) {\n                // Apply probability check for this step\n                float stepProbability = seq").concat(n,"_probability[seq").concat(n,"_current_step];\n                bool stepFires = ((float)random(0, 1000) / 1000.0) < stepProbability;\n\n                if (seq").concat(n,"_playback_mode == 1) {\n                    // Rest mode: Output pitch only for active steps, gate always on when not muted\n                    if (seq").concat(n,"_active[seq").concat(n,"_current_step] && stepFires) {\n                        // Use sample-and-hold pitch (calculated once when step started)\n                        seq").concat(n,"_pitch_sum = seq").concat(n,"_sampled_pitch;\n                    } else {\n                        seq").concat(n,"_pitch_sum = 0.0; // Rest - no pitch output\n                    }\n                    seq").concat(n,"_gate_sum = stepFires ? 1.0 : 0.0; // Gate depends on probability\n                } else {\n                    // Iteration/Reverse modes: Normal operation (only active steps play)\n                    if (stepFires) {\n                        // Use sample-and-hold pitch (calculated once when step started)\n                        seq").concat(n,"_pitch_sum = seq").concat(n,"_sampled_pitch;\n                        seq").concat(n,"_gate_sum = 1.0;\n                    } else {\n                        seq").concat(n,"_pitch_sum = 0.0;\n                        seq").concat(n,"_gate_sum = 0.0;\n                    }\n                }\n\n                // Convert quantized pitch to Hz frequency using octave_center (octave+1 range)\n                if (seq").concat(n,"_gate_sum > 0.0) {\n                    // Use octave_center parameter (default 4 = C4)\n                    int octave_center = ").concat(e.params.octave_center||4,";\n                    // Convert 0-1 pitch to MIDI note within octave+1 range (13 semitones, C4 to C5)\n                    // Note: pitch_sum = 0.0 is valid (root note), only silence when gate is off\n                    float baseMidi = (octave_center * 12.0); // C of the center octave\n                    float midiNote = baseMidi + (seq").concat(n,"_pitch_sum * 13.0); // octave+1 range (13 semitones)\n                    // Convert MIDI to frequency: f = 440 * 2^((midi-69)/12)\n                    float targetHz = 440.0 * pow(2.0, (midiNote - 69.0) / 12.0);\n\n                    // GLISSANDO PROCESSING\n                    // Check if we should start a new glissando on step change\n                    static int lastProcessedStep = -1;\n                    if (seq").concat(n,"_current_step != lastProcessedStep) {\n                        // Step just changed - check if glissando should trigger\n                        float glissProb = seq").concat(n,"_glissando_probability[seq").concat(n,"_current_step];\n                        float glissTime = seq").concat(n,"_glissando_time[seq").concat(n,"_current_step];\n\n                        // Roll probability dice (simple deterministic approach using step number as seed)\n                        float randomValue = (float)((seq").concat(n,"_current_step * 7 + 13) % 100) / 100.0; // 0-1 pseudo-random\n\n                        if (glissProb > 0.0 && glissTime > 0.0 && randomValue < glissProb) {\n                            // Glissando triggered! Start sliding from current Hz to target Hz\n                            seq").concat(n,"_glissando_start_pitch = seq").concat(n,"_pitch_hz; // Start from current frequency\n                            seq").concat(n,"_glissando_target_pitch = targetHz; // Slide to target frequency\n                            seq").concat(n,"_glissando_start_time = seq").concat(n,"_step_start_time;\n                            seq").concat(n,'_glissando_active = true;\n                            Serial.print("GLISS: Step ");\n                            Serial.print(seq').concat(n,'_current_step + 1);\n                            Serial.print(" triggered (prob=");\n                            Serial.print(glissProb * 100);\n                            Serial.print("%, time=");\n                            Serial.print(glissTime * 100);\n                            Serial.println("%)");\n                        } else {\n                            // No glissando - use target frequency directly\n                            seq').concat(n,"_glissando_active = false;\n                        }\n                        lastProcessedStep = seq").concat(n,"_current_step;\n                    }\n\n                    // Apply glissando interpolation if active\n                    if (seq").concat(n,"_glissando_active) {\n                        float glissTime = seq").concat(n,"_glissando_time[seq").concat(n,"_current_step];\n                        unsigned long stepDuration = (unsigned long)(60000.0 / seq").concat(n,"_bpm * 4.0 / seq").concat(n,"_clock_div * seq").concat(n,"_duration[seq").concat(n,"_current_step]);\n                        unsigned long glissDuration = (unsigned long)(stepDuration * glissTime);\n                        unsigned long elapsed = currentTime - seq").concat(n,"_glissando_start_time;\n\n                        if (elapsed < glissDuration) {\n                            // Still within glissando time - interpolate\n                            float rawProgress = (float)elapsed / (float)glissDuration;\n                            rawProgress = constrain(rawProgress, 0.0, 1.0);\n\n                            // Apply curve shaping based on curve type\n                            int curveType = seq").concat(n,"_glissando_curve[seq").concat(n,"_current_step];\n                            float progress = rawProgress;\n\n                            if (curveType == 1) {\n                                // Exponential curve (slow start, fast end)\n                                progress = pow(rawProgress, 2.0);\n                            } else if (curveType == 2) {\n                                // Logarithmic curve (fast start, slow end)\n                                progress = sqrt(rawProgress);\n                            }\n                            // curveType == 0 is linear (no change needed)\n\n                            // Linear interpolation with curve-shaped progress\n                            float interpolatedPitch = seq").concat(n,"_glissando_start_pitch +\n                                (seq").concat(n,"_glissando_target_pitch - seq").concat(n,"_glissando_start_pitch) * progress;\n\n                            seq").concat(n,"_pitch_hz = interpolatedPitch;\n                            seq").concat(n,"_glissando_current_hz = interpolatedPitch;\n                        } else {\n                            // Glissando finished - use target frequency\n                            seq").concat(n,"_pitch_hz = seq").concat(n,"_glissando_target_pitch;\n                            seq").concat(n,"_glissando_active = false;\n                        }\n                    } else {\n                        // No glissando active - use target frequency directly\n                        seq").concat(n,"_pitch_hz = targetHz;\n                    }\n                } else {\n                    seq").concat(n,"_pitch_hz = 0.0; // Silent when gate is off\n                    seq").concat(n,"_glissando_active = false; // Stop glissando when gate is off\n                }\n\n                // Apply external gate muting (if gate input is connected)\n                // Sequencer continues running, but outputs are muted when gate is low\n                ").concat(x?"\n                float gateInput = ".concat(x,";\n                bool gateEnabled = (gateInput > 0.5);\n                if (!gateEnabled) {\n                    // Mute outputs while sequencer continues running internally\n                    seq").concat(n,"_pitch_sum = 0.0;\n                    seq").concat(n,"_gate_sum = 0.0;\n                    seq").concat(n,"_pitch_hz = 0.0;\n                }\n                "):"// No gate input connected - outputs always enabled","\n\n                // Debug output when step or pitch changes\n                bool shouldSeqDebug = (seq").concat(n,"_current_step != lastStepOutput) ||\n                                     (abs(seq").concat(n,"_pitch_sum - lastPitchOutput) > 0.01) ||\n                                     (currentTime - lastSeqDebugTime > 200) ||\n                                     (seq").concat(n,'_running != lastRunningState);\n\n                if (shouldSeqDebug) {\n                    Serial.print("Seq').concat(n,': Step=");\n                    Serial.print(seq').concat(n,'_current_step + 1);\n                    Serial.print("/");\n                    Serial.print(seq').concat(n,"_active[seq").concat(n,'_current_step] ? "ACT" : "rest");\n                    Serial.print(" Bank=");\n                    Serial.print((seq').concat(n,'_current_step / 4) + 1);\n                    Serial.print(" Pitch=");\n                    Serial.print(seq').concat(n,'_pitch_sum, 3);\n                    Serial.print(" Gate=");\n                    Serial.print(seq').concat(n,'_gate_sum, 1);\n                    Serial.print(" Mode=");\n                    Serial.println(seq').concat(n,'_playback_mode == 0 ? "iter" : (seq').concat(n,'_playback_mode == 1 ? "rest" : "rev"));\n                    lastSeqDebugTime = currentTime;\n                }\n\n                lastPitchOutput = seq').concat(n,"_pitch_sum;\n                lastStepOutput = seq").concat(n,"_current_step;\n            } else {\n                seq").concat(n,"_pitch_sum = 0.0;\n                seq").concat(n,"_pitch_hz = 0.0;\n                seq").concat(n,"_gate_sum = 0.0;\n\n                // Debug when sequencer stops\n                if (seq").concat(n,'_running != lastRunningState) {\n                    Serial.println("Seq').concat(n,': STOPPED");\n                    lastSeqDebugTime = currentTime;\n                }\n            }\n\n            lastRunningState = seq').concat(n,"_running;\n\n            // Individual step outputs - each step gets its own pitch and gate\n            // Clear gate outputs only (pitch values persist from when step was last active)\n            seq").concat(n,"_gate_step1 = 0.0;\n            seq").concat(n,"_gate_step2 = 0.0;\n            seq").concat(n,"_gate_step3 = 0.0;\n            seq").concat(n,"_gate_step4 = 0.0;\n\n            // Update the output for the currently active step only\n            if (seq").concat(n,"_running && seq").concat(n,"_gate_active) {\n                float stepProbability = seq").concat(n,"_probability[seq").concat(n,"_current_step];\n                bool stepFires = ((float)random(0, 1000) / 1000.0) < stepProbability;\n\n                if (seq").concat(n,"_active[seq").concat(n,"_current_step] && stepFires) {\n                    // Calculate pitch and Hz for the current step\n                    float stepPitch = seq").concat(n,"_sampled_pitch;\n\n                    // Convert pitch to Hz using same logic as main output\n                    int octave_center = ").concat(e.params.octave_center||4,";\n                    float baseMidi = (octave_center * 12.0);\n                    float midiNote = baseMidi + (stepPitch * 13.0);\n                    float stepHz = 440.0 * pow(2.0, (midiNote - 69.0) / 12.0);\n\n                    // Set outputs for the current step (1-indexed for outputs)\n                    switch (seq").concat(n,"_current_step) {\n                        case 0: // Step 1\n                            seq").concat(n,"_pitch_step1 = stepPitch;\n                            seq").concat(n,"_pitch_step1_hz = stepHz;\n                            seq").concat(n,"_gate_step1 = 1.0;\n                            break;\n                        case 1: // Step 2\n                            seq").concat(n,"_pitch_step2 = stepPitch;\n                            seq").concat(n,"_pitch_step2_hz = stepHz;\n                            seq").concat(n,"_gate_step2 = 1.0;\n                            break;\n                        case 2: // Step 3\n                            seq").concat(n,"_pitch_step3 = stepPitch;\n                            seq").concat(n,"_pitch_step3_hz = stepHz;\n                            seq").concat(n,"_gate_step3 = 1.0;\n                            break;\n                        case 3: // Step 4\n                            seq").concat(n,"_pitch_step4 = stepPitch;\n                            seq").concat(n,"_pitch_step4_hz = stepHz;\n                            seq").concat(n,"_gate_step4 = 1.0;\n                            break;\n                    }\n                }\n            }\n\n            // Status outputs\n            seq").concat(n,"_current_step_cv = seq").concat(n,"_current_step / (float)(").concat(a," - 1); // 0-1 range\n            seq").concat(n,"_current_bank_cv = seq").concat(n,"_view_group / (float)(seq").concat(n,"_step_groups - 1); // 0-1 range based on view groups\n        }\n")}},{key:"generateAutomationCode",value:function(e,n,t){for(var a=this,o=e.params.num_inputs||1,r="",i=function(o){var i=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&n.to.port==="in_".concat(o)});if(i){var c=i.from.id.split(":")[0],l=a.connectionResolver.modules.find(function(e){return e.id===c});if(l){var s,u=(null===(s=c.match(/\d+$/))||void 0===s?void 0:s[0])||"1",p="0.0";switch(l.type){case"Pot":p="pot".concat(u,"_value");break;case"ADSR":p="adsr".concat(u,"_output");break;case"LFO":p="lfo".concat(u,"_output");break;case"LEDButton":p="btn".concat(l.params.index,"_output");break;case"Scale":p="scale".concat(u,"_output");break;case"HarmonicSequencer":var d=i.from.port||"cv1";p="pitch_norm"===d?"seq".concat(u,"_pitch_norm"):"pitch_sum"===d?"seq".concat(u,"_pitch_sum"):d.startsWith("cv")||d.startsWith("pitch_step")?"seq".concat(u,"_").concat(d):"seq".concat(u,"_cv1");break;case"Modulation":var f=i.from.port||"lfo1";p="mod".concat(u,"_").concat(f,"_output");break;case"VCA":p="vca".concat(u,"_outputL");break;case"Automation":var m=(i.from.port||"out_1").replace("out_","output_");p="automation".concat(u,"_").concat(m)}r+="            automation".concat(n,"_input_").concat(o," = ").concat(p,";\n")}}},c=1;c<=o;c++)i(c);for(var l="",s=1;s<=o;s++)l+="\n            // Channel ".concat(s," - Independent recording/playback\n            {\n                // Detect if channel is being moved during recording\n                if (recordTrigger && !automation").concat(n,"_last_record_trigger) {\n                    // Button just pressed - start monitoring for movement\n                    automation").concat(n,"_last_input_").concat(s," = automation").concat(n,"_input_").concat(s,";\n                }\n\n                // Recording mode for this channel\n                if (automation").concat(n,"_channel_").concat(s,"_recording) {\n                    // Check if channel is actually being moved\n                    float movement = abs(automation").concat(n,"_input_").concat(s," - automation").concat(n,"_last_input_").concat(s,");\n\n                    if (movement > automation").concat(n,"_movement_threshold || automation").concat(n,"_channel_").concat(s,"_length > 0) {\n                        // Channel is moving or already started - record it\n                        if (automation").concat(n,"_channel_").concat(s,"_position < automation").concat(n,"_buffer_size) {\n                            automation").concat(n,"_buffer_").concat(s,"[automation").concat(n,"_channel_").concat(s,"_position] = automation").concat(n,"_input_").concat(s,";\n                            automation").concat(n,"_channel_").concat(s,"_position++;\n                            automation").concat(n,"_channel_").concat(s,"_length = automation").concat(n,"_channel_").concat(s,"_position;\n                            // Debug: show recording progress every 50 samples\n                            if (automation").concat(n,"_channel_").concat(s,'_position % 50 == 1) {\n                                Serial.printf("DEBUG: Ch').concat(s,' recording... %d samples (movement=%.4f)\\n",\n                                    automation').concat(n,"_channel_").concat(s,"_position, movement);\n                            }\n                        }\n                    }\n\n                    automation").concat(n,"_last_input_").concat(s," = automation").concat(n,"_input_").concat(s,";\n\n                    // Pass through during recording\n                    automation").concat(n,"_output_").concat(s," = automation").concat(n,"_input_").concat(s,";\n                }\n                // Playback mode for this channel\n                else if (automation").concat(n,"_channel_").concat(s,"_playing && automation").concat(n,"_channel_").concat(s,"_length > 0) {\n                    // Touch detection - check if user moved this channel's control\n                    // BUT: Skip touch detection if encoder button is held (mode selection active)\n                    bool channelTouched = false;\n                    if (!automation").concat(n,"_mode_select && millis() - automation").concat(n,"_channel_").concat(s,"_start_time > automation").concat(n,"_touch_grace_ms) {\n                        float diff = abs(automation").concat(n,"_input_").concat(s," - automation").concat(n,"_last_input_").concat(s,");\n                        if (diff > automation").concat(n,'_touch_threshold) {\n                            Serial.printf("DEBUG: Channel ').concat(s,' TOUCHED - diff=%.3f\\n", diff);\n                            channelTouched = true;\n                        }\n                    }\n\n                    if (channelTouched) {\n                        // Stop playback for this channel, clear data, switch to pass-through\n                        automation').concat(n,"_channel_").concat(s,"_playing = false;\n                        automation").concat(n,"_channel_").concat(s,'_length = 0; // Clear so channel can be re-recorded\n                        Serial.printf("Automation ').concat(n," Channel ").concat(s,': Touch detected, cleared loop\\n");\n                    }\n\n\n                    if (automation').concat(n,"_channel_").concat(s,"_playing) {\n                        // Calculate playback position with mode transformation\n                        int readPosition = automation").concat(n,"_channel_").concat(s,"_position;\n\n                        switch (automation").concat(n,"_playback_mode) {\n                            case 0: // Normal\n                                readPosition = automation").concat(n,"_channel_").concat(s,"_position;\n                                break;\n                            case 1: // Reverse\n                                readPosition = automation").concat(n,"_channel_").concat(s,"_length - 1 - automation").concat(n,"_channel_").concat(s,"_position;\n                                break;\n                            case 2: // 2x speed\n                                readPosition = automation").concat(n,"_channel_").concat(s,"_position * 2;\n                                if (readPosition >= automation").concat(n,"_channel_").concat(s,"_length)\n                                    readPosition = automation").concat(n,"_channel_").concat(s,"_length - 1;\n                                break;\n                            case 3: // 0.5x speed\n                                readPosition = automation").concat(n,"_channel_").concat(s,"_position / 2;\n                                break;\n                            case 4: // Pingpong\n                                static bool automation").concat(n,"_channel_").concat(s,"_pingpong_forward = true;\n                                if (automation").concat(n,"_channel_").concat(s,"_pingpong_forward) {\n                                    readPosition = automation").concat(n,"_channel_").concat(s,"_position;\n                                } else {\n                                    readPosition = automation").concat(n,"_channel_").concat(s,"_length - 1 - automation").concat(n,"_channel_").concat(s,"_position;\n                                }\n                                break;\n                        }\n\n                        // Clamp position\n                        if (readPosition < 0) readPosition = 0;\n                        if (readPosition >= automation").concat(n,"_channel_").concat(s,"_length)\n                            readPosition = automation").concat(n,"_channel_").concat(s,"_length - 1;\n\n                        // Output from buffer\n                        automation").concat(n,"_output_").concat(s," = automation").concat(n,"_buffer_").concat(s,"[readPosition];\n\n                        // Advance position\n                        automation").concat(n,"_channel_").concat(s,"_position++;\n\n                        // Handle loop/stop\n                        int effectiveLength = automation").concat(n,"_channel_").concat(s,"_length;\n                        if (automation").concat(n,"_playback_mode == 2) effectiveLength /= 2;\n                        if (automation").concat(n,"_playback_mode == 3) effectiveLength *= 2;\n\n                        if (automation").concat(n,"_channel_").concat(s,"_position >= effectiveLength) {\n                            if (automation").concat(n,"_loop) {\n                                automation").concat(n,"_channel_").concat(s,"_position = 0;\n                            } else {\n                                automation").concat(n,"_channel_").concat(s,"_playing = false;\n                                automation").concat(n,"_channel_").concat(s,"_position = effectiveLength - 1;\n                            }\n                        }\n                    } else {\n                        // Touched - pass through\n                        automation").concat(n,"_output_").concat(s," = automation").concat(n,"_input_").concat(s,";\n                    }\n\n                    automation").concat(n,"_last_input_").concat(s," = automation").concat(n,"_input_").concat(s,";\n                }\n                // Idle mode - pass through\n                else {\n                    automation").concat(n,"_output_").concat(s," = automation").concat(n,"_input_").concat(s,";\n                }\n            }\n");return"\n        // Automation ".concat(n," - Independent Per-Channel Automation (").concat(o," channels)\n        {\n            // Read input values for all channels\n").concat(r,"\n            // Global recording trigger (button)\n            bool recordTrigger = automation").concat(n,"_record_trigger > 0.5;\n\n            // Rising edge: Start recording for moved channels (preserve playing channels)\n            if (recordTrigger && !automation").concat(n,'_last_record_trigger) {\n                Serial.println("Automation ').concat(n,': Button pressed - starting recording mode");\n                // Start recording mode for all channels (will filter by movement)\n                // Channels already playing are preserved\n').concat(this.generateChannelRecordingStart(n,o),"\n            }\n\n            // Falling edge: Stop recording, start playback for recorded channels\n            else if (!recordTrigger && automation").concat(n,"_last_record_trigger) {\n").concat(this.generateChannelRecordingStop(n,o),"\n            }\n\n            automation").concat(n,'_last_record_trigger = recordTrigger;\n\n            // MODE SELECTION: Encoder button + pot movement selects playback mode\n            // Works regardless of which channels are playing (global mode for all channels)\n            Serial.printf("DEBUG: mode_select=%d, input_1=%.3f\\n", automation').concat(n,"_mode_select, automation").concat(n,"_input_1);\n            if (automation").concat(n,"_mode_select) {\n                // Encoder button is held - use first input to select mode\n                // Map input 0.0-1.0 to modes: 0=normal, 1=reverse, 2=2x, 3=0.5x, 4=pingpong\n                automation").concat(n,"_selected_mode = (int)(automation").concat(n,"_input_1 * 4.99);\n                if (automation").concat(n,"_selected_mode != automation").concat(n,'_playback_mode) {\n                    const char* modeNames[] = {"Normal", "Reverse", "2x Speed", "0.5x Speed", "Pingpong"};\n                    Serial.printf("Automation ').concat(n,': Mode = %s\\n", modeNames[automation').concat(n,"_selected_mode]);\n                    automation").concat(n,"_playback_mode = automation").concat(n,"_selected_mode;\n                }\n            }\n\n").concat(l,"\n        }\n")}},{key:"generateStopAllChannels",value:function(e,n){for(var t="",a=1;a<=n;a++)t+="                automation".concat(e,"_channel_").concat(a,"_playing = false;\n");return t}},{key:"generateChannelRecordingStart",value:function(e,n){for(var t="",a=1;a<=n;a++)t+="                // Only reset channel ".concat(a," if it has no existing recording\n                if (automation").concat(e,"_channel_").concat(a,"_length == 0) {\n                    automation").concat(e,"_channel_").concat(a,"_recording = true;\n                    automation").concat(e,"_channel_").concat(a,"_playing = false;\n                    automation").concat(e,"_channel_").concat(a,"_position = 0;\n                } else {\n                    // Channel ").concat(a,' has existing data - keep it playing\n                    Serial.printf("Automation ').concat(e," Channel ").concat(a,': Preserving existing %d samples\\n", automation').concat(e,"_channel_").concat(a,"_length);\n                }\n");return t}},{key:"generateChannelRecordingStop",value:function(e,n){for(var t="",a=1;a<=n;a++)t+="                if (automation".concat(e,"_channel_").concat(a,"_recording) {\n                    automation").concat(e,"_channel_").concat(a,"_recording = false;\n                    if (automation").concat(e,"_channel_").concat(a,'_length > 0) {\n                        Serial.printf("Automation ').concat(e," Channel ").concat(a,': Recorded %d samples, starting playback\\n",\n                            automation').concat(e,"_channel_").concat(a,"_length);\n                        automation").concat(e,"_channel_").concat(a,"_playing = true;\n                        automation").concat(e,"_channel_").concat(a,"_position = 0;\n                        automation").concat(e,"_channel_").concat(a,"_start_time = millis();\n                        // Initialize last_input for touch detection\n                        automation").concat(e,"_last_input_").concat(a," = automation").concat(e,"_input_").concat(a,';\n                    } else {\n                        Serial.printf("Automation ').concat(e," Channel ").concat(a,': No movement detected\\n");\n                    }\n                }\n');return t}}])&&pe(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function me(e){return me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},me(e)}function _e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,ge(a.key),a)}}function ge(e){var n=function(e){if("object"!=me(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=me(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==me(n)?n:n+""}var he=function(){return e=function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.connectionResolver=n,this.pinMapper=Y,this.declaredButtons=new Set},(n=[{key:"generateIncludes",value:function(e){return[]}},{key:"generateGlobalVariables",value:function(e,n,t){switch(e.type){case"GateIn":var a=e.params.index||1,o=1===a?4:5,r=e.params.mode||"trigger";return e.params.trigger_hold_ms,"\n// ".concat(t.label," ").concat(n," - Gate In ").concat(a," (LTV816 optoisolator on MCP23017 GPA").concat(o,")\nconst int GATEIN_PIN_").concat(n," = ").concat(o,"; // MCP23017 GPA").concat(o,"\nbool gatein").concat(n,"_state = false;\nbool gatein").concat(n,"_lastState = false;\nbool gatein").concat(n,"_trigger = false;\nconst char* gatein").concat(n,'_mode = "').concat(r,'"; // "gate" or "trigger"\nunsigned long gatein').concat(n,"_trigHoldUntil = 0; // Latch trigger for reliable sampling\n");case"Pot":var i=this.pinMapper.getAnalogPin(e.params.pin||0),c=e.params.index||1;return"\n// ".concat(t.label," ").concat(c,"\nconst int pot").concat(c,"_pin = ").concat(i,";\nfloat pot").concat(c,"_value = 0.0;\nfloat pot").concat(c,"_physical = 0.0;     // Current physical pot position\nfloat pot").concat(c,"_target = 0.0;       // Target value when bank becomes active\nbool pot").concat(c,"_taken_over = false;  // Has pot taken over after bank change\nfloat pot").concat(c,"_last_bank_change = 0.0; // Time of last bank change for this pot\nfloat pot").concat(c,"_smoothed = 0.0;\nfloat pot").concat(c,"_bank_values[8] = {0.0}; // Store pot value for each bank\nint pot").concat(c,"_last_bank = -1; // Track last active bank (-1 = never assigned)\n");case"LEDButton":var l=e.params.index||1,s=this.pinMapper.getMCPButtonPin(l-1),u=this.pinMapper.getMCPButtonLEDPin(l-1);return"\n// ".concat(t.label," ").concat(n," (Physical Button ").concat(l,")\nconst int BTN_PIN_").concat(n," = ").concat(s,"; // MCP23017 pin ").concat(s,"\nconst int LED_PIN_").concat(n," = ").concat(u,"; // MCP23017 pin ").concat(u,"\nbool btn").concat(l,"_pressed = false;\nvolatile bool btn").concat(l,"_gate = false;     // Raw gate signal for modular connections\nfloat btn").concat(l,"_output = 0.0;             // Normalized output for control connections\nbool btn").concat(l,"_lastState = false;\nbool btn").concat(l,"_state = false;\nbool btn").concat(l,"_ledState = false;\nunsigned long btn").concat(l,"_lastDebounce = 0;\nconst unsigned long btn").concat(l,"_debounceDelay = 50;\n");case"Encoder":var p=this.pinMapper.getEncoderPins();return"\n// ".concat(t.label," ").concat(n,"\nconst int ENC_A_PIN_").concat(n," = ").concat(p.A,"; // GPIO").concat(p.A,"\nconst int ENC_B_PIN_").concat(n," = ").concat(p.B,"; // GPIO").concat(p.B,"\nconst int ENC_BTN_PIN_").concat(n," = ").concat(p.BTN,"; // GPIO").concat(p.BTN,"\nvolatile int enc").concat(n,"_position = 0;\nint enc").concat(n,"_lastPosition = 0;\nbool enc").concat(n,"_buttonPressed = false;\nbool enc").concat(n,"_lastButtonState = false;\nvolatile float enc").concat(n,"_value = 0.0; // Normalized 0-1 value\n");case"GateOut":var d=e.params.index||1,f=this.pinMapper.getGateOutPin(d-1);return"\n// ".concat(t.label," ").concat(n," - Gate Out ").concat(d,"\nconst int GATE_PIN_").concat(n," = ").concat(f,"; // GPIO").concat(f," (PWM capable for CV)\nbool gate").concat(n,"_state = false;\n");case"MIDIIn":var m=e.params.channel||0;return"\n// ".concat(t.label," ").concat(n," - UART0 (TXD0/RXD0) with TLP2361 optocoupler\nHardwareSerial MIDISerial").concat(n,"(0); // UART0\nuint8_t midiin").concat(n,"_channel = ").concat(m,"; // 0 = omni, 1-16 = specific channel\nfloat midiin").concat(n,"_note = 0.0;      // 0-1 normalized (C3-C7 range, MIDI 48-96)\nfloat midiin").concat(n,"_velocity = 0.0;  // 0-1 normalized (0-127)\nbool midiin").concat(n,"_gate = false;     // Note on/off gate\nuint8_t midiin").concat(n,"_lastNote = 0;  // Track last note for note-off matching\nunsigned long midiin").concat(n,"_lastRx = 0; // Timestamp for LED feedback\n");case"MIDIOut":for(var _=e.params.channel||1,g=e.params.num_cc||1,h=e.params.cc_numbers||[1,2,3,4,5,6,7,8],v="",b=1;b<=g;b++){var y=h[b-1]||b;v+="const uint8_t midiout".concat(n,"_cc").concat(b,"_number = ").concat(y,"; // CC").concat(y,"\n")}return"\n// ".concat(t.label," ").concat(n," - UART1 (TXD1/RXD1) for MIDI output\nHardwareSerial MIDIOutSerial").concat(n,"(1); // UART1 (TX=GPIO43)\nuint8_t midiout").concat(n,"_channel = ").concat(_,"; // MIDI channel (1-16)\nconst uint8_t midiout").concat(n,"_num_cc = ").concat(g,"; // Number of active CC ports\n").concat(v,"\n// State tracking\nuint8_t midiout").concat(n,"_lastNote = 0;    // Last sent note (for note-off)\nbool midiout").concat(n,"_lastGate = false;   // Last gate state\nfloat midiout").concat(n,"_lastVelocity = 0.0; // Last velocity\nfloat midiout").concat(n,"_lastCC[8] = {0.0}; // Last CC values (for change detection)\nunsigned long midiout").concat(n,"_lastTx = 0; // Timestamp for LED feedback\n");default:return""}}},{key:"generateSetupCode",value:function(e,n){switch(e.type){case"Pot":return"\n    // Pot ".concat(n," setup\n    pinMode(POT_PIN_").concat(n,", INPUT);\n");case"LEDButton":return"\n    // LEDButton ".concat(n," setup (MCP23017 pins configured in base setup)\n");case"Encoder":return"\n    // Encoder ".concat(n," setup\n    pinMode(ENC_A_PIN_").concat(n,", INPUT_PULLUP);\n    pinMode(ENC_B_PIN_").concat(n,", INPUT_PULLUP);\n    pinMode(ENC_BTN_PIN_").concat(n,", INPUT_PULLUP);\n\n    // Attach interrupt for encoder\n    attachInterrupt(digitalPinToInterrupt(ENC_A_PIN_").concat(n,"), []() {\n        if (digitalRead(ENC_A_PIN_").concat(n,") != digitalRead(ENC_B_PIN_").concat(n,")) {\n            enc").concat(n,"_position++;\n        } else {\n            enc").concat(n,"_position--;\n        }\n    }, CHANGE);\n");case"GateOut":return"\n    // GateOut ".concat(n," setup\n    pinMode(GATE_PIN_").concat(n,", OUTPUT);\n    digitalWrite(GATE_PIN_").concat(n,", LOW);\n");case"GateIn":return"\n    // GateIn ".concat(n," setup (MCP23017 pin configured in base setup as INPUT_PULLUP)\n");case"MIDIIn":return"\n    // MIDIIn ".concat(n," setup - UART0 at 31250 baud (MIDI standard)\n    // NOTE: UART0 pins swapped in v1.0 schematic - RX is actually GPIO44, not GPIO43\n    MIDISerial").concat(n,'.begin(31250, SERIAL_8N1, 44, 43); // RX=GPIO44, TX=GPIO43\n    Serial.println("MIDI In ').concat(n,' initialized on UART0 (31250 baud, RX=GPIO44)");\n');case"MIDIOut":return"\n    // MIDIOut ".concat(n," setup - UART1 at 31250 baud (MIDI standard)\n    // TX=GPIO43 (v1.0 confirmed), RX not used for output-only\n    MIDIOutSerial").concat(n,'.begin(31250, SERIAL_8N1, -1, 43); // RX=-1 (not used), TX=GPIO43\n    Serial.println("MIDI Out ').concat(n,' initialized on UART1 (31250 baud, TX=GPIO43)");\n');default:return""}}},{key:"generateControlCode",value:function(e,n,t){switch(e.type){case"Pot":return this.generatePotCode(e,n);case"LEDButton":return this.generateButtonCode(e,n,t);case"Encoder":return this.generateEncoderCode(e,n);case"GateOut":return this.generateGateOutCode(e,n,t);case"GateIn":return this.generateGateInCode(e,n);case"MIDIIn":return this.generateMIDIInCode(e,n);case"MIDIOut":return this.generateMIDIOutCode(e,n,t);default:return""}}},{key:"generatePotCode",value:function(e,n){return"\n        // Pot ".concat(n," reading with jitter reduction\n        int rawValue = analogRead(POT_PIN_").concat(n,");\n        float newValue = rawValue / 4095.0; // Convert to 0-1 range (12-bit ADC)\n\n        // Deadband filtering: ignore tiny changes (< 0.005 = ~20 ADC counts)\n        float deadband = 0.005;\n        if (abs(newValue - pot").concat(n,"_smoothed) > deadband) {\n            // Apply smoothing to reduce noise\n            pot").concat(n,"_smoothed = (POT_SMOOTH_FACTOR_").concat(n," * newValue) +\n                                  ((1.0 - POT_SMOOTH_FACTOR_").concat(n,") * pot").concat(n,"_smoothed);\n        }\n        pot").concat(n,"_value = pot").concat(n,"_smoothed;\n")}},{key:"generateButtonCode",value:function(e,n,t){var a="btn".concat(n);if(this.declaredButtons.has(a))return"";this.declaredButtons.add(a);var o=t.some(function(n){return n.from.id.includes("".concat(e.id,":"))&&"pressed"===n.from.port});return"\n        // LEDButton ".concat(n," processing - hasLEDConnection: ").concat(o,"\n        {\n            // Read button state from MCP23017\n            bool buttonState = !mcp.digitalRead(BTN_PIN_").concat(n,"); // Active low\n            \n            // Debounce button\n            if (buttonState != btn").concat(n,"_lastState) {\n                btn").concat(n,"_lastDebounce = millis();\n            }\n            \n            if ((millis() - btn").concat(n,"_lastDebounce) > btn").concat(n,"_debounceDelay) {\n                if (buttonState != btn").concat(n,"_pressed) {\n                    btn").concat(n,"_pressed = buttonState;\n                    btn").concat(n,"_gate = buttonState;  // Raw gate signal always follows button state\n\n                    // Update LED state\n                    ").concat(o?"\n                    if (btn".concat(n,"_pressed) {\n                        btn").concat(n,"_ledState = !btn").concat(n,"_ledState;\n                        mcp.digitalWrite(LED_PIN_").concat(n,", btn").concat(n,"_ledState);\n                    }"):"\n                    mcp.digitalWrite(LED_PIN_".concat(n,", btn").concat(n,"_pressed);"),"\n                }\n            }\n            \n            btn").concat(n,"_lastState = buttonState;\n        }\n")}},{key:"generateEncoderCode",value:function(e,n){return"\n        // Encoder ".concat(n," processing\n        {\n            // Check for position changes\n            if (enc").concat(n,"_position != enc").concat(n,"_lastPosition) {\n                // Convert encoder position to normalized value\n                // Assuming +/- 100 encoder steps for full range\n                float normalizedPos = (enc").concat(n,"_position % 200) / 200.0;\n                if (normalizedPos < 0) normalizedPos += 1.0;\n                enc").concat(n,"_value = normalizedPos;\n                \n                enc").concat(n,"_lastPosition = enc").concat(n,"_position;\n            }\n            \n            // Read button state\n            bool buttonState = !digitalRead(ENC_BTN_PIN_").concat(n,"); // Active low\n            if (buttonState != enc").concat(n,"_lastButtonState) {\n                enc").concat(n,"_buttonPressed = buttonState;\n                enc").concat(n,"_lastButtonState = buttonState;\n            }\n        }\n")}},{key:"generateGateOutCode",value:function(e,n,t){var a=t.find(function(n){return n.to.id.includes("".concat(e.id,":"))&&"in"===n.to.port}),o="false";if(a){var r=a.from.id.split(":")[0],i=this.connectionResolver.modules.find(function(e){return e.id===r});if(i){var c,l=(null===(c=r.match(/\d+$/))||void 0===c?void 0:c[0])||"1";switch(i.type){case"Clock":o="clock".concat(l,"_output");break;case"LEDButton":o="btn".concat(l,"_pressed");break;case"ADSR":o="(adsr".concat(l,"_output > 0.1)")}}}return e.params.pin,"\n        // GateOut ".concat(n," processing\n        {\n            bool gateSignal = ").concat(o,";\n\n            if (gateSignal != gate").concat(n,"_state) {\n                gate").concat(n,"_state = gateSignal;\n                digitalWrite(GATE_PIN_").concat(n,", gateSignal ? HIGH : LOW);\n            }\n\n            // Update LED state for visual feedback\n            // GPIO10 (Gate 3) → led_gateout1_active\n            // GPIO11 (Gate 4) → led_gateout2_active\n            if (GATE_PIN_").concat(n," == 10) {\n                led_gateout1_active = gate").concat(n,"_state;\n            } else if (GATE_PIN_").concat(n," == 11) {\n                led_gateout2_active = gate").concat(n,"_state;\n            }\n        }\n")}},{key:"generateGateInCode",value:function(e,n){var t=e.params.trigger_hold_ms||30;return"\n        // GateIn ".concat(n," processing (LTV816 optoisolator input)\n        {\n            // Extract pin state from batch read (bit GATEIN_PIN_").concat(n," of inputs)\n            bool rawPin = (inputs & (1 << GATEIN_PIN_").concat(n,")) != 0;\n            bool gateInput = !rawPin;  // Active low from optoisolator\n\n            // Rising edge detection (immediate, no debounce - piezo pulses are brief!)\n            if (gateInput && !gatein").concat(n,"_lastState) {\n                gatein").concat(n,"_state = true;\n\n                // LATCH trigger for ").concat(t,"ms so control sampling (10ms rate) can catch it\n                if (strcmp(gatein").concat(n,'_mode, "trigger") == 0) {\n                    gatein').concat(n,"_trigger = true;\n                    gatein").concat(n,"_trigHoldUntil = millis() + ").concat(t,";\n                }\n            }\n            // Falling edge detection\n            else if (!gateInput && gatein").concat(n,"_lastState) {\n                gatein").concat(n,"_state = false;\n            }\n\n            // Auto-clear trigger after hold time\n            if (gatein").concat(n,"_trigger && millis() > gatein").concat(n,"_trigHoldUntil) {\n                gatein").concat(n,"_trigger = false;\n            }\n\n            gatein").concat(n,"_lastState = gateInput;\n\n            // Update LED state for visual feedback\n            // GPA4 (pin 4) = Gate In 1 → led_gatein1_active\n            // GPA5 (pin 5) = Gate In 2 → led_gatein2_active\n            if (GATEIN_PIN_").concat(n," == 4) {\n                led_gatein1_active = gatein").concat(n,"_state;\n            } else if (GATEIN_PIN_").concat(n," == 5) {\n                led_gatein2_active = gatein").concat(n,"_state;\n            }\n        }\n")}},{key:"generateMIDIInCode",value:function(e,n){return e.params.channel,"\n        // MIDIIn ".concat(n," processing - Parse MIDI messages (31250 baud)\n        {\n            while (MIDISerial").concat(n,".available() >= 3) {\n                uint8_t status = MIDISerial").concat(n,".read();\n\n                // Flash LED on any MIDI receive\n                midiin").concat(n,"_lastRx = millis();\n                led_midiin_active = true;\n\n                // Parse Note On/Off messages (0x80-0x9F)\n                if ((status & 0xF0) == 0x90 || (status & 0xF0) == 0x80) {\n                    uint8_t rxChannel = (status & 0x0F) + 1; // Extract channel (1-16)\n                    uint8_t note = MIDISerial").concat(n,".read();\n                    uint8_t velocity = MIDISerial").concat(n,".read();\n\n                    // Check channel filter (0 = omni)\n                    if (midiin").concat(n,"_channel == 0 || midiin").concat(n,"_channel == rxChannel) {\n                        bool isNoteOn = ((status & 0xF0) == 0x90) && (velocity > 0);\n\n                        if (isNoteOn) {\n                            // Note On: Update pitch and velocity\n                            midiin").concat(n,"_lastNote = note;\n                            midiin").concat(n,"_gate = true;\n\n                            // Normalize note to 0-1 (C3-C7 = MIDI 48-96)\n                            float normalizedNote = (note - 48.0) / 48.0;\n                            midiin").concat(n,"_note = constrain(normalizedNote, 0.0, 1.0);\n\n                            // Normalize velocity to 0-1\n                            midiin").concat(n,"_velocity = velocity / 127.0;\n                        } else {\n                            // Note Off: Clear gate only if it matches last note\n                            if (note == midiin").concat(n,"_lastNote) {\n                                midiin").concat(n,"_gate = false;\n                            }\n                        }\n                    }\n                } else {\n                    // Unknown message: drain 2 data bytes to stay in sync\n                    if (MIDISerial").concat(n,".available() >= 2) {\n                        MIDISerial").concat(n,".read();\n                        MIDISerial").concat(n,".read();\n                    }\n                }\n            }\n\n            // Auto-clear LED after 50ms\n            if (led_midiin_active && (millis() - midiin").concat(n,"_lastRx > 50)) {\n                led_midiin_active = false;\n            }\n        }\n")}},{key:"generateMIDIOutCode",value:function(e,n,t){for(var a=this,o=e.params.num_cc||1,r=function(n){var o,r=t.find(function(t){return t.to.id.includes("".concat(e.id,":"))&&t.to.port===n});if(!r)return null;var i=r.from.id.split(":")[0],c=r.from.port,l=a.connectionResolver.modules.find(function(e){return e.id===i});if(!l)return null;var s=(null===(o=i.match(/\d+$/))||void 0===o?void 0:o[0])||"1";switch(l.type){case"MIDIIn":if("note"===c)return"midiin".concat(s,"_note");if("gate"===c)return"midiin".concat(s,"_gate");if("velocity"===c)return"midiin".concat(s,"_velocity");break;case"Pot":return"pot".concat(s,"_value");case"ADSR":return"adsr".concat(s,"_output");case"LFO":return"lfo".concat(s,"_output");case"Scale":return"scale".concat(s,"_output");default:return null}return null},i=r("note")||"0.0",c=r("gate")||"false",l=r("velocity")||"0.8",s="",u=1;u<=o;u++){var p=r("cc_".concat(u))||"0.0";s+="\n            // Read CC ".concat(u," input\n            float cc").concat(u,"_value = ").concat(p,";\n            uint8_t cc").concat(u,"_midi = constrain((int)(cc").concat(u,"_value * 127.0), 0, 127);\n\n            // Send CC if value changed (threshold: 1/127 = ~0.008)\n            if (abs(cc").concat(u,"_value - midiout").concat(n,"_lastCC[").concat(u-1,"]) > 0.008) {\n                midiout").concat(n,"_lastCC[").concat(u-1,"] = cc").concat(u,"_value;\n                // MIDI CC message: 0xB0 + channel, CC number, value\n                uint8_t ccMsg[3] = {\n                    (uint8_t)(0xB0 | (midiout").concat(n,"_channel - 1)),\n                    midiout").concat(n,"_cc").concat(u,"_number,\n                    cc").concat(u,"_midi\n                };\n                MIDIOutSerial").concat(n,".write(ccMsg, 3);\n                midiout").concat(n,"_lastTx = millis();\n                led_midiout_active = true;\n            }\n")}return"\n        // MIDIOut ".concat(n," processing - Send MIDI messages (31250 baud)\n        {\n            // Read note, gate, velocity inputs\n            float noteCV = ").concat(i,"; // 0-1 CV (C3-C7 = MIDI 48-96)\n            bool gateSignal = ").concat(c,";\n            float velocityCV = ").concat(l,"; // 0-1 velocity\n\n            // Convert note CV to MIDI note number (C3-C7 range)\n            uint8_t midiNote = constrain(48 + (int)(noteCV * 48.0), 0, 127);\n            uint8_t midiVelocity = constrain((int)(velocityCV * 127.0), 1, 127);\n\n            // Gate rising edge: Send Note On\n            if (gateSignal && !midiout").concat(n,"_lastGate) {\n                midiout").concat(n,"_lastNote = midiNote;\n                midiout").concat(n,"_lastVelocity = velocityCV;\n\n                // MIDI Note On: 0x90 + channel, note, velocity\n                uint8_t noteOnMsg[3] = {\n                    (uint8_t)(0x90 | (midiout").concat(n,"_channel - 1)),\n                    midiNote,\n                    midiVelocity\n                };\n                MIDIOutSerial").concat(n,".write(noteOnMsg, 3);\n                midiout").concat(n,"_lastTx = millis();\n                led_midiout_active = true;\n            }\n            // Gate falling edge: Send Note Off\n            else if (!gateSignal && midiout").concat(n,"_lastGate) {\n                // MIDI Note Off: 0x80 + channel, note, 0\n                uint8_t noteOffMsg[3] = {\n                    (uint8_t)(0x80 | (midiout").concat(n,"_channel - 1)),\n                    midiout").concat(n,"_lastNote,\n                    0\n                };\n                MIDIOutSerial").concat(n,".write(noteOffMsg, 3);\n                midiout").concat(n,"_lastTx = millis();\n                led_midiout_active = true;\n            }\n\n            midiout").concat(n,"_lastGate = gateSignal;\n            ").concat(s,"\n            // Auto-clear LED after 50ms\n            if (led_midiout_active && (millis() - midiout").concat(n,"_lastTx > 50)) {\n                led_midiout_active = false;\n            }\n        }\n")}},{key:"generateProcessingCode",value:function(e,n,t){return this.generateControlCode(e,n,t)}}])&&_e(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function ve(e){return ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ve(e)}function be(e){return function(e){if(Array.isArray(e))return ke(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||ye(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ye(e,n){if(e){if("string"==typeof e)return ke(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ke(e,n):void 0}}function ke(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}function Se(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function xe(e,n,t){return(n=we(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Ee(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,we(a.key),a)}}function we(e){var n=function(e){if("object"!=ve(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ve(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ve(n)?n:n+""}var Pe=function(){return e=function e(n,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.modules=n,this.connections=this.resolveGroupConnections(t,a),this.groups=a,this.audioChain=[],this.controlChain=[],this.includes=new Set,this.globalVariables=[],this.moduleClasses=[],this.setupCode=[],this.loopCode=[],this.potConnectionCode=[],this.controlConnectionCode=[],this.declaredPots=new Set,this.declaredButtons=new Set,this.updateAudioCode=[],this.modularInstances=new Map,this.connectionResolver=new j(n,this.connections),this.pinMapper=Y,this.baseTemplate=J,this.audioModules=new re(this.connectionResolver),this.sampleModules=new se(this.connectionResolver),this.controlModules=new fe(this.connectionResolver),this.hardwareModules=new he(this.connectionResolver)},n=[{key:"resolveGroupConnections",value:function(e,n){return n&&0!==n.length?e.map(function(e){var t=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Se(Object(t),!0).forEach(function(n){xe(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Se(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}({},e),a=e.from.id.split(":")[0],o=n.find(function(e){return e.id===a});if(o){var r,i=e.from.id,c=e.from.port,l=null===(r=o.outputPorts)||void 0===r?void 0:r.find(function(e){return"".concat(o.id,":out_").concat(e.sourcePort)===i||c==="out_".concat(e.port)});l&&(t.from={id:"".concat(l.sourceModuleId,":").concat(l.sourcePort),port:l.sourcePort,kind:e.from.kind})}var s=e.to.id.split(":")[0],u=n.find(function(e){return e.id===s});if(u){var p,d=e.to.id,f=e.to.port,m=null===(p=u.inputPorts)||void 0===p?void 0:p.find(function(e){return"".concat(u.id,":in_").concat(e.targetPort)===d||f==="in_".concat(e.port)});m&&(t.to={id:"".concat(m.targetModuleId,":").concat(m.targetPort),port:m.targetPort,kind:e.to.kind})}return t}):e}},{key:"getPotReference",value:function(e){var n=this.modules.find(function(n){return n.id===e});if(n&&"Pot"===n.type){var t=n.params.index||1;return n.params.bank,"pot".concat(t)}return console.warn("getPotReference called with non-Pot module: ".concat(e)),null}},{key:"generateBankAwareAssignment",value:function(e,n){var t=this.modules.find(function(n){return n.id===e});if(!t||"Pot"!==t.type)return"        // WARNING: Invalid pot reference for ".concat(e);var a=t.params.bank||1;return t.params.locked?"        ".concat(n," // Pot").concat(t.params.index," (LOCKED across all banks)"):"        if (currentBank == ".concat(a,") { ").concat(n," } // Pot").concat(t.params.index," Bank ").concat(a)}},{key:"generateBankAwareButtonAssignment",value:function(e,n){var t=this.modules.find(function(n){return n.id===e});if(!t||"LEDButton"!==t.type)return"        // WARNING: Invalid button reference for ".concat(e);var a=t.params.bank||1;return t.params.locked?"        ".concat(n," // Button").concat(t.params.index," (LOCKED)"):"        if (currentBank == ".concat(a,") { ").concat(n," } // Button").concat(t.params.index," Bank ").concat(a)}},{key:"getButtonReference",value:function(e){var n,t=this.modules.find(function(n){return n.id===e});if(t&&"LEDButton"===t.type){var a=t.params&&t.params.index?t.params.index:1;return"btn".concat(a)}var o=(null===(n=e.match(/\d+$/))||void 0===n?void 0:n[0])||"1";return"btn".concat(o)}},{key:"getWaveTypeIndex",value:function(e){switch(e.toLowerCase()){case"sine":default:return 0;case"sawtooth":case"saw":return 1;case"square":return 2;case"triangle":case"tri":return 3}}},{key:"generate",value:function(){return console.log("Starting code generation..."),console.log("Modules:",this.modules),console.log("Connections:",this.connections),this.analyzeModules(),this.resolveAudioChain(),this.resolveControlChain(),this.generateIncludes(),this.generateModuleClasses(),this.generateVariables(),this.generateGlobalFunctions(),this.generateSetup(),this.generateLoop(),console.log("Audio chain:",this.audioChain),console.log("Control chain:",this.controlChain),console.log("Hardware modules:",this.hardwareModules),this.assembleCode()}},{key:"analyzeModules",value:function(){}},{key:"generateModuleClasses",value:function(){var e=this,n={Looper:F};this.modules.filter(function(e){return n[e.type]}).forEach(function(t,a){var o=n[t.type];if(o&&o.generateClass){var r=o.generateClass(t.id||a,t.params||{});e.moduleClasses.push(r);var i=(t.id||"".concat(t.type).concat(a)).toLowerCase();if(e.moduleClasses.push("\n// Instance of ".concat(t.type," module\nLooper_").concat(t.id||a," ").concat(i,";\nfloat ").concat(i,"_inputL = 0.0f;\nfloat ").concat(i,"_inputR = 0.0f;\n")),e.modularInstances.set(t.id||"".concat(t.type).concat(a),{instanceName:i,moduleId:t.id||a,type:t.type,originalIndex:a}),o.generateIncludes){var c=o.generateIncludes();c&&e.includes.add(c)}console.log("Generated class and instance for ".concat(t.type," module"))}})}},{key:"resolveAudioChain",value:function(){this.audioChain=this.connectionResolver.resolveAudioChain();var e=new Set;this.audioChain=this.audioChain.filter(function(n){return e.has(n.id)?(console.warn("Removing duplicate ".concat(n.type," ").concat(n.id," from audioChain")),!1):(e.add(n.id),!0)})}},{key:"resolveControlChain",value:function(){var e=this.modules.filter(function(e){return["ADSR","Scale","LFO","Clock","HarmonicSequencer","Automation"].includes(e.type)});this.controlChain=this.topologicalSortControl(e)}},{key:"topologicalSortControl",value:function(e){var n=this,t=[],a=new Set,o=new Set,r=function(i){o.has(i.id)?console.warn("Circular dependency detected in control modules"):a.has(i.id)||(o.add(i.id),n.connections.filter(function(e){return e.to&&"string"==typeof e.to?e.to===i.id:!(!e.to||!e.to.id)&&e.to.id.startsWith(i.id+":")}).map(function(e){return e.from&&"string"==typeof e.from?e.from:e.from&&e.from.id?e.from.id.split(":")[0]:null}).map(function(n){return e.find(function(e){return e.id===n})}).filter(Boolean).forEach(function(e){return r(e)}),o.delete(i.id),a.add(i.id),t.push(i))};return e.forEach(function(e){return r(e)}),t}},{key:"generateIncludes",value:function(){var e=this;this.baseTemplate.generateIncludes().forEach(function(n){e.includes.add(n)}),this.modules.forEach(function(n){switch(e.audioModules.generateIncludes(n.type).forEach(function(n){return e.includes.add(n)}),e.controlModules.generateIncludes(n.type).forEach(function(n){return e.includes.add(n)}),n.type){case"Filter":case"GranularSynth":case"GranularPSRAM":case"GranularDense":e.includes.add("#include <math.h>");break;case"Looper":e.includes.add("#include <cstring>");break;case"AdvancedLooper":e.includes.add("#include <SPIFFS.h>"),e.includes.add("#include <SD.h>"),e.includes.add("#include <esp_heap_caps.h>"),e.includes.add('#include "driver/i2s.h"'),e.includes.add("#include <cstring>");break;case"MIDIIn":case"MIDIOut":e.includes.add("#include <MIDI.h>");break;case"SDPlayer":case"SamplePlayer":case"KickDrum":case"SnareDrum":e.includes.add("#include <SD.h>"),e.includes.add("#include <FS.h>"),e.includes.add("#include <SPI.h>")}})}},{key:"generateVariables",value:function(){var e=this;this.globalVariables.push("\n// I2S Configuration for PCM5102A DAC\nstatic const int I2S_BCLK = ".concat(N.I2S_BCLK,";\nstatic const int I2S_LRCK = ").concat(N.I2S_LRCK,";\nstatic const int I2S_DATA = ").concat(N.I2S_DATA,";\nstatic const int SAMPLE_RATE = ").concat(N.SAMPLE_RATE,";\nstatic const int BUFFER_SIZE = ").concat(N.BUFFER_SIZE,";\n        ")),this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})&&this.globalVariables.push('\n// WAV File Structure (only included when Sample Player modules are present)\nstruct WAVHeader {\n    char riff[4];           // "RIFF"\n    uint32_t fileSize;      // File size - 8\n    char wave[4];           // "WAVE"\n    char fmt[4];            // "fmt "\n    uint32_t fmtSize;       // Format chunk size\n    uint16_t audioFormat;   // Audio format (1 = PCM)\n    uint16_t numChannels;   // Number of channels\n    uint32_t sampleRate;    // Sample rate\n    uint32_t byteRate;      // Byte rate\n    uint16_t blockAlign;    // Block align\n    uint16_t bitsPerSample; // Bits per sample\n    char data[4];           // "data"\n    uint32_t dataSize;      // Data size\n};\n\n// Double Buffer WAV Player Class - Eliminates audio gaps and stuttering\n#define CHUNK_SIZE (16 * 1024)  // 16KB chunks - sector aligned, ~0.09 seconds\n\n// Polyphonic Sample Player with PSRAM caching (2MB optimized)\n#define MAX_VOICES 8                    // Maximum possible voices (will be limited per module)\n#define VOICE_CACHE_SIZE 1024           // 1024 samples per voice cache (internal RAM)\n#define AUDIO_BLOCK_SIZE 256            // Audio processing block size\n#define MAX_PSRAM_SAMPLES (1536 * 1024) // 1.5MB for sample storage\n#define SAMPLE_POOL_SIZE 32             // Maximum 32 different samples loaded\n\n// Ring buffer for credit-based file transfers\n#define RING_BUFFER_SIZE 262144         // 256KB ring buffer in PSRAM\n\nstruct Voice {\n    // PSRAM sample reference\n    int16_t* psramData;              // Pointer to PSRAM sample data\n    uint32_t totalFrames;            // Total frames in this sample (mono or stereo pairs)\n    uint32_t startFrame;             // Start position (0.0-1.0 * totalFrames)\n    uint32_t endFrame;               // End position (0.0-1.0 * totalFrames)\n    uint8_t channels;                // 1=mono, 2=stereo\n    \n    // Playback state (16.16 fixed point for smooth pitch control)\n    uint32_t phase;                  // Current playback position (16.16 fixed point)\n    uint32_t phaseInc;               // Phase increment per sample (pitch * 65536)\n    bool active;                     // Voice is currently playing\n    bool gateOn;                     // Gate signal is high\n    \n    // Hot cache in internal RAM (never blocks PSRAM)\n    alignas(32) int16_t cache[VOICE_CACHE_SIZE]; // 32-byte aligned for DMA efficiency\n    uint32_t cacheBase;              // Which part of sample is cached (frame number)\n    uint32_t cacheFrames;            // How many frames are valid in cache\n    bool cacheValid;                 // Cache contains valid data\n    \n    // Mixing parameters\n    int32_t gainL;                   // Left gain (Q15 format: 0-32767)\n    int32_t gainR;                   // Right gain (Q15 format: 0-32767)\n    \n    // Envelope for click-free triggering\n    uint32_t envPhase;               // Envelope phase (16.16 fixed point)\n    uint32_t envInc;                 // Envelope increment (attack/release speed)\n    bool envAttack;                  // true=attack, false=release\n    \n    // Constructor\n    Voice() : psramData(nullptr), totalFrames(0), startFrame(0), endFrame(0), channels(2),\n              phase(0), phaseInc(65536), active(false), gateOn(false),\n              cacheBase(0), cacheFrames(0), cacheValid(false),\n              gainL(32767), gainR(32767), envPhase(0), envInc(0), envAttack(false) {\n        memset(cache, 0, sizeof(cache));\n    }\n};\n\nstruct SampleEntry {\n    int16_t* psramData;              // PSRAM allocation for this sample\n    uint32_t totalFrames;            // Total frames in sample\n    uint8_t channels;                // 1=mono, 2=stereo\n    String filename;                 // Original filename for reference\n    uint32_t sizeBytes;              // Size in bytes (for memory management)\n    bool loaded;                     // Successfully loaded into PSRAM\n    \n    SampleEntry() : psramData(nullptr), totalFrames(0), channels(2), \n                    sizeBytes(0), loaded(false) {}\n};\n\nclass PolyphonicSamplePlayer {\nprivate:\n    Voice voices[MAX_VOICES];\n    SampleEntry samplePool[SAMPLE_POOL_SIZE];\n    uint32_t usedPSRAM;              // Track PSRAM usage\n    int activeVoiceCount;            // Configurable voice limit (1-8)\n    \n    // Mix buffers in internal RAM (never PSRAM - for I2S DMA)\n    alignas(32) int32_t mixBufferL[AUDIO_BLOCK_SIZE];\n    alignas(32) int32_t mixBufferR[AUDIO_BLOCK_SIZE];\n    alignas(32) int16_t outputBuffer[AUDIO_BLOCK_SIZE * 2]; // Interleaved L/R\n    \n    // Voice allocation\n    int findFreeVoice() {\n        for (int i = 0; i < activeVoiceCount; i++) {\n            if (!voices[i].active) return i;\n        }\n        // Steal oldest voice (voice 0 is oldest)\n        return 0;\n    }\n    \n    // Ensure voice cache contains the data needed for next block\n    void ensureVoiceCache(Voice& v) {\n        if (!v.active || !v.psramData) return;\n        \n        uint32_t neededStart = v.phase >> 16;  // Current frame position\n        uint32_t neededEnd = neededStart + (AUDIO_BLOCK_SIZE * 2); // Worst case: 2x pitch up\n        \n        // Check if cache already contains needed data\n        if (v.cacheValid && neededStart >= v.cacheBase && \n            neededEnd < (v.cacheBase + v.cacheFrames)) {\n            return; // Cache hit - no reload needed\n        }\n        \n        // Cache miss - reload from PSRAM\n        uint32_t cacheStart = neededStart;\n        uint32_t cacheDuration = VOICE_CACHE_SIZE / v.channels;\n        \n        // Handle loop wrapping\n        if (v.endFrame > v.startFrame) {\n            uint32_t loopLength = v.endFrame - v.startFrame;\n            if (cacheStart >= v.endFrame) {\n                cacheStart = v.startFrame + ((cacheStart - v.startFrame) % loopLength);\n            }\n            \n            // Don\'t cache beyond end position\n            uint32_t maxEnd = min(cacheStart + cacheDuration, v.endFrame);\n            cacheDuration = maxEnd - cacheStart;\n        }\n        \n        // Clamp to sample bounds\n        cacheStart = min(cacheStart, v.totalFrames);\n        cacheDuration = min(cacheDuration, v.totalFrames - cacheStart);\n        cacheDuration = min(cacheDuration, (uint32_t)VOICE_CACHE_SIZE / v.channels);\n        \n        // Copy from PSRAM to cache (this is the only PSRAM read per voice per block)\n        if (cacheDuration > 0) {\n            uint32_t samplesToCopy = cacheDuration * v.channels;\n            memcpy(v.cache, v.psramData + (cacheStart * v.channels), \n                   samplesToCopy * sizeof(int16_t));\n            \n            v.cacheBase = cacheStart;\n            v.cacheFrames = cacheDuration;\n            v.cacheValid = true;\n        }\n    }\n    \n    // Linear interpolation for smooth pitch control\n    inline int16_t lerp16(const int16_t* buf, uint32_t frac16, uint32_t i0, uint32_t maxSamples) {\n        if (i0 + 1 >= maxSamples) return buf[i0];\n        \n        int32_t a = buf[i0];\n        int32_t b = buf[i0 + 1];\n        int32_t t = frac16 & 0xFFFF;  // 0..65535\n        return (int16_t)((a * (65536 - t) + b * t) >> 16);\n    }\n    \npublic:\n    PolyphonicSamplePlayer() : usedPSRAM(0), activeVoiceCount(6) {\n        // Initialize sample pool\n        for (int i = 0; i < SAMPLE_POOL_SIZE; i++) {\n            samplePool[i] = SampleEntry();\n        }\n        \n        // Clear mix buffers\n        memset(mixBufferL, 0, sizeof(mixBufferL));\n        memset(mixBufferR, 0, sizeof(mixBufferR));\n        memset(outputBuffer, 0, sizeof(outputBuffer));\n    }\n    \n    // Set maximum concurrent voices (1-8)\n    void setVoiceCount(int voiceCount) {\n        activeVoiceCount = constrain(voiceCount, 1, MAX_VOICES);\n        Serial.printf("Voice count set to: %d\\n", activeVoiceCount);\n    }\n    \n    int getVoiceCount() const { return activeVoiceCount; }\n    \n    // Load sample into PSRAM pool\n    bool loadSample(int sampleIndex, const String& filename) {\n        if (sampleIndex < 0 || sampleIndex >= SAMPLE_POOL_SIZE) return false;\n        \n        SampleEntry& entry = samplePool[sampleIndex];\n        \n        // Free existing sample if present\n        if (entry.loaded && entry.psramData) {\n            heap_caps_free(entry.psramData);\n            usedPSRAM -= entry.sizeBytes;\n            entry.loaded = false;\n        }\n        \n        // Open WAV file\n        File wavFile = SD.open(filename);\n        if (!wavFile) return false;\n        \n        // Read WAV header\n        WAVHeader header;\n        if (wavFile.read((uint8_t*)&header, sizeof(header)) != sizeof(header)) {\n            wavFile.close();\n            return false;\n        }\n        \n        // Validate WAV format\n        if (strncmp(header.riff, "RIFF", 4) != 0 || \n            strncmp(header.wave, "WAVE", 4) != 0 ||\n            header.audioFormat != 1 || \n            header.bitsPerSample != 16) {\n            wavFile.close();\n            return false;\n        }\n        \n        // Calculate sample size\n        uint32_t totalSamples = header.dataSize / sizeof(int16_t);\n        uint32_t totalFrames = totalSamples / header.numChannels;\n        uint32_t sizeBytes = header.dataSize;\n        \n        // Check PSRAM budget\n        if (usedPSRAM + sizeBytes > MAX_PSRAM_SAMPLES * sizeof(int16_t)) {\n            wavFile.close();\n            return false; // Not enough PSRAM\n        }\n        \n        // Allocate PSRAM\n        int16_t* psramBuffer = (int16_t*)heap_caps_malloc(sizeBytes, MALLOC_CAP_SPIRAM);\n        if (!psramBuffer) {\n            wavFile.close();\n            return false;\n        }\n        \n        // Load entire sample into PSRAM\n        size_t bytesRead = wavFile.read((uint8_t*)psramBuffer, sizeBytes);\n        wavFile.close();\n        \n        if (bytesRead != sizeBytes) {\n            heap_caps_free(psramBuffer);\n            return false;\n        }\n        \n        // Update sample entry\n        entry.psramData = psramBuffer;\n        entry.totalFrames = totalFrames;\n        entry.channels = header.numChannels;\n        entry.filename = filename;\n        entry.sizeBytes = sizeBytes;\n        entry.loaded = true;\n        usedPSRAM += sizeBytes;\n        \n        return true;\n    }\n    \n    // Trigger voice with sample\n    void triggerVoice(int sampleIndex, float pitch = 1.0f, float startPos = 0.0f, \n                     float endPos = 1.0f, float gainL = 1.0f, float gainR = 1.0f) {\n        if (sampleIndex < 0 || sampleIndex >= SAMPLE_POOL_SIZE) return;\n        if (!samplePool[sampleIndex].loaded) return;\n        \n        int voiceIndex = findFreeVoice();\n        Voice& v = voices[voiceIndex];\n        SampleEntry& sample = samplePool[sampleIndex];\n        \n        // Set up voice parameters\n        v.psramData = sample.psramData;\n        v.totalFrames = sample.totalFrames;\n        v.channels = sample.channels;\n        v.startFrame = (uint32_t)(startPos * sample.totalFrames);\n        v.endFrame = (uint32_t)(endPos * sample.totalFrames);\n        if (v.endFrame <= v.startFrame) v.endFrame = sample.totalFrames;\n        \n        // Set playback parameters\n        v.phase = v.startFrame << 16; // Start at begin position\n        v.phaseInc = (uint32_t)(pitch * 65536.0f); // Fixed point pitch\n        v.gainL = (int32_t)(gainL * 32767.0f);\n        v.gainR = (int32_t)(gainR * 32767.0f);\n        \n        // Initialize envelope for click-free start\n        v.envPhase = 0;\n        v.envInc = 65536 / 64; // 64-sample attack\n        v.envAttack = true;\n        \n        // Mark voice as active\n        v.active = true;\n        v.gateOn = true;\n        v.cacheValid = false; // Force cache reload\n    }\n    \n    // Release voice (envelope-based)\n    void releaseVoice(int voiceIndex) {\n        if (voiceIndex < 0 || voiceIndex >= MAX_VOICES) return;\n        \n        Voice& v = voices[voiceIndex];\n        if (v.active) {\n            v.gateOn = false;\n            v.envAttack = false;\n            v.envInc = 65536 / 128; // 128-sample release\n        }\n    }\n    \n    // Release all active voices (for button release behavior)\n    void releaseAllVoices() {\n        for (int i = 0; i < activeVoiceCount; i++) {\n            if (voices[i].active && voices[i].gateOn) {\n                voices[i].gateOn = false;\n                voices[i].envAttack = false; \n                voices[i].envInc = 65536 / 128; // 128-sample release\n            }\n        }\n    }\n    \n    // Get number of active voices\n    int getActiveVoices() {\n        int count = 0;\n        for (int i = 0; i < activeVoiceCount; i++) {\n            if (voices[i].active) count++;\n        }\n        return count;\n    }\n    \n    // Check if voice is active\n    bool isVoiceActive(int voiceIndex) {\n        if (voiceIndex < 0 || voiceIndex >= activeVoiceCount) return false;\n        return voices[voiceIndex].active;\n    }\n    \n    // Sustain voice (prevent auto-release)\n    void sustainVoice(int voiceIndex) {\n        if (voiceIndex < 0 || voiceIndex >= activeVoiceCount) return;\n        Voice& v = voices[voiceIndex];\n        if (v.active) {\n            v.gateOn = true;  // Keep gate on\n            if (!v.envAttack && v.envPhase < 65536) {\n                v.envAttack = true; // Resume attack if needed\n            }\n        }\n    }\n    \n    // Render audio block (main audio processing)\n    void renderBlock() {\n        // Clear mix buffers\n        memset(mixBufferL, 0, sizeof(mixBufferL));\n        memset(mixBufferR, 0, sizeof(mixBufferR));\n        \n        // Process each active voice\n        for (int v = 0; v < activeVoiceCount; v++) {\n            Voice& voice = voices[v];\n            if (!voice.active) continue;\n            \n            // Ensure cache contains needed data (only PSRAM access per voice)\n            ensureVoiceCache(voice);\n            \n            // Render voice into mix buffer\n            for (int n = 0; n < AUDIO_BLOCK_SIZE; n++) {\n                // Update envelope\n                if (voice.envAttack) {\n                    voice.envPhase += voice.envInc;\n                    if (voice.envPhase >= 65536) {\n                        voice.envPhase = 65536;\n                        voice.envAttack = false;\n                    }\n                } else if (!voice.gateOn) {\n                    if (voice.envPhase > voice.envInc) {\n                        voice.envPhase -= voice.envInc;\n                    } else {\n                        voice.envPhase = 0;\n                        voice.active = false; // Voice finished\n                        break;\n                    }\n                }\n                \n                // Get current frame position\n                uint32_t currentFrame = voice.phase >> 16;\n                \n                // Check loop bounds\n                if (currentFrame >= voice.endFrame) {\n                    if (voice.gateOn) {\n                        // Loop back to start\n                        uint32_t loopLength = voice.endFrame - voice.startFrame;\n                        if (loopLength > 0) {\n                            currentFrame = voice.startFrame + ((currentFrame - voice.startFrame) % loopLength);\n                            voice.phase = (currentFrame << 16) | (voice.phase & 0xFFFF);\n                        }\n                    } else {\n                        // Stop voice if gate is off\n                        voice.active = false;\n                        break;\n                    }\n                }\n                \n                // Read from cache with interpolation\n                if (voice.cacheValid && currentFrame >= voice.cacheBase && \n                    currentFrame < voice.cacheBase + voice.cacheFrames) {\n                    \n                    uint32_t cacheIndex = (currentFrame - voice.cacheBase) * voice.channels;\n                    uint32_t maxCacheSamples = voice.cacheFrames * voice.channels;\n                    \n                    int16_t sampleL, sampleR;\n                    \n                    if (voice.channels == 2) {\n                        // Stereo\n                        sampleL = lerp16(voice.cache, voice.phase, cacheIndex, maxCacheSamples);\n                        sampleR = lerp16(voice.cache, voice.phase, cacheIndex + 1, maxCacheSamples);\n                    } else {\n                        // Mono to stereo\n                        sampleL = sampleR = lerp16(voice.cache, voice.phase, cacheIndex, maxCacheSamples);\n                    }\n                    \n                    // Apply envelope and gain, mix into buffer\n                    int32_t env = voice.envPhase;\n                    int32_t mixL = (sampleL * voice.gainL * env) >> 12; // >> 12 for balanced headroom\n                    int32_t mixR = (sampleR * voice.gainR * env) >> 12;\n                    \n                    mixBufferL[n] += mixL;\n                    mixBufferR[n] += mixR;\n                }\n                \n                // Advance phase\n                voice.phase += voice.phaseInc;\n            }\n        }\n        \n        // Convert to output format with saturation\n        for (int n = 0; n < AUDIO_BLOCK_SIZE; n++) {\n            int32_t L = mixBufferL[n];\n            int32_t R = mixBufferR[n];\n            \n            // Saturate to 16-bit range\n            if (L > 32767) L = 32767;\n            else if (L < -32768) L = -32768;\n            if (R > 32767) R = 32767;\n            else if (R < -32768) R = -32768;\n            \n            outputBuffer[n * 2] = (int16_t)L;\n            outputBuffer[n * 2 + 1] = (int16_t)R;\n        }\n    }\n    \n    // Get next stereo sample (for compatibility with existing code)\n    void getStereoSample(float& left, float& right) {\n        static int blockIndex = 0;\n        static bool blockReady = false;\n        \n        // Render new block when needed\n        if (!blockReady || blockIndex >= AUDIO_BLOCK_SIZE) {\n            renderBlock();\n            blockIndex = 0;\n            blockReady = true;\n        }\n        \n        // Return current sample from block\n        left = outputBuffer[blockIndex * 2] / 32767.0f;\n        right = outputBuffer[blockIndex * 2 + 1] / 32767.0f;\n        blockIndex++;\n    }\n    \n    // Memory usage info\n    uint32_t getPSRAMUsage() const { return usedPSRAM; }\n    uint32_t getPSRAMFree() const { return MAX_PSRAM_SAMPLES * sizeof(int16_t) - usedPSRAM; }\n    int getActiveVoices() const {\n        int count = 0;\n        for (int i = 0; i < activeVoiceCount; i++) {\n            if (voices[i].active) count++;\n        }\n        return count;\n    }\n};\n\nclass MinimalWAVPlayer {\nprivate:\n    File wavFile;\n    WAVHeader header;\n    \n    // Double buffering for seamless playback\n    int16_t* bufferA;\n    int16_t* bufferB;\n    int16_t* playingBuffer;       // Currently being played\n    int16_t* loadingBuffer;       // Being loaded in background\n    \n    uint32_t totalDataBytes;      // Total bytes in WAV data section\n    uint32_t filePosition;        // Current position in file (bytes from start of data)\n    uint32_t playingSamples;      // Samples in currently playing buffer\n    uint32_t playPosition;        // Current play position within playing buffer (legacy)\n    float fractionalPosition;     // Fractional position for pitch control\n    \n    bool isPlaying;\n    bool fileEnded;\n    uint16_t channels;\n    \n    // Control variables for new functionality\n    float playbackSpeed;          // Playback speed multiplier (0.1 to 4.0)\n    float startPosition;          // Start position (0.0 to 1.0)  \n    float endPosition;            // End position (0.0 to 1.0)\n    \n    // Background loading task\n    TaskHandle_t loaderTaskHandle;\n    SemaphoreHandle_t bufferMutex;\n    volatile bool loadingBufferReady;\n    volatile uint32_t loadingBufferSamples;\n    \npublic:\n    MinimalWAVPlayer() : bufferA(nullptr), bufferB(nullptr), totalDataBytes(0), filePosition(0),\n                         playingSamples(0), playPosition(0), fractionalPosition(0.0f), isPlaying(false),\n                         fileEnded(false), channels(2), playbackSpeed(1.0f), startPosition(0.0f), \n                         endPosition(1.0f), loaderTaskHandle(NULL), loadingBufferReady(false), \n                         loadingBufferSamples(0) {\n        \n        // Allocate double buffers\n        bufferA = (int16_t*)heap_caps_malloc(CHUNK_SIZE, MALLOC_CAP_SPIRAM);\n        bufferB = (int16_t*)heap_caps_malloc(CHUNK_SIZE, MALLOC_CAP_SPIRAM);\n        \n        if (!bufferA || !bufferB) {\n            if (bufferA) free(bufferA);\n            if (bufferB) free(bufferB);\n            bufferA = (int16_t*)malloc(CHUNK_SIZE);\n            bufferB = (int16_t*)malloc(CHUNK_SIZE);\n        }\n        \n        if (bufferA && bufferB) {\n            playingBuffer = bufferA;\n            loadingBuffer = bufferB;\n            bufferMutex = xSemaphoreCreateMutex();\n        }\n    }\n    \n    bool loadFile(const String& filename) {\n        if (!bufferA || !bufferB) return false;\n        \n        // Stop any existing playback\n        stop();\n        \n        // Close any existing file\n        if (wavFile) {\n            wavFile.close();\n        }\n        \n        // Reset all state\n        filePosition = 0;\n        playingSamples = 0;\n        playPosition = 0;\n        fractionalPosition = 0.0f;\n        isPlaying = false;\n        fileEnded = false;\n        loadingBufferReady = false;\n        \n        wavFile = SD.open(filename);\n        if (!wavFile) {\n            return false;\n        }\n        \n        // Read WAV header\n        if (wavFile.read((uint8_t*)&header, sizeof(WAVHeader)) != sizeof(WAVHeader)) {\n            wavFile.close();\n            return false;\n        }\n        \n        // Validate WAV file\n        if (strncmp(header.riff, "RIFF", 4) != 0 || strncmp(header.wave, "WAVE", 4) != 0) {\n            wavFile.close();\n            return false;\n        }\n        \n        channels = header.numChannels;\n        totalDataBytes = header.dataSize;\n        \n        // Load first buffer synchronously\n        loadFirstBuffer();\n        \n        return true;\n    }\n    \n    void play() {\n        if (bufferA && bufferB && playingSamples > 0 && !fileEnded) {\n            isPlaying = true;\n            playPosition = 0;\n            fractionalPosition = 0.0f;\n            \n            // Start background loading task\n            startBackgroundLoader();\n        }\n    }\n    \n    void stop() {\n        isPlaying = false;\n        \n        // Kill background loader task\n        if (loaderTaskHandle) {\n            vTaskDelete(loaderTaskHandle);\n            loaderTaskHandle = NULL;\n        }\n    }\n    \n    bool playing() { \n        return isPlaying && !fileEnded;\n    }\n    \n    // Pitch control methods\n    void setPlaybackSpeed(float speed) {\n        playbackSpeed = constrain(speed, 0.1f, 4.0f); // Limit to reasonable range\n    }\n    \n    // Sample section control methods\n    void setStartPosition(float pos) {\n        startPosition = constrain(pos, 0.0f, 1.0f);\n    }\n    \n    void setEndPosition(float pos) {\n        endPosition = constrain(pos, 0.0f, 1.0f);\n    }\n    \n    // Convenience method for mono output\n    float nextSample() {\n        float left, right;\n        getStereoSample(left, right);\n        return (left + right) * 0.5f; // Mix to mono\n    }\n    \n    // Load first buffer synchronously\n    void loadFirstBuffer() {\n        if (!wavFile || filePosition >= totalDataBytes) return;\n        \n        uint32_t bytesToRead = CHUNK_SIZE;\n        if (bytesToRead > totalDataBytes) {\n            bytesToRead = totalDataBytes;\n        }\n        \n        size_t bytesRead = wavFile.read((uint8_t*)playingBuffer, bytesToRead);\n        playingSamples = bytesRead / sizeof(int16_t);\n        playPosition = 0;\n        fractionalPosition = 0.0f;\n        filePosition += bytesRead;\n        \n        if (bytesRead < CHUNK_SIZE) {\n            memset((uint8_t*)playingBuffer + bytesRead, 0, CHUNK_SIZE - bytesRead);\n        }\n    }\n    \n    // Background loading task (static method)\n    static void backgroundLoaderTask(void* param) {\n        MinimalWAVPlayer* player = (MinimalWAVPlayer*)param;\n        \n        while (player->isPlaying && !player->fileEnded) {\n            // Only load if loading buffer is empty and we need more data\n            if (!player->loadingBufferReady && player->filePosition < player->totalDataBytes) {\n                player->loadNextBufferBackground();\n            }\n            \n            vTaskDelay(5); // 5ms delay\n        }\n        \n        player->loaderTaskHandle = NULL;\n        vTaskDelete(NULL);\n    }\n    \n    void startBackgroundLoader() {\n        if (loaderTaskHandle == NULL) {\n            xTaskCreatePinnedToCore(backgroundLoaderTask, "BGLoader", 4096, this, 1, &loaderTaskHandle, 0);\n        }\n    }\n    \n    void loadNextBufferBackground() {\n        if (!wavFile || filePosition >= totalDataBytes) {\n            fileEnded = true;\n            return;\n        }\n        \n        uint32_t bytesToRead = CHUNK_SIZE;\n        uint32_t remainingBytes = totalDataBytes - filePosition;\n        if (bytesToRead > remainingBytes) {\n            bytesToRead = remainingBytes;\n        }\n        \n        // Read into loading buffer\n        size_t bytesRead = wavFile.read((uint8_t*)loadingBuffer, bytesToRead);\n        filePosition += bytesRead;\n        \n        if (bytesRead < CHUNK_SIZE) {\n            memset((uint8_t*)loadingBuffer + bytesRead, 0, CHUNK_SIZE - bytesRead);\n        }\n        \n        // Atomically update ready status\n        if (xSemaphoreTake(bufferMutex, portMAX_DELAY)) {\n            loadingBufferSamples = bytesRead / sizeof(int16_t);\n            loadingBufferReady = true;\n            xSemaphoreGive(bufferMutex);\n        }\n    }\n    \n    // Get stereo sample - Double buffered, NEVER blocks, with pitch control and start/end positions\n    void getStereoSample(float& left, float& right, float pitchRatio = 0.0) {\n        left = 0.0f;\n        right = 0.0f;\n        \n        if (!isPlaying || !playingBuffer || fileEnded) {\n            // Debug: Print why no audio\n            static unsigned long lastNoAudioDebug = 0;\n            if (millis() - lastNoAudioDebug > 2000) {\n                lastNoAudioDebug = millis();\n                Serial.printf("No audio: isPlaying=%d, playingBuffer=%p, fileEnded=%d\\n", \n                             isPlaying, playingBuffer, fileEnded);\n            }\n            return;\n        }\n        \n        // Use internal playbackSpeed if no external pitch ratio provided\n        if (pitchRatio == 0.0) {\n            pitchRatio = playbackSpeed;\n        }\n        \n        // TODO: Implement start/end position support later\n        // For now, just play the full file to get basic audio working\n        // The complex file position tracking was breaking audio output\n        \n        // Check if we need to switch to the next buffer\n        // For stereo: fractionalPosition is in frames, playingSamples is individual samples\n        // For mono: fractionalPosition is in samples, playingSamples is individual samples\n        uint32_t maxFrames = (channels == 2) ? playingSamples / 2 : playingSamples;\n        if (fractionalPosition >= maxFrames) {\n            // Try to swap to the loading buffer if it\'s ready\n            if (loadingBufferReady && xSemaphoreTake(bufferMutex, 0)) {\n                // Swap buffers: loading becomes playing\n                int16_t* temp = playingBuffer;\n                playingBuffer = loadingBuffer;\n                loadingBuffer = temp;\n                \n                playingSamples = loadingBufferSamples;\n                fractionalPosition = 0.0f;\n                loadingBufferReady = false;\n                \n                xSemaphoreGive(bufferMutex);\n            } else {\n                // No ready buffer available - output silence (seamless gap)\n                if (filePosition >= totalDataBytes) {\n                    fileEnded = true;\n                }\n                return;\n            }\n        }\n        \n        // Read from playing buffer with pitch control (fractional sample reading)\n        if (channels == 2) {\n            // Stereo: fractionalPosition indexes sample pairs (L,R)\n            uint32_t frameIndex = (uint32_t)fractionalPosition; // Current stereo frame\n            uint32_t maxStereoFrames = playingSamples / 2;\n            \n            if (frameIndex < maxStereoFrames) {\n                uint32_t sampleL = frameIndex * 2;     // Left sample index\n                uint32_t sampleR = frameIndex * 2 + 1; // Right sample index\n                \n                // Always use simple sample reading - no interpolation for now\n                // This eliminates interpolation glitches while keeping pitch control working\n                left = playingBuffer[sampleL] / 32767.0f;\n                right = playingBuffer[sampleR] / 32767.0f;\n                \n                fractionalPosition += pitchRatio; // Advance by one frame\n                \n                // Debug: Print audio output occasionally\n                static unsigned long lastAudioDebug = 0;\n                static int audioSampleCount = 0;\n                audioSampleCount++;\n                if (millis() - lastAudioDebug > 2000) {\n                    lastAudioDebug = millis();\n                    Serial.printf("Audio OK: L=%.3f, R=%.3f, frame=%d/%d, fPos=%.2f, samples=%d\\n", \n                                 left, right, frameIndex, maxStereoFrames, fractionalPosition, audioSampleCount);\n                    audioSampleCount = 0;\n                }\n            } else {\n                left = right = 0.0f; // Silence if out of bounds\n                \n                // Debug: Print bounds issue\n                static unsigned long lastBoundsDebug = 0;\n                if (millis() - lastBoundsDebug > 2000) {\n                    lastBoundsDebug = millis();\n                    Serial.printf("Audio bounds: frame=%d >= maxFrames=%d, playingSamples=%d\\n", \n                                 frameIndex, maxStereoFrames, playingSamples);\n                }\n            }\n        } else {\n            // Mono to stereo with pitch control\n            uint32_t sampleIndex = (uint32_t)fractionalPosition;\n            if (sampleIndex < playingSamples) {\n                float mono;\n                \n                // Always use simple sample reading - no interpolation for now\n                // This eliminates interpolation glitches while keeping pitch control working\n                mono = playingBuffer[sampleIndex] / 32767.0f;\n                \n                left = mono;\n                right = mono;\n                fractionalPosition += pitchRatio; // Advance by pitch ratio\n                \n                // Debug: Print mono audio output occasionally\n                static unsigned long lastMonoDebug = 0;\n                static int monoSampleCount = 0;\n                monoSampleCount++;\n                if (millis() - lastMonoDebug > 2000) {\n                    lastMonoDebug = millis();\n                    Serial.printf("Mono OK: %.3f, idx=%d/%d, fPos=%.2f, samples=%d\\n", \n                                 mono, sampleIndex, playingSamples, fractionalPosition, monoSampleCount);\n                    monoSampleCount = 0;\n                }\n            } else {\n                left = right = 0.0f; // Silence if out of bounds\n                \n                // Debug: Print mono bounds issue\n                static unsigned long lastMonoBoundsDebug = 0;\n                if (millis() - lastMonoBoundsDebug > 2000) {\n                    lastMonoBoundsDebug = millis();\n                    Serial.printf("Mono bounds: idx=%d >= samples=%d\\n", sampleIndex, playingSamples);\n                }\n            }\n        }\n    }\n};\n            '),this.globalVariables.push("\n// MCP23017 Pin Definitions for LED Bank Indicators\n// CORRECTED v1.0 hardware mapping (CLAUDE.md verified)\n#define GATE1_LED_PIN 7    // GPA7: Gate 1 LED (Bank 1 indicator)\n#define GATE2_LED_PIN 6    // GPA6: Gate 2 LED (Bank 2 indicator)\n#define GATE3_LED_PIN 8    // GPB0: Gate 3 LED (Bank 5 indicator)\n#define GATE4_LED_PIN 9    // GPB1: Gate 4 LED (Bank 6 indicator)\n// Bank 3 indicator: MIDI-IN LED (GPA5)\n// Bank 4 indicator: MIDI-OUT LED (GPA4)\n// NOTE: GPB2/GPB3 are AUDIO SWITCHES (active-LOW), NOT LEDs!\n\n// Banking System Variables\nint currentBank = 1;           // Current active bank (1-6)\nconst int MAX_BANKS = 6;       // Maximum number of banks\nint activeBanks = 1;           // Number of banks actually used in this patch\nbool showingBankIndicator = false;      // Bank indicator LED state\nunsigned long bankIndicatorTime = 0;    // Bank indicator timing\nint lastEncoderA = HIGH;               // Encoder A state tracking\nbool lastEncoderBtn = false;           // Encoder button state tracking\nunsigned long encoderBtnPressTime = 0; // Encoder button press timestamp for long-press detection\nbool encoderBtnLongPressHandled = false; // Prevent double-triggering on long press\nbool enc1_buttonLongPressed = false;   // Encoder button held for >1s (exposed for Automation mode select)\n\n// Functional LED feedback (active when NOT showing bank indicator)\nbool led_gatein1_active = false;  // Gate In 1 detected\nbool led_gatein2_active = false;  // Gate In 2 detected\nbool led_gateout1_active = false; // Gate Out 1 (Gate 3) active\nbool led_gateout2_active = false; // Gate Out 2 (Gate 4) active\nbool led_midiin_active = false;   // MIDI In activity\nbool led_midiout_active = false;  // MIDI Out activity\nunsigned long led_midiin_time = 0;    // MIDI In LED flash timer\nunsigned long led_midiout_time = 0;   // MIDI Out LED flash timer\n\n// Audio buffers\nfloat leftBuffer[BUFFER_SIZE];\nfloat rightBuffer[BUFFER_SIZE];\n".concat(this.modules.some(function(e){return"LineIn"===e.type})?"int32_t i2sBuffer[BUFFER_SIZE * 2]; // I2S output buffer (32-bit for PCM1802 compatibility)":"int16_t i2sBuffer[BUFFER_SIZE * 2]; // I2S output buffer (16-bit)","\n").concat(this.modules.some(function(e){return"LineIn"===e.type})?"int32_t i2sInputBuffer[BUFFER_SIZE * 2]; // I2S input for PCM1802 (32-bit stereo interleaved)\n":"","        ")),this.globalVariables.push("\n// MCP23017 I/O Expander\nAdafruit_MCP23X17 mcp;\nuint16_t inputs = 0x3F;  // Global variable for MCP23017 inputs\nunsigned long lastMcpRead = 0;\nunsigned long lastMcpWrite = 0;\n\n// NeoPixel LEDs (WS2812B x8)\nAdafruit_NeoPixel neoPixels(".concat(N.NEOPIXEL_COUNT,", ").concat(N.NEOPIXEL_PIN,", NEO_GRB + NEO_KHZ800);\n        ")),this.modules.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";e.generateModuleVariables(n,o)})}},{key:"generateModuleVariables",value:function(e,n){var t=L[e.type];if(t){var a=this.audioModules.generateGlobalVariables(e,n,t);if(a)this.globalVariables.push(a);else{var o=this.controlModules.generateGlobalVariables(e,n,t);if(o)this.globalVariables.push(o);else{var r=this.hardwareModules.generateGlobalVariables(e,n,t);if(r)this.globalVariables.push(r);else switch(e.type){case"Wavetable":for(var i=e.params.wavetables||[],c=512,l="",s=0;s<4;s++){var u=i[s];if(u&&u.length>0)l+="\n// Wavetable ".concat(s+1," data (").concat(u.length," samples)\nconst float wavetable").concat(n,"_").concat(s,"[").concat(c,"] = {\n    ").concat(Array.from(u).map(function(e,n){var t=e.toFixed(6)+"f";return n%8==0&&n>0?"\n    "+t:t}).join(", "),"\n};");else{var p=void 0,d=void 0;switch(s){case 0:p=Array.from({length:c},function(e,n){return Math.sin(n/c*2*Math.PI)}),d="sine wave - default";break;case 1:p=Array.from({length:c},function(e,n){return n/c*2-1}),d="sawtooth wave - default";break;case 2:p=Array.from({length:c},function(e,n){return n<256?1:-1}),d="square wave - default";break;case 3:p=Array.from({length:c},function(e,n){var t=n/c;return t<.5?4*t-1:3-4*t}),d="triangle wave - default"}l+="\n// Wavetable ".concat(s+1," data (").concat(d,")\nconst float wavetable").concat(n,"_").concat(s,"[").concat(c,"] = {\n    ").concat(p.map(function(e,n){var t=e.toFixed(6)+"f";return n%8==0&&n>0?"\n    "+t:t}).join(", "),"\n};")}}this.globalVariables.push("\n// ".concat(t.label," ").concat(n,"\n").concat(l,"\n\n// Wavetable oscillator variables\nfloat wavetable").concat(n,"_phase = 0.0;\nfloat wavetable").concat(n,"_freq = ").concat(e.params.freq||440,";\nfloat wavetable").concat(n,"_gain = ").concat(e.params.gain||.25,";\nfloat wavetable").concat(n,"_gate = ").concat(e.params.gate||1,";\nfloat wavetable").concat(n,"_fm_amount = ").concat(e.params.fm_amount||0,";\nfloat wavetable").concat(n,"_fm_ratio = ").concat(e.params.fm_ratio||1,";\nfloat wavetable").concat(n,"_fm_ratio_cv = 0.0; // CV control for FM ratio (0-1)\nfloat wavetable").concat(n,"_pitch_amount = ").concat(e.params.pitch_range||24,"; // Pitch CV range in semitones\nfloat wavetable").concat(n,"_pitch_smooth = 0.5; // Smoothed pitch CV to prevent artifacts (0-1)\nint wavetable").concat(n,"_current_table = ").concat(e.params.current_table||0,";\nfloat watetable").concat(n,"_output = 0.0; // Mono output\nfloat wavetable").concat(n,"_outputL = 0.0;\nfloat wavetable").concat(n,"_outputR = 0.0;\nconst int wavetable").concat(n,"_table_size = ").concat(c,";\nconst float wavetable").concat(n,"_sample_rate_inv = 1.0 / ").concat(N.SAMPLE_RATE,".0;\n                "));break;case"Filter":this.globalVariables.push("\n// ".concat(t.label," ").concat(n,"\nfloat filter").concat(n,"_cutoff = ").concat(e.params.cutoff||1e3,";\nfloat filter").concat(n,"_resonance = ").concat(e.params.resonance||.5,";\nfloat filter").concat(n,"_x1 = 0.0, filter").concat(n,"_x2 = 0.0;\nfloat filter").concat(n,"_y1 = 0.0, filter").concat(n,"_y2 = 0.0;\nfloat filter").concat(n,"_input = 0.0;\nfloat filter").concat(n,"_inputL = 0.0;\nfloat filter").concat(n,"_inputR = 0.0;\nfloat filter").concat(n,"_output = 0.0;\nfloat filter").concat(n,"_outputL = 0.0;\nfloat filter").concat(n,"_outputR = 0.0;\n                "));break;case"VCA":this.globalVariables.push("\n// ".concat(t.label," ").concat(n,"\nfloat vca").concat(n,"_gain = ").concat(e.params.gain||1,";\nfloat vca").concat(n,"_inputL = 0.0;\nfloat vca").concat(n,"_inputR = 0.0;\nfloat vca").concat(n,"_outputL = 0.0;\nfloat vca").concat(n,"_outputR = 0.0;\n                "));break;case"Reverb":this.globalVariables.push("\n// ".concat(t.label," ").concat(n,"\nfloat reverb").concat(n,"_mix = ").concat(e.params.mix||.25,";\nfloat reverb").concat(n,"_size = ").concat(e.params.size||.5,";\nfloat reverb").concat(n,"_damp = ").concat(e.params.damp||.4,";\nfloat reverb").concat(n,"_inputL = 0.0;\nfloat reverb").concat(n,"_inputR = 0.0;\nfloat reverb").concat(n,"_outputL = 0.0;\nfloat reverb").concat(n,"_outputR = 0.0;\n                "));break;case"GranularSynth":var f=Math.floor(.5*N.SAMPLE_RATE);this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Granular Synthesis Engine\nconst int granular").concat(moduleIndex,"_buffer_size = ").concat(f,"; // 0.5 seconds at 44.1kHz\nfloat granular").concat(moduleIndex,"_buffer_L[").concat(f,"];\nfloat granular").concat(moduleIndex,"_buffer_R[").concat(f,"];\nint granular").concat(moduleIndex,"_write_pos = 0;\nfloat granular").concat(moduleIndex,"_grain_density = ").concat(e.params.grain_density||8,";\nfloat granular").concat(moduleIndex,"_grain_size_ms = ").concat(e.params.grain_size_ms||50,";\nfloat granular").concat(moduleIndex,"_position = ").concat(e.params.position||.5,";\nfloat granular").concat(moduleIndex,"_position_spread = ").concat(e.params.position_spread||.2,";\nfloat granular").concat(moduleIndex,"_pitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(moduleIndex,"_pitch_spread = ").concat(e.params.pitch_spread||.1,";\nfloat granular").concat(moduleIndex,"_dry_wet = ").concat(e.params.dry_wet||1,";\n\n// 4 concurrent grain players for richer textures\nstruct Grain {\n    bool active;\n    float position;\n    float size_samples;\n    float pitch_ratio;\n    float envelope_pos;\n    float envelope_inc;\n    int samples_remaining;\n};\n\nGrain granular").concat(moduleIndex,"_grains[4];\nfloat granular").concat(moduleIndex,"_outputL = 0.0;\nfloat granular").concat(moduleIndex,"_outputR = 0.0;\nint granular").concat(moduleIndex,"_samples_since_grain = 0;\n                "));break;case"ADSR":this.globalVariables.push("\n// ".concat(t.label," ").concat(n,"\nfloat adsr").concat(n,"_attack = ").concat((e.params.attack_ms||10)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_decay = ").concat((e.params.decay_ms||120)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_sustain = ").concat(e.params.sustain||.6,"; // Already 0-1 range\nfloat adsr").concat(n,"_release = ").concat((e.params.release_ms||200)/1e3,"; // Convert ms to seconds\nfloat adsr").concat(n,"_timescale = ").concat(e.params.timescale||1,"; // Timing scale multiplier\nfloat adsr").concat(n,"_level = 0.0;\nint adsr").concat(n,"_stage = 0; // 0=idle, 1=attack, 2=decay, 3=sustain, 4=release\nbool adsr").concat(n,"_gate = false;\nbool adsr").concat(n,"_lastGate = false;\nfloat adsr").concat(n,"_output = 0.0;\nfloat adsr").concat(n,"_stageTime = 0.0; // Time within current stage\n// Curve types: ").concat(e.params.attack_curve||"linear",", ").concat(e.params.decay_curve||"exp",", ").concat(e.params.release_curve||"exp","\n                "));break;case"Scale":break;case"Pot":var m=e.params.index||1;if(!this.declaredPots.has(m)){this.declaredPots.add(m);var _=N.ANALOG_PINS[m-1]||N.ANALOG_PINS[0];this.globalVariables.push("\n// ".concat(t.label," ").concat(m,"\nconst int pot").concat(m,"_pin = ").concat(_,";\nfloat pot").concat(m,"_value = 0.0;\nfloat pot").concat(m,"_physical = 0.0;     // Current physical pot position\nfloat pot").concat(m,"_target = 0.0;       // Target value when bank becomes active\nbool pot").concat(m,"_taken_over = false;  // Has pot taken over after bank change\nfloat pot").concat(m,"_last_bank_change = 0.0; // Time of last bank change for this pot\n                    "))}break;case"GranularPSRAM":Math.floor(4*N.SAMPLE_RATE),this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - PSRAM Granular Synthesis Engine\nint granular").concat(moduleIndex,"_buffer_size; // Set dynamically based on available memory\nfloat* granular").concat(moduleIndex,"_buffer_L; // PSRAM allocation\nfloat* granular").concat(moduleIndex,"_buffer_R; // PSRAM allocation\nint granular").concat(moduleIndex,"_write_pos = 0;\nfloat granular").concat(moduleIndex,"_grain_density = ").concat(e.params.grain_density||8,";\nfloat granular").concat(moduleIndex,"_grain_size_ms = ").concat(e.params.grain_size_ms||100,";\nfloat granular").concat(moduleIndex,"_position = ").concat(e.params.position||.5,";\nfloat granular").concat(moduleIndex,"_position_spread = ").concat(e.params.position_spread||.2,";\nfloat granular").concat(moduleIndex,"_pitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(moduleIndex,"_pitch_spread = ").concat(e.params.pitch_spread||.1,";\nfloat granular").concat(moduleIndex,"_dry_wet = ").concat(e.params.dry_wet||.5,";\nfloat granular").concat(moduleIndex,"_freeze = ").concat(e.params.freeze||0,";\n\n// 8 concurrent grain players for rich textures\nstruct Grain {\n    bool active;\n    float position;\n    float size_samples;\n    float pitch_ratio;\n    float envelope_pos;\n    float envelope_inc;\n    int samples_remaining;\n};\n\nGrain granular").concat(moduleIndex,"_grains[8];\nfloat granular").concat(moduleIndex,"_outputL = 0.0;\nfloat granular").concat(moduleIndex,"_outputR = 0.0;\nint granular").concat(moduleIndex,"_samples_since_grain = 0;\n\n// Runtime variables for control and audio processing\nfloat granular").concat(moduleIndex,"_inputL = 0.0;\nfloat granular").concat(moduleIndex,"_inputR = 0.0;\nfloat granular").concat(moduleIndex,"_currentDensity = ").concat(e.params.grain_density||8,";\nfloat granular").concat(moduleIndex,"_currentSize = ").concat(e.params.grain_size_ms||100,";\nfloat granular").concat(moduleIndex,"_currentPosition = ").concat(e.params.position||.5,";\nfloat granular").concat(moduleIndex,"_currentPitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(moduleIndex,"_currentDryWet = ").concat(e.params.dry_wet||.5,";\nfloat granular").concat(moduleIndex,"_currentFreeze = ").concat(e.params.freeze||0,";\n                "));break;case"Looper_OLD_DISABLED":var g=N.SAMPLE_RATE,h=16*g,v=this.modules[n],b=[];this.connections.forEach(function(e){if(e.to.id==="".concat(v.id,":btn1")||e.to.id==="".concat(v.id,":btn2")||e.to.id==="".concat(v.id,":btn3")||e.to.id==="".concat(v.id,":btn4")){var n=e.to.id.split(":")[1],t=parseInt(n.replace("btn",""));b.push(t)}}),b.sort();var y=b.length;this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - BPM-Synced Multi-track Looper with PSRAM\n// Connected buttons: ").concat(b.length>0?b.join(", "):"none"," (").concat(y," active tracks)\nclass Looper_").concat(n," {\nprivate:\n  static constexpr int NUM_TRACKS = ").concat(Math.max(1,y),"; // Dynamic track count\n  static constexpr int MAX_LOOP_SAMPLES = ").concat(h,";\n  \n  struct Track {\n    float* bufferL = nullptr;\n    float* bufferR = nullptr;\n    int length = 0;           // Length in samples (0 = not set yet)\n    int writePos = 0;\n    float readPosFloat = 0.0f;\n    \n    // State machine\n    enum State { EMPTY, RECORDING, PLAYING, OVERDUBBING, MUTED };\n    State state = EMPTY;\n    \n    // Track-specific parameters\n    int divider = 1;           // Beat division for tracks 2-4\n    bool isTrack1 = false;    // Track 1 has different behavior\n    float lastButtonState = 0.0f;\n  };\n  \n  Track tracks[NUM_TRACKS];\n  \n  // BPM sync\n  float bpm = ").concat(e.params.bpm||120,".0f;\n  int barsTrack1 = ").concat(e.params.bars_track1||4,";\n  int divTrack2 = ").concat(e.params.div_track2||4,";\n  int divTrack3 = ").concat(e.params.div_track3||8,";\n  int divTrack4 = ").concat(e.params.div_track4||16,";\n  \n  // Button timing for long press detection\n  unsigned long btnPressTime[4] = {0, 0, 0, 0};\n  static constexpr unsigned long LONG_PRESS_MS = 500; // 500ms for long press\n  bool quantize = ").concat(e.params.quantize||1,";\n  \n  // Global parameters\n  float feedback = ").concat((e.params.feedback||.95).toFixed(2),"f;\n  float mix = ").concat((e.params.mix||1).toFixed(1),"f;\n  \n  // Clock sync\n  float lastClockIn = 0.0f;\n  unsigned long lastClockTime = 0;\n  float clockPeriod = 0.0f;\n  int clockCounter = 0;\n  int beatsPerBar = 4;\n  \n  // Control inputs\n  float clockIn = 0.0f;\n").concat(b.map(function(e){return"  float btn".concat(e,"In = 0.0f;")}).join("\n"),"\n  float clearAllIn = 0.0f;\n  float lastClearAll = 0.0f;\n  \npublic:\n  float outL = 0.0f;\n  float outR = 0.0f;\n").concat(b.map(function(e){return"  float led".concat(e,"Out = 0.0f;")}).join("\n"),'\n  float positionOut = 0.0f;\n  float playingOut = 0.0f;\n\n  void init() {\n    // Allocate PSRAM buffers for each track\n    for (int i = 0; i < NUM_TRACKS; i++) {\n      // Track 1 gets full buffer, others get 1/4\n      int bufferSize = (i == 0) ? MAX_LOOP_SAMPLES : MAX_LOOP_SAMPLES / 4;\n      \n      tracks[i].bufferL = (float*)ps_malloc(bufferSize * sizeof(float));\n      tracks[i].bufferR = (float*)ps_malloc(bufferSize * sizeof(float));\n      \n      if (!tracks[i].bufferL || !tracks[i].bufferR) {\n        Serial.printf("Looper_').concat(n,': Failed to allocate PSRAM for track %d\\n", i);\n        // Fall back to smaller SRAM buffer if PSRAM fails\n        if (!tracks[i].bufferL) {\n          tracks[i].bufferL = (float*)malloc(22050 * sizeof(float)); // 0.5 second fallback\n        }\n        if (!tracks[i].bufferR) {\n          tracks[i].bufferR = (float*)malloc(22050 * sizeof(float));\n        }\n      } else {\n        // Clear buffers\n        memset(tracks[i].bufferL, 0, bufferSize * sizeof(float));\n        memset(tracks[i].bufferR, 0, bufferSize * sizeof(float));\n      }\n    }\n    \n    // Set track properties\n    tracks[0].isTrack1 = true;  // Track 1 has toggle behavior\n    tracks[1].divider = divTrack2;\n    tracks[2].divider = divTrack3;\n    tracks[3].divider = divTrack4;\n    \n    Serial.println("Looper_').concat(n,' initialized with BPM sync");\n  }\n\n  void setControl(int index, float value) {\n    switch(index) {\n      case 0: clockIn = value; break;           // clock input\n').concat(b.map(function(e,n){return"      case ".concat(n+1,": btn").concat(e,"In = value; break;            // button ").concat(e," (track ").concat(n+1,")")}).join("\n"),"\n      case ").concat(b.length+1,": clearAllIn = value; break;        // clear all\n      case 6: feedback = constrain(value, 0.0f, 1.0f); break;\n      case 7: mix = constrain(value, 0.0f, 1.0f); break;\n    }\n  }\n\n  void process(float inL, float inR) {\n    // Clock detection and BPM sync\n    if (clockIn > 0.5f && lastClockIn <= 0.5f) {\n      // Clock rising edge detected\n      unsigned long currentTime = millis();\n      if (lastClockTime > 0) {\n        clockPeriod = currentTime - lastClockTime;\n      }\n      lastClockTime = currentTime;\n      clockCounter++;\n    }\n    lastClockIn = clockIn;\n    \n    // Calculate track lengths based on BPM\n    int samplesPerBeat = (60.0f / bpm) * ").concat(g,";\n    \n    // Handle button inputs for each track\n").concat(b.map(function(e,n){return"    handleButton(".concat(n,", btn").concat(e,"In, samplesPerBeat);")}).join("\n"),"\n    \n    // Clear all tracks\n    if (clearAllIn > 0.5f && lastClearAll <= 0.5f) {\n      for (int i = 0; i < NUM_TRACKS; i++) {\n        clearTrack(i);\n      }\n    }\n    lastClearAll = clearAllIn;\n    \n    // Process audio for all tracks\n    float wetL = 0.0f;\n    float wetR = 0.0f;\n    \n    for (int i = 0; i < NUM_TRACKS; i++) {\n      Track& track = tracks[i];\n      \n      // Recording\n      if (track.state == Track::RECORDING && track.bufferL && track.bufferR) {\n        if (track.writePos < track.length) {\n          track.bufferL[track.writePos] = inL;\n          track.bufferR[track.writePos] = inR;\n          track.writePos++;\n        } else {\n          // Auto-stop at track length\n          track.state = Track::PLAYING;\n          track.writePos = 0;\n        }\n      }\n      \n      // Playback (both PLAYING and MUTED states advance position)\n      if ((track.state == Track::PLAYING || track.state == Track::MUTED) && \n          track.length > 0 && track.bufferL && track.bufferR) {\n        \n        int readIdx = (int)track.readPosFloat;\n        \n        // Only output audio if PLAYING (not MUTED)\n        if (track.state == Track::PLAYING && readIdx < track.length) {\n          wetL += track.bufferL[readIdx] * 0.25f; // Mix 4 tracks\n          wetR += track.bufferR[readIdx] * 0.25f;\n        }\n        \n        // Advance read position (even when muted to stay in sync)\n        track.readPosFloat += 1.0f;\n        if (track.readPosFloat >= track.length) {\n          track.readPosFloat = 0;\n          \n          // Auto-stop recording for tracks 2-4 after predetermined length\n          if (track.state == Track::RECORDING && !track.isTrack1) {\n            track.state = Track::PLAYING;\n            track.writePos = 0;\n          }\n        }\n      }\n      \n      // Update LED outputs\n      float ledValue = 0.0f;\n      switch(track.state) {\n        case Track::RECORDING: ledValue = 1.0f; break;     // Full brightness - recording\n        case Track::PLAYING: ledValue = 0.5f; break;       // Half brightness - playing\n        case Track::MUTED: ledValue = 0.1f; break;         // Dim - muted but has content\n        case Track::EMPTY: ledValue = 0.0f; break;         // Off - empty\n      }\n      \n      // Assign LED output only for connected buttons\n      if (i < ").concat(b.length,") {\n        switch(i) {\n").concat(b.map(function(e,n){return"          case ".concat(n,": led").concat(e,"Out = ledValue; break;")}).join("\n"),"\n        }\n      }\n    }\n    \n    // Mix dry/wet\n    outL = inL * (1.0f - mix) + wetL * mix;\n    outR = inR * (1.0f - mix) + wetR * mix;\n    \n    // Update position output (track 1 position)\n    positionOut = tracks[0].length > 0 ? tracks[0].readPosFloat / tracks[0].length : 0.0f;\n    playingOut = (tracks[0].state == Track::PLAYING || tracks[0].state == Track::OVERDUBBING) ? 1.0f : 0.0f;\n  }\n\nprivate:\n  void handleButton(int trackIndex, float buttonState, int samplesPerBeat) {\n    Track& track = tracks[trackIndex];\n    unsigned long currentTime = millis();\n    \n    // Button press detection\n    if (buttonState > 0.5f && track.lastButtonState <= 0.5f) {\n      // Button pressed - start timing for long press\n      btnPressTime[trackIndex] = currentTime;\n      \n    } else if (buttonState <= 0.5f && track.lastButtonState > 0.5f) {\n      // Button released\n      unsigned long pressDuration = currentTime - btnPressTime[trackIndex];\n      \n      if (pressDuration >= LONG_PRESS_MS) {\n        // Long press - delete/clear track\n        clearTrack(trackIndex);\n      } else {\n        // Short press - handle based on track type and current state\n        if (track.isTrack1) {\n          // Track 1: Toggle recording (manual length)\n          if (track.state == Track::EMPTY) {\n            // Start recording\n            track.state = Track::RECORDING;\n            track.writePos = 0;\n            track.readPosFloat = 0;\n            track.length = 0; // Length not predetermined\n          } else if (track.state == Track::RECORDING) {\n            // Stop recording, set length, start playing\n            track.length = track.writePos;\n            track.state = Track::PLAYING;\n            track.readPosFloat = 0;\n          } else if (track.state == Track::PLAYING) {\n            // Mute\n            track.state = Track::MUTED;\n          } else if (track.state == Track::MUTED) {\n            // Unmute\n            track.state = Track::PLAYING;\n          }\n        } else {\n          // Tracks 2-4: Red Sound Cycloops behavior\n          if (track.state == Track::EMPTY) {\n            // Start recording with predetermined length\n            track.state = Track::RECORDING;\n            track.writePos = 0;\n            track.readPosFloat = 0;\n            // Set predetermined length based on beat divisions\n            int beatsToRecord = beatsPerBar / track.divider;\n            track.length = samplesPerBeat * beatsToRecord;\n            \n            // Auto-stop will happen when writePos reaches length\n          } else if (track.state == Track::PLAYING) {\n            // Mute\n            track.state = Track::MUTED;\n          } else if (track.state == Track::MUTED) {\n            // Unmute\n            track.state = Track::PLAYING;\n          }\n        }\n      }\n      \n      btnPressTime[trackIndex] = 0; // Reset press time\n    }\n    \n    track.lastButtonState = buttonState;\n  }\n  \n  void clearTrack(int trackIndex) {\n    Track& track = tracks[trackIndex];\n    track.state = Track::EMPTY;\n    track.length = 0;\n    track.writePos = 0;\n    track.readPosFloat = 0;\n    \n    // Clear buffer\n    int bufferSize = (trackIndex == 0) ? MAX_LOOP_SAMPLES : MAX_LOOP_SAMPLES / 4;\n    if (track.bufferL && track.bufferR) {\n      memset(track.bufferL, 0, bufferSize * sizeof(float));\n      memset(track.bufferR, 0, bufferSize * sizeof(float));\n    }\n  }\n};\n\n// OLD DISABLED: Instance creation now handled by modular system\n// Looper_").concat(n," looper").concat(n,";\n// float looper").concat(n,"_inputL = 0.0f;\n// float looper").concat(n,"_inputR = 0.0f;\n                "));break;case"GranularDense":Math.floor(2*N.SAMPLE_RATE),this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Dense Granular Synthesis with 20 Grains\nint granular").concat(moduleIndex,"_buffer_size; // Set dynamically based on available memory\nfloat* granular").concat(moduleIndex,"_buffer_L; // PSRAM allocation\nfloat* granular").concat(moduleIndex,"_buffer_R; // PSRAM allocation\nint granular").concat(moduleIndex,"_write_pos = 0;\nfloat granular").concat(moduleIndex,"_grain_density = ").concat(e.params.grain_density||15,";\nfloat granular").concat(moduleIndex,"_position = ").concat(e.params.position||.5,";\nfloat granular").concat(moduleIndex,"_position_spread = ").concat(e.params.position_spread||.3,";\nfloat granular").concat(moduleIndex,"_pitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(moduleIndex,"_pitch_spread = ").concat(e.params.pitch_spread||.1,";\nfloat granular").concat(moduleIndex,"_dry_wet = ").concat(e.params.dry_wet||1,";\nfloat granular").concat(moduleIndex,"_freeze = ").concat(e.params.freeze||0,";\n\n// Dense grain structure - 20 concurrent 32ms grains for rich textural clouds\nstruct DenseGrain {\n    bool active;\n    float position;\n    float pitch_ratio;\n    float envelope_pos;\n    float envelope_inc;\n    int samples_remaining;\n};\n\nDenseGrain granular").concat(moduleIndex,"_grains[20]; // 20 concurrent grains\nfloat granular").concat(moduleIndex,"_outputL = 0.0;\nfloat granular").concat(moduleIndex,"_outputR = 0.0;\nint granular").concat(moduleIndex,"_samples_since_grain = 0;\n\n// Runtime variables for control and audio processing\nfloat granular").concat(moduleIndex,"_inputL = 0.0;\nfloat granular").concat(moduleIndex,"_inputR = 0.0;\nfloat granular").concat(moduleIndex,"_currentDensity = ").concat(e.params.grain_density||15,";\nfloat granular").concat(moduleIndex,"_currentPosition = ").concat(e.params.position||.5,";\nfloat granular").concat(moduleIndex,"_currentPitch = ").concat(e.params.pitch||0,";\nfloat granular").concat(moduleIndex,"_currentDryWet = ").concat(e.params.dry_wet||1,";\nfloat granular").concat(moduleIndex,"_currentFreeze = ").concat(e.params.freeze||0,";\n                "));break;case"LEDButton":var k=e.params.index||1;this.declaredButtons.has(k)||(this.declaredButtons.add(k),this.globalVariables.push("\n// LEDButton (Physical Button ".concat(k,")\nbool btn").concat(k,"_state = false;\nbool btn").concat(k,"_lastState = false;\nbool btn").concat(k,"_pressed = false;\nbool btn").concat(k,"_gate = false;     // Raw gate signal for modular connections\nfloat btn").concat(k,"_output = 0.0;\n                    ")));break;case"KickDrum":var S=this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type});this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Layered Drum Synthesizer\n// Oscillator layer\nfloat kick").concat(n,"_osc_phase = 0.0;\nfloat kick").concat(n,"_osc_freq = ").concat(e.params.osc_frequency||60,";\nfloat kick").concat(n,"_osc_level = ").concat(e.params.osc_level||.7,";\n// Oscillator amplitude envelope\nfloat kick").concat(n,"_osc_amp_env = 0.0;\nfloat kick").concat(n,"_osc_amp_attack = ").concat((e.params.osc_amp_attack_ms||1)/1e3,";\nfloat kick").concat(n,"_osc_amp_decay = ").concat((e.params.osc_amp_decay_ms||150)/1e3,";\nfloat kick").concat(n,"_osc_amp_sustain = ").concat(e.params.osc_amp_sustain||.1,";\nfloat kick").concat(n,"_osc_amp_release = ").concat((e.params.osc_amp_release_ms||200)/1e3,";\nint kick").concat(n,"_osc_amp_stage = 0;\nfloat kick").concat(n,"_osc_amp_time = 0.0;\n// Oscillator pitch envelope\nfloat kick").concat(n,"_osc_pitch_env = 0.0;\nfloat kick").concat(n,"_osc_pitch_amount = ").concat(e.params.osc_pitch_amount||.5,";\nfloat kick").concat(n,"_osc_pitch_attack = ").concat((e.params.osc_pitch_attack_ms||1)/1e3,";\nfloat kick").concat(n,"_osc_pitch_decay = ").concat((e.params.osc_pitch_decay_ms||100)/1e3,";\nint kick").concat(n,"_osc_pitch_stage = 0;\nfloat kick").concat(n,"_osc_pitch_time = 0.0;\n\n// Noise layer\nfloat kick").concat(n,"_noise_level = ").concat(e.params.noise_level||.3,";\n// Noise amplitude envelope\nfloat kick").concat(n,"_noise_amp_env = 0.0;\nfloat kick").concat(n,"_noise_amp_attack = ").concat((e.params.noise_amp_attack_ms||1)/1e3,";\nfloat kick").concat(n,"_noise_amp_decay = ").concat((e.params.noise_amp_decay_ms||50)/1e3,";\nint kick").concat(n,"_noise_amp_stage = 0;\nfloat kick").concat(n,"_noise_amp_time = 0.0;\n\n// Layer mute states\nbool kick").concat(n,"_osc_mute = ").concat(e.params.osc_mute||!1,";\nbool kick").concat(n,"_noise_mute = ").concat(e.params.noise_mute||!1,";\nbool kick").concat(n,"_sample_mute = ").concat(e.params.sample_mute||!1,";\n\n// Output mixing\nfloat kick").concat(n,"_output = 0.0;\nbool kick").concat(n,"_trigger = false;\nbool kick").concat(n,"_last_trigger = false;\n                ")),S&&this.globalVariables.push("\n// File transfer variables (only included when Sample Player classes are present)\nbool fileTransferActive".concat(n," = false;\nString transferFilename").concat(n,' = "";\nFile transferFile').concat(n,";\nuint32_t expectedFileSize").concat(n," = 0;\nuint32_t receivedBytes").concat(n," = 0;\n\n// Ring buffer variables for credit-based file transfer\nuint8_t* ringBuffer").concat(n," = NULL;\nvolatile int ringWritePos").concat(n," = 0;\nvolatile int ringReadPos").concat(n," = 0;\nvolatile int ringBufferCount").concat(n," = 0;\nTaskHandle_t sdWriterTaskHandle").concat(n," = NULL;\nportMUX_TYPE ringBufferMux").concat(n," = portMUX_INITIALIZER_UNLOCKED;\n                    "));break;case"GateGen":this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Gate Generator with S&H and gate input control\nfloat gate").concat(n,"_length = ").concat(e.params.gate_length||.8,"; // Gate length as fraction of clock period\nbool gate").concat(n,"_use_self_clock = ").concat(e.params.use_self_clock||!0,";\nfloat gate").concat(n,"_self_clock_bpm = ").concat(e.params.self_clock_bpm||120,";\nfloat gate").concat(n,"_probability = ").concat(e.params.probability||1,"; // Probability 0-1\nbool gate").concat(n,"_retrigger = ").concat(e.params.retrigger||!0,";\nbool gate").concat(n,"_sh_enabled = ").concat(e.params.sh_enabled||!0,"; // Sample & Hold enabled\nbool gate").concat(n,"_state = false;\nbool gate").concat(n,"_last_clock = false;\nunsigned long gate").concat(n,"_start_time = 0;\nunsigned long gate").concat(n,"_last_self_clock = 0;\nfloat gate").concat(n,"_output = 0.0;\nfloat gate").concat(n,"_sh_input = 0.0; // Sample & Hold input\nfloat gate").concat(n,"_sh_output = 0.0; // Sample & Hold output (held value)\nfloat gate").concat(n,"_gate_input = 0.0; // Gate input control\nbool gate").concat(n,"_gate_enabled = true; // Gate control state\n                "));break;case"Clock":this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - 8-output clock divider/multiplier\nfloat clock").concat(n,"_bpm = ").concat(e.params.bpm||120,";\nfloat clock").concat(n,"_swing = ").concat(e.params.swing||0,";\nbool clock").concat(n,"_running = ").concat(e.params.running||!0,";\nbool clock").concat(n,"_follow_midi = ").concat(e.params.follow_midi||!0,";\n\n// Division ratios for 8 outputs\nint clock").concat(n,"_div1 = ").concat(e.params.div1||1,";\nint clock").concat(n,"_div2 = ").concat(e.params.div2||2,";\nint clock").concat(n,"_div3 = ").concat(e.params.div3||4,";\nint clock").concat(n,"_div4 = ").concat(e.params.div4||8,";\nint clock").concat(n,"_div5 = ").concat(e.params.div5||2,";\nint clock").concat(n,"_div6 = ").concat(e.params.div6||3,";\nint clock").concat(n,"_div7 = ").concat(e.params.div7||4,";\nint clock").concat(n,"_div8 = ").concat(e.params.div8||8,";\n\n// Timing variables\nunsigned long clock").concat(n,"_last_tick = 0;\nunsigned long clock").concat(n,"_period_ms = 0;\nfloat clock").concat(n,"_master_phase = 0.0;\nbool clock").concat(n,"_master_pulse = false;\n\n// Output states and counters\nbool clock").concat(n,"_out1 = false, clock").concat(n,"_out2 = false;\nbool clock").concat(n,"_out3 = false, clock").concat(n,"_out4 = false;\nbool clock").concat(n,"_out5 = false, clock").concat(n,"_out6 = false;\nbool clock").concat(n,"_out7 = false, clock").concat(n,"_out8 = false;\n\nint clock").concat(n,"_counter1 = 0, clock").concat(n,"_counter2 = 0;\nint clock").concat(n,"_counter3 = 0, clock").concat(n,"_counter4 = 0;\nint clock").concat(n,"_counter5 = 0, clock").concat(n,"_counter6 = 0;\nint clock").concat(n,"_counter7 = 0, clock").concat(n,"_counter8 = 0;\n                "));break;case"SDPlayer":case"SamplePlayer":this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})?this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Minimal WAV Player (legacy single-voice)\nMinimalWAVPlayer sdPlayer").concat(n,"_player;\nfloat sdPlayer").concat(n,"_gain = ").concat(e.params.gain||3,";\nfloat sdPlayer").concat(n,"_pitch = ").concat(e.params.pitch||1,";\nbool sdPlayer").concat(n,"_loop = ").concat(e.params.loop||!0,";\nbool sdPlayer").concat(n,"_playing = false;\nint sdPlayer").concat(n,"_currentFile = 1;\nint sdPlayer").concat(n,"_sampleCount = 0;  // Dynamic count of available samples\nString sdPlayer").concat(n,'_currentFileName = "";\nfloat sdPlayer').concat(n,"_triggerThreshold = 0.5;\nbool sdPlayer").concat(n,"_lastTrigger = false;\nfloat sdPlayer").concat(n,"_outputL = 0.0;\nfloat sdPlayer").concat(n,"_outputR = 0.0;\nint sdPlayer").concat(n,"_lastLoadedFile = -1;  // Track loaded sample to avoid unnecessary reloads\n\n// File transfer variables (inline implementation - no external library needed)\nbool fileTransferActive").concat(n," = false;\nString transferFilename").concat(n,' = "";\nFile transferFile').concat(n,";\nuint32_t expectedFileSize").concat(n," = 0;\nuint32_t receivedBytes").concat(n," = 0;\n\n// Ring buffer variables for credit-based file transfer\nuint8_t* ringBuffer").concat(n," = NULL;\nvolatile int ringWritePos").concat(n," = 0;\nvolatile int ringReadPos").concat(n," = 0;\nvolatile int ringBufferCount").concat(n," = 0;\nTaskHandle_t sdWriterTaskHandle").concat(n," = NULL;\nportMUX_TYPE ringBufferMux").concat(n," = portMUX_INITIALIZER_UNLOCKED;\n                        ")):this.globalVariables.push("\n// ".concat(t.label," ").concat(n," - Sample Player module disabled (no Sample Player classes available)\nfloat sdPlayer").concat(n,"_outputL = 0.0; // Stub output - always silent\nfloat sdPlayer").concat(n,"_outputR = 0.0; // Stub output - always silent\n                    "))}}}}}},{key:"calculateActiveBanks",value:function(){var e=this,n=new Set;this.modules.forEach(function(e){if("Pot"===e.type||"LEDButton"===e.type){var t,a,o=(null===(t=e.params)||void 0===t?void 0:t.bank)||1,r=(null===(a=e.params)||void 0===a?void 0:a.locked)||!1;console.log("DEBUG: Found ".concat(e.type," ").concat(e.id," with bank=").concat(o,", locked=").concat(r)),r?n.add(1):n.add(o)}if("HarmonicSequencer"===e.type){var i,c=(null===(i=e.params)||void 0===i?void 0:i.start_bank)||1;console.log("DEBUG: Found HarmonicSequencer ".concat(e.id," with start_bank=").concat(c)),n.add(c)}}),console.log("DEBUG: usedBanks = ".concat(Array.from(n).sort()));var t=n.size>0?Math.max.apply(Math,be(n)):1;return console.log("DEBUG: activeBanks result = ".concat(t)),this.setupCode.push('\n    // DEBUG: Banking calculation\n    Serial.print("DEBUG: Found banks in use: ");'),Array.from(n).sort().forEach(function(n){e.setupCode.push('    Serial.print("'.concat(n,' ");'))}),this.setupCode.push('\n    Serial.println();\n    Serial.print("DEBUG: activeBanks calculated as: ");\n    Serial.println('.concat(t,");\n        ")),t}},{key:"generateGlobalFunctions",value:function(){var e=this,n=this.modules.filter(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type});n.forEach(function(n){var t=e.modules.findIndex(function(e){return e.id===n.id});e.globalFunctions=e.globalFunctions||[],e.globalFunctions.push("\n// Credit-Based Ring Buffer File Transfer for module ".concat(t,"\nvoid handleFileTransfer").concat(t,"() {\n    static String commandBuffer").concat(t,' = "";\n    \n    // Handle serial commands\n    if (!fileTransferActive').concat(t,") {\n        while (Serial.available()) {\n            char c = Serial.read();\n            if (c == '\\n' || c == '\\r') {\n                if (commandBuffer").concat(t,".length() > 0) {\n                    processFileCommand").concat(t,"(commandBuffer").concat(t,");\n                    commandBuffer").concat(t,' = "";\n                }\n            } else {\n                commandBuffer').concat(t," += c;\n                if (commandBuffer").concat(t,".length() > 100) commandBuffer").concat(t,' = "";\n            }\n        }\n    } else {\n        // File transfer mode - ring buffer approach\n        handleFileData').concat(t,"();\n    }\n}\n\n// Ring buffer file data handler for module ").concat(t,"\nvoid handleFileData").concat(t,"() {\n    // Read data from USB into ring buffer (non-blocking)\n    while (Serial.available() && ringBufferSpace").concat(t,"() > 0) {\n        uint8_t byte = Serial.read();\n        ringBuffer").concat(t,"[ringWritePos").concat(t,"] = byte;\n        ringWritePos").concat(t," = (ringWritePos").concat(t," + 1) % RING_BUFFER_SIZE;\n        \n        taskENTER_CRITICAL(&ringBufferMux").concat(t,");\n        ringBufferCount").concat(t,"++;\n        taskEXIT_CRITICAL(&ringBufferMux").concat(t,");\n        \n        receivedBytes").concat(t,"++;\n        \n        // Send credits when we have reasonable space\n        if (ringBufferSpace").concat(t,'() >= 32768) { // 32KB threshold\n            Serial.printf("CREDITS:%d\\n", ringBufferSpace').concat(t,"());\n        }\n        \n        if (receivedBytes").concat(t," >= expectedFileSize").concat(t,") {\n            break; // Transfer complete\n        }\n    }\n}\n\n// Process file transfer commands for module ").concat(t,"\nvoid processFileCommand").concat(t,'(String cmd) {\n    cmd.trim();\n    \n    if (cmd == "SD:STATUS") {\n        Serial.println("SD:READY");\n    } else if (cmd == "SD:LIST" || cmd.startsWith("SD:LIST:")) {\n        // List directory contents: SD:LIST or SD:LIST:/path\n        String path = "/";\n        if (cmd.startsWith("SD:LIST:")) {\n            path = cmd.substring(8);\n            if (path.length() == 0) path = "/";\n        }\n        \n        File root = SD.open(path);\n        if (root && root.isDirectory()) {\n            Serial.print("SD:LIST:START:");\n            Serial.println(path);\n            \n            File file = root.openNextFile();\n            while (file) {\n                String itemName = String(file.name());\n                if (file.isDirectory()) {\n                    Serial.print("SD:DIR:");\n                    Serial.print(itemName);\n                    Serial.print(":");\n                    Serial.println(path + (path.endsWith("/") ? "" : "/") + itemName);\n                } else {\n                    Serial.print("SD:FILE:");\n                    Serial.print(itemName);\n                    Serial.print(":");\n                    Serial.print(file.size());\n                    Serial.print(":");\n                    Serial.println(path + (path.endsWith("/") ? "" : "/") + itemName);\n                }\n                file.close();\n                file = root.openNextFile();\n            }\n            root.close();\n            Serial.println("SD:LIST:END");\n        } else {\n            Serial.println("SD:LIST:ERROR");\n        }\n    } else if (cmd.startsWith("SD:MKDIR:")) {\n        // Create directory: SD:MKDIR:/path/newdir\n        String dirPath = cmd.substring(9);\n        if (SD.mkdir(dirPath)) {\n            Serial.print("SD:MKDIR:OK:");\n            Serial.println(dirPath);\n        } else {\n            Serial.print("SD:MKDIR:ERROR:");\n            Serial.println(dirPath);\n        }\n    } else if (cmd.startsWith("SD:DELETE:")) {\n        // Delete file or directory: SD:DELETE:/path/file\n        String deletePath = cmd.substring(10);\n        if (SD.remove(deletePath)) {\n            Serial.print("SD:DELETE:OK:");\n            Serial.println(deletePath);\n        } else {\n            Serial.print("SD:DELETE:ERROR:");\n            Serial.println(deletePath);\n        }\n    } else if (cmd.startsWith("SD:EXISTS:")) {\n        // Check if file/directory exists: SD:EXISTS:/path\n        String checkPath = cmd.substring(10);\n        if (SD.exists(checkPath)) {\n            File item = SD.open(checkPath);\n            if (item.isDirectory()) {\n                Serial.print("SD:EXISTS:DIR:");\n            } else {\n                Serial.print("SD:EXISTS:FILE:");\n                Serial.print(item.size());\n                Serial.print(":");\n            }\n            Serial.println(checkPath);\n            item.close();\n        } else {\n            Serial.print("SD:EXISTS:NO:");\n            Serial.println(checkPath);\n        }\n    } else if (cmd.startsWith("SD:FILE:")) {\n        // Parse: SD:FILE:filename:size\n        int lastColon = cmd.lastIndexOf(\':\');\n        if (lastColon > 8) {\n            transferFilename').concat(t," = cmd.substring(8, lastColon);\n            expectedFileSize").concat(t," = cmd.substring(lastColon + 1).toInt();\n            \n            // Ensure proper path\n            if (!transferFilename").concat(t,'.startsWith("/")) {\n                transferFilename').concat(t,' = "/" + transferFilename').concat(t,";\n            }\n            if (!transferFilename").concat(t,'.startsWith("/samples")) {\n                transferFilename').concat(t,' = "/samples" + transferFilename').concat(t,';\n            }\n            \n            // Create samples directory if needed\n            if (!SD.exists("/samples")) {\n                SD.mkdir("/samples");\n            }\n            \n            // Open file for writing\n            if (SD.exists(transferFilename').concat(t,")) {\n                SD.remove(transferFilename").concat(t,");\n            }\n            \n            transferFile").concat(t," = SD.open(transferFilename").concat(t,", FILE_WRITE);\n            if (transferFile").concat(t,") {\n                // Initialize ring buffer\n                ringWritePos").concat(t," = 0;\n                ringReadPos").concat(t," = 0;\n                ringBufferCount").concat(t," = 0;\n                receivedBytes").concat(t," = 0;\n                fileTransferActive").concat(t," = true;\n                \n                // Start the SD writer task on Core 1\n                xTaskCreatePinnedToCore(\n                    sdWriterTask").concat(t,',\n                    "SDWriter').concat(t,'",\n                    8192,\n                    NULL,\n                    1, // Priority\n                    &sdWriterTaskHandle').concat(t,",\n                    1  // Core 1\n                );\n                \n                // Send initial credit window\n                int initialCredits = ringBufferSpace").concat(t,'();\n                Serial.printf("SD:READY:%d\\n", initialCredits);\n            } else {\n                Serial.println("SD:FILE:ERROR");\n            }\n        }\n    }\n}\n            ')),e.globalFunctions.push("\n\n// Ring buffer utility functions for module ".concat(t,"\nint ringBufferSpace").concat(t,"() {\n    return RING_BUFFER_SIZE - ringBufferCount").concat(t,";\n}\n\nint ringBufferAvailable").concat(t,"() {\n    return ringBufferCount").concat(t,";\n}\n\n// SD writer task for module ").concat(t," - runs on Core 1\nvoid sdWriterTask").concat(t,"(void* parameter) {\n    uint8_t writeBuffer[16384]; // 16KB write buffer\n    \n    while (fileTransferActive").concat(t,") {\n        int available = ringBufferAvailable").concat(t,"();\n        \n        if (available >= sizeof(writeBuffer) || \n           (available > 0 && receivedBytes").concat(t," >= expectedFileSize").concat(t,")) {\n            \n            // Fill write buffer from ring buffer\n            int toWrite = min(available, (int)sizeof(writeBuffer));\n            for (int i = 0; i < toWrite; i++) {\n                writeBuffer[i] = ringBuffer").concat(t,"[ringReadPos").concat(t,"];\n                ringReadPos").concat(t," = (ringReadPos").concat(t," + 1) % RING_BUFFER_SIZE;\n            }\n            \n            // Write to SD card in large block\n            if (transferFile").concat(t," && toWrite > 0) {\n                transferFile").concat(t,".write(writeBuffer, toWrite);\n                transferFile").concat(t,".flush(); // Ensure data is written\n                \n                // Update ring buffer count atomically\n                taskENTER_CRITICAL(&ringBufferMux").concat(t,");\n                ringBufferCount").concat(t," -= toWrite;\n                taskEXIT_CRITICAL(&ringBufferMux").concat(t,");\n                \n                // Send credits to web app\n                int freeSpace = ringBufferSpace").concat(t,'();\n                if (freeSpace >= 32768) { // Send credits when 32KB+ free\n                    Serial.printf("CREDITS:%d\\n", freeSpace);\n                }\n            }\n            \n            // Check if transfer complete\n            if (receivedBytes').concat(t," >= expectedFileSize").concat(t," && available == 0) {\n                transferFile").concat(t,".close();\n                fileTransferActive").concat(t,' = false;\n                Serial.printf("FILE:COMPLETE:%s\\n", transferFilename').concat(t,".c_str());\n                break;\n            }\n        }\n        \n        vTaskDelay(pdMS_TO_TICKS(10)); // Small delay to prevent busy waiting\n    }\n    \n    // Clean up task\n    sdWriterTaskHandle").concat(t," = NULL;\n    vTaskDelete(NULL);\n}\n            "))}),n.length>0&&(this.globalFunctions=this.globalFunctions||[],this.globalFunctions.push('\n// Universal SD Directory Browser - Only included when Sample Player modules are present\nvoid handleSDCommands() {\n    static String sdCommandBuffer = "";\n    \n    while (Serial.available()) {\n        char c = Serial.read();\n        if (c == \'\\n\' || c == \'\\r\') {\n            if (sdCommandBuffer.length() > 0) {\n                processGlobalSDCommand(sdCommandBuffer);\n                sdCommandBuffer = "";\n            }\n        } else {\n            sdCommandBuffer += c;\n            if (sdCommandBuffer.length() > 100) sdCommandBuffer = ""; // Prevent overflow\n        }\n    }\n}\n\n// Process global SD commands\nvoid processGlobalSDCommand(String cmd) {\n    cmd.trim();\n    \n    if (cmd == "SD:STATUS") {\n        Serial.println("SD:READY");\n    } else if (cmd == "SD:LIST" || cmd.startsWith("SD:LIST:")) {\n        // List directory contents: SD:LIST or SD:LIST:/path\n        String path = "/";\n        if (cmd.startsWith("SD:LIST:")) {\n            path = cmd.substring(8);\n            if (path.length() == 0) path = "/";\n        }\n        \n        File root = SD.open(path);\n        if (root && root.isDirectory()) {\n            Serial.print("SD:LIST:START:");\n            Serial.println(path);\n            \n            File file = root.openNextFile();\n            while (file) {\n                String itemName = String(file.name());\n                if (file.isDirectory()) {\n                    Serial.print("SD:DIR:");\n                    Serial.print(itemName);\n                    Serial.print(":");\n                    Serial.println(path + (path.endsWith("/") ? "" : "/") + itemName);\n                } else {\n                    Serial.print("SD:FILE:");\n                    Serial.print(itemName);\n                    Serial.print(":");\n                    Serial.print(file.size());\n                    Serial.print(":");\n                    Serial.println(path + (path.endsWith("/") ? "" : "/") + itemName);\n                }\n                file.close();\n                file = root.openNextFile();\n            }\n            root.close();\n            Serial.println("SD:LIST:END");\n        } else {\n            Serial.println("SD:LIST:ERROR");\n        }\n    } else if (cmd.startsWith("SD:MKDIR:")) {\n        // Create directory: SD:MKDIR:/path/newdir\n        String dirPath = cmd.substring(9);\n        if (SD.mkdir(dirPath)) {\n            Serial.print("SD:MKDIR:OK:");\n            Serial.println(dirPath);\n        } else {\n            Serial.print("SD:MKDIR:ERROR:");\n            Serial.println(dirPath);\n        }\n    } else if (cmd.startsWith("SD:DELETE:")) {\n        // Delete file or directory: SD:DELETE:/path/file\n        String deletePath = cmd.substring(10);\n        if (SD.remove(deletePath)) {\n            Serial.print("SD:DELETE:OK:");\n            Serial.println(deletePath);\n        } else {\n            Serial.print("SD:DELETE:ERROR:");\n            Serial.println(deletePath);\n        }\n    } else if (cmd.startsWith("SD:EXISTS:")) {\n        // Check if file/directory exists: SD:EXISTS:/path\n        String checkPath = cmd.substring(10);\n        if (SD.exists(checkPath)) {\n            File item = SD.open(checkPath);\n            if (item.isDirectory()) {\n                Serial.print("SD:EXISTS:DIR:");\n            } else {\n                Serial.print("SD:EXISTS:FILE:");\n                Serial.print(item.size());\n                Serial.print(":");\n            }\n            Serial.println(checkPath);\n            item.close();\n        } else {\n            Serial.print("SD:EXISTS:NO:");\n            Serial.println(checkPath);\n        }\n    } else if (cmd == "SD:INFO") {\n        // SD card info\n        Serial.print("SD:INFO:SIZE:");\n        Serial.print(SD.cardSize() / 1048576); // MB\n        Serial.print(":USED:");\n        Serial.print(SD.usedBytes() / 1048576); // MB\n        Serial.print(":TYPE:");\n        Serial.println(SD.cardType());\n    }\n}\n        ')),this.globalFunctions=this.globalFunctions||[];var t=this.modules.filter(function(e){return"LEDButton"===e.type}),a=this.modules.filter(function(e){return"Pot"===e.type}),o="\n// Bank colors (RGB)\nstruct BankColor {\n  uint8_t r, g, b;\n};\n\nconst BankColor bankColors[6] = {\n  {0, 255, 0}, // Bank 1\n  {255, 0, 0}, // Bank 2\n  {0, 0, 255}, // Bank 3\n  {255, 128, 0}, // Bank 4\n  {0, 255, 255}, // Bank 5\n  {255, 255, 255}  // Bank 6\n};\n\nvoid updateNeoPixels() {\n  // Get current bank color\n  BankColor color = bankColors[currentBank % 6];\n\n  // Clear all NeoPixels first\n  neoPixels.clear();\n";t.forEach(function(n){var t=n.params.index||1,a=[3,2,1,0][t-1],r=null;e.modularInstances.forEach(function(t,a){if("Looper"===t.type){var o=e.modules.find(function(n){return(n.id||"".concat(n.type).concat(e.modules.indexOf(n)))===a});e.connections.find(function(e){return e.from.id===n.id+":press"&&e.to.id===o.id+":record"})&&(r=t.instanceName)}});var i=e.modules.filter(function(e){return"Automation"===e.type}),c="false";if(i.forEach(function(a){var o=e.modules.findIndex(function(e){return e.id===a.id}),r=e.connections.find(function(e){return e.to.id.includes("".concat(a.id,":"))&&"record_trigger"===e.to.port});r&&r.from.id.split(":")[0]===n.id&&(c="(btn".concat(t,"_gate && automation").concat(o,"_record_trigger)"))}),r)o+="\n  // Button ".concat(t," NeoPixel (LED index ").concat(a,") - Looper control\n  float looperState = ").concat(r,".ledOut;\n  if (looperState < 0.5f) {\n    // EMPTY state: Pulsing red (ready to record)\n    uint8_t pulse = (uint8_t)((sin(millis() / 300.0) + 1.0) * 127.5);\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(pulse, 0, 0));\n  } else if (looperState < 1.5f) {\n    // RECORDING state: Solid red\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(255, 0, 0));\n  } else if (looperState < 2.5f) {\n    // PLAYING state: Solid green (looping)\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(0, 255, 0));\n  } else if (looperState < 3.5f) {\n    // MUTED state: Off\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(0, 0, 0));\n  } else {\n    // OVERDUBBING state: Solid orange (layering audio)\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(255, 128, 0));\n  }\n");else{var l=e.connections.find(function(e){return!(e.from.id!==n.id+":press"&&e.from.id!==n.id+":gate"||e.to.id.includes("Automation:record_trigger")||e.to.id.includes("Looper:record"))});o+=l?"\n  // Button ".concat(t," NeoPixel (LED index ").concat(a,") - Gate mode (dim=inactive, bright=active)\n  if (btn").concat(t,"_gate) {\n    // Gate active: Full brightness bank color\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(color.r, color.g, color.b));\n  } else {\n    // Gate inactive: Dim (20% brightness) to show it's in operation but inactive\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(\n      (uint8_t)(color.r * 0.2),\n      (uint8_t)(color.g * 0.2),\n      (uint8_t)(color.b * 0.2)\n    ));\n  }\n"):"\n  // Button ".concat(t," NeoPixel (LED index ").concat(a,")\n  if (").concat(c,") {\n    // Override with red for automation record\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(255, 0, 0));\n  } else {\n    // Use bank color\n    neoPixels.setPixelColor(").concat(a,", neoPixels.Color(color.r, color.g, color.b));\n  }\n")}}),a.forEach(function(n){var t=n.params.index||1,a=[7,6,5,4][t-1],r=e.connections.find(function(e){return e.from.id===n.id+":value"});if(r){var i=r.to.id.split(":")[0];r.to.id.split(":")[1],e.modules.find(function(e){return e.id===i})}o+="\n  // Pot ".concat(t," NeoPixel (LED index ").concat(a,") - Brightness reflects pot value\n  float pot").concat(t,"_brightness = pot").concat(t,"_value;\n  neoPixels.setPixelColor(").concat(a,", neoPixels.Color(\n    (uint8_t)(color.r * pot").concat(t,"_brightness),\n    (uint8_t)(color.g * pot").concat(t,"_brightness),\n    (uint8_t)(color.b * pot").concat(t,"_brightness)\n  ));\n")}),o+="\n  neoPixels.show();\n}\n",this.globalFunctions.push(o)}},{key:"generateSetup",value:function(){var e=this,n=this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})?921600:115200;this.setupCode.push("\nvoid setup() {\n    Serial.begin(".concat(n,');\n    delay(1000);\n    Serial.println("ESP32 Patcher starting...");\n    Serial.print("CPU Frequency: ");\n    Serial.print(getCpuFrequencyMhz());\n    Serial.println("MHz");\n\n    // Set a reasonable timestamp for file operations (no RTC)\n    // This prevents 1980 dates on SD card files\n    struct tm timeinfo;\n    timeinfo.tm_year = 2025 - 1900;  // Year since 1900\n    timeinfo.tm_mon = 0;              // January\n    timeinfo.tm_mday = 9;             // 9th\n    timeinfo.tm_hour = 12;\n    timeinfo.tm_min = 0;\n    timeinfo.tm_sec = 0;\n    time_t t = mktime(&timeinfo);\n    struct timeval now = { .tv_sec = t };\n    settimeofday(&now, NULL);\n    \n    // Comprehensive PSRAM detection and testing\n    Serial.println("=== PSRAM Detection ===");\n    \n    // Check if PSRAM is physically present\n    size_t psramSize = ESP.getPsramSize();\n    Serial.print("ESP.getPsramSize(): ");\n    Serial.print(psramSize);\n    Serial.println(" bytes");\n    \n    if (psramSize == 0) {\n        Serial.println("PSRAM: Not detected in hardware");\n    } else {\n        Serial.print("PSRAM: Detected ");\n        Serial.print(psramSize / 1024 / 1024);\n        Serial.println("MB chip");\n        \n        // Try to initialize PSRAM\n        if (psramInit()) {\n            Serial.println("PSRAM: Initialization successful");\n            \n            // Get available memory\n            size_t freePsram = ESP.getFreePsram();\n            Serial.print("Free PSRAM: ");\n            Serial.print(freePsram);\n            Serial.print(" bytes (");\n            Serial.print(freePsram / 1024 / 1024);\n            Serial.println("MB)");\n            \n            // Skip dangerous PSRAM test allocations that can cause crashes\n            Serial.println("PSRAM available - skipping test allocations for stability");\n        } else {\n            Serial.println("PSRAM: Initialization FAILED");\n        }\n    }\n    Serial.println("=== End PSRAM Detection ===");\n    Serial.println();\n\n    // Initialize I2C for MCP23017 (CRITICAL: I2C uses GPIO1/2, NOT GPIO17/18)\n    Wire.begin(').concat(N.I2C_SDA,", ").concat(N.I2C_SCL,');\n    Wire.setClock(400000); // 400kHz I2C Fast Mode (4× faster than default 100kHz)\n    Serial.println("I2C initialized on GPIO1/2 @ 400kHz");\n\n    // Initialize I2S FIRST (before MCP23017 to establish clean audio)\n    i2s_config_t i2s_config = {\n        .mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_TX').concat(this.modules.some(function(e){return"LineIn"===e.type})?" | I2S_MODE_RX":"","),\n        .sample_rate = SAMPLE_RATE,\n        .bits_per_sample = I2S_BITS_PER_SAMPLE_").concat(this.modules.some(function(e){return"LineIn"===e.type})?"32BIT":"16BIT",",\n        .channel_format = I2S_CHANNEL_FMT_RIGHT_LEFT,\n        .communication_format = I2S_COMM_FORMAT_STAND_I2S,\n        .intr_alloc_flags = ESP_INTR_FLAG_LEVEL1,\n        .dma_buf_count = 8,\n        .dma_buf_len = 128, // Increased from 64 for more buffering headroom (prevents glitches at high CPU)\n        .use_apll = ").concat(this.modules.some(function(e){return"LineIn"===e.type})?"true":"false",", // APLL required for PCM1802 MCLK\n        .tx_desc_auto_clear = true,\n        .fixed_mclk = 0\n    };\n\n    i2s_pin_config_t pin_config = {\n        ").concat(this.modules.some(function(e){return"LineIn"===e.type})?".mck_io_num = 16, // MCLK required for PCM1802\n        ":"",".bck_io_num = I2S_BCLK,\n        .ws_io_num = I2S_LRCK,\n        .data_out_num = I2S_DATA,\n        .data_in_num = ").concat(this.modules.some(function(e){return"LineIn"===e.type})?"8 // GPIO8 - PCM1802 DOUT":"I2S_PIN_NO_CHANGE",'\n    };\n\n    i2s_driver_install(I2S_NUM_0, &i2s_config, 0, NULL);\n    i2s_set_pin(I2S_NUM_0, &pin_config);\n    Serial.println("I2S initialized on GPIO15(BCK)/17(LRCK)/18(DATA)').concat(this.modules.some(function(e){return"LineIn"===e.type})?"/16(MCLK)/8(DIN)":"",'");\n        ')),this.setupCode.push(this.generatePSRAMInitialization());var t=this.modules.filter(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type});t.length>0&&(this.setupCode.push('\n    // Initialize ring buffers for file transfer modules\n    Serial.println("Initializing file transfer ring buffers...");'),t.forEach(function(n){var t=e.modules.findIndex(function(e){return e.id===n.id});n.type,e.setupCode.push("\n    ringBuffer".concat(t," = (uint8_t*)ps_malloc(RING_BUFFER_SIZE);\n    if (ringBuffer").concat(t,') {\n        Serial.printf("Ring buffer ').concat(t,': 256KB allocated in PSRAM\\n");\n        ringWritePos').concat(t," = 0;\n        ringReadPos").concat(t," = 0;\n        ringBufferCount").concat(t,' = 0;\n    } else {\n        Serial.println("ERROR: Failed to allocate ring buffer ').concat(t,' in PSRAM!");\n    }'))}),this.setupCode.push('\n    Serial.println("Ring buffer initialization complete.");')),this.setupCode.push('\n    // Initialize MCP23017 AFTER I2S\n    if (!mcp.begin_I2C(0x20)) {\n        Serial.println("Error initializing MCP23017");\n        while(1);\n    }\n    Serial.println("MCP23017 initialized at address 0x20");\n        '),this.setupCode.push("\n    // Configure MCP23017 pins\n    // Port A: Buttons (0-3) and Gate inputs (4-5) as INPUT_PULLUP\n    for (int i = 0; i < 6; i++) {\n        mcp.pinMode(i, INPUT_PULLUP);\n    }\n    // Port A: Button LEDs (6-7) as OUTPUT\n    for (int i = 6; i < 8; i++) {\n        mcp.pinMode(i, OUTPUT);\n    }\n    // Port B: Button LEDs (8-9) and Gate LEDs (10-13) as OUTPUT\n    for (int i = 8; i < 14; i++) {\n        mcp.pinMode(i, OUTPUT);\n    }\n".concat(this.modules.some(function(e){return"LineIn"===e.type})?'\n    // Audio input switches (GPB2/3 - Line In, GPB4 - Mono, GPB5 - PiP, GPB6 - Amp shutdown)\n    // GPB2/3 are active-LOW (LOW = line input enabled)\n    mcp.pinMode(10, OUTPUT); // GPB2 - LineR switch\n    mcp.pinMode(11, OUTPUT); // GPB3 - LineL switch\n    mcp.pinMode(12, OUTPUT); // GPB4 - Mono switch\n    mcp.pinMode(13, OUTPUT); // GPB5 - PiP switch\n    mcp.pinMode(14, OUTPUT); // GPB6 - Amp shutdown\n\n    // Enable line input (active-LOW: set to LOW)\n    mcp.digitalWrite(10, LOW);  // LineR enabled\n    mcp.digitalWrite(11, LOW);  // LineL enabled\n    mcp.digitalWrite(12, LOW);  // Mono off\n    mcp.digitalWrite(13, LOW);  // PiP off\n    mcp.digitalWrite(14, HIGH); // Amp enabled (HIGH = on)\n    Serial.println("Line In enabled (GPB2/3=LOW, Amp enabled)");\n':"",'\n    // Initialize all menu indicator LEDs to OFF by default\n    Serial.println("Initializing all menu indicator LEDs to OFF...");\n    mcp.digitalWrite(').concat(G.MIDI_IN_LED,", LOW);   // Bank 3 indicator\n    mcp.digitalWrite(").concat(G.MIDI_OUT_LED,', LOW);  // Bank 4 indicator\n    mcp.digitalWrite(GATE1_LED_PIN, LOW);             // Bank 1 indicator\n    mcp.digitalWrite(GATE2_LED_PIN, LOW);             // Bank 2 indicator\n    mcp.digitalWrite(GATE3_LED_PIN, LOW);             // Bank 5 indicator\n    mcp.digitalWrite(GATE4_LED_PIN, LOW);             // Bank 6 indicator\n\n    // Light up the initial bank indicator (currentBank = 1 by default)\n    Serial.print("Lighting initial bank indicator for bank: ");\n    Serial.println(currentBank);\n    mcp.digitalWrite(GATE1_LED_PIN, HIGH);            // Bank 1 starts active\n        ')),this.modules.filter(function(e){return["Pot","LEDButton","Encoder","GateOut","GateIn"].includes(e.type)}).forEach(function(n,t){if("Pot"===n.type){var a=n.params.index||1,o=N.ANALOG_PINS[a-1]||N.ANALOG_PINS[0];e.setupCode.push("    pinMode(".concat(o,", INPUT);"))}}),this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})&&this.setupCode.push('\n    // Initialize SD Card with high-speed setup for smooth sample playback\n    Serial.println("Initializing SD card...");\n    SPI.begin('.concat(N.SD_SCK,", ").concat(N.SD_MISO,", ").concat(N.SD_MOSI,", ").concat(N.SD_CS,");\n    \n    // Start at low speed for initialization\n    if (!SD.begin(").concat(N.SD_CS,', SPI, 400000)) {\n        Serial.println("SD Card initialization failed!");\n        Serial.println("Check: 1) Card inserted 2) FAT32 format 3) Wiring 4) 3.3V power");\n    } else {\n        // Reinitialize at high speed for fast reads (eliminates audio stuttering)\n        SD.end();\n        const uint32_t SD_SPI_HZ = 40000000; // 40 MHz\n        if (!SD.begin(').concat(N.SD_CS,', SPI, SD_SPI_HZ)) {\n            Serial.println("SD Card high-speed init failed, trying 25MHz");\n            SD.end();\n            if (!SD.begin(').concat(N.SD_CS,', SPI, 25000000)) {\n                Serial.println("SD Card failed at all speeds!");\n                return;\n            }\n        }\n        Serial.println("SD Card initialized at high speed for smooth sample playback");\n        uint64_t cardSize = SD.cardSize() / (1024 * 1024);\n        Serial.printf("SD Card size: %lluMB\\n", cardSize);\n        \n        // Initialize SD card file transfer handler for modules with samples\n        // SD sample players initialized automatically\n        \n        // List WAV files in root directory\n        File root = SD.open("/");\n        if (root) {\n            Serial.println("WAV files on SD card:");\n            File file = root.openNextFile();\n            int fileCount = 0;\n            while (file) {\n                String fname = file.name();\n                if (!file.isDirectory() && (fname.endsWith(".wav") || fname.endsWith(".WAV"))) {\n                    fileCount++;\n                    Serial.printf("  %d: %s (%lu bytes)\\n", fileCount, file.name(), file.size());\n                }\n                file.close();\n                file = root.openNextFile();\n            }\n            root.close();\n            if (fileCount == 0) {\n                Serial.println("  No WAV files found. Copy sample1.wav, sample2.wav, etc. to SD card");\n            }\n            \n            // Count samples for each Sample Player module and set dynamic ranges\n            ').concat(this.modules.filter(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type}).map(function(n){var t=e.modules.findIndex(function(e){return e.id===n.id});return"\n            // Count available samples for Sample Player ".concat(t,'\n            Serial.printf("Counting samples for Sample Player %d...\\n", ').concat(t,");\n            int sampleCount").concat(t,' = 0;\n            \n            // Check numbered samples (sample1.wav, sample2.wav, etc.)\n            for (int i = 1; i <= 99; i++) {\n                String testPaths[] = {\n                    "/sample" + String(i) + ".wav",\n                    "/samples/sample" + String(i) + ".wav"\n                };\n                \n                bool found = false;\n                for (String testPath : testPaths) {\n                    if (SD.exists(testPath)) {\n                        sampleCount').concat(t,'++;\n                        found = true;\n                        break;\n                    }\n                }\n                \n                // Also check session folders\n                File rootCount = SD.open("/");\n                if (rootCount && !found) {\n                    File entryCount = rootCount.openNextFile();\n                    while (entryCount && !found) {\n                        String entryName = String(entryCount.name());\n                        if (entryCount.isDirectory() && entryName.startsWith("session_")) {\n                            String sessionPath = "/" + entryName + "/sample" + String(i) + ".wav";\n                            if (SD.exists(sessionPath)) {\n                                sampleCount').concat(t,"++;\n                                found = true;\n                            }\n                        }\n                        entryCount.close();\n                        entryCount = rootCount.openNextFile();\n                    }\n                    rootCount.close();\n                }\n                \n                // Stop counting if we hit a gap (sample1.wav, sample2.wav exist, but sample3.wav missing)\n                if (!found) break;\n            }\n            \n            sdPlayer").concat(t,"_sampleCount = sampleCount").concat(t,';\n            Serial.printf("Sample Player %d: Found %d samples (pot will map across full range)\\n", ').concat(t,", sampleCount").concat(t,");")}).join(""),"\n        }\n    }\n            ")),this.setupCode.push("\n    // Initialize direct GPIO pins\n    pinMode(".concat(N.ENCODER_A,", INPUT_PULLUP);\n    pinMode(").concat(N.ENCODER_B,", INPUT_PULLUP);\n    pinMode(").concat(N.ENCODER_BTN,", INPUT_PULLUP);\n    \n    // Calculate number of active banks based on hardware modules in patch\n    activeBanks = ").concat(this.calculateActiveBanks(),';\n    Serial.print("ESP32-S3 Patcher initialized with ");\n    Serial.print(activeBanks);\n    Serial.println(" active banks");\n    \n    // Initialize banking system state\n    currentBank = 1;\n    showingBankIndicator = false;\n    Serial.print("Starting in Bank ");\n    Serial.println(currentBank);\n    \n    // Initialize wavetables for Wavetable oscillators\n    ').concat(this.modules.filter(function(e){return"Wavetable"===e.type}).map(function(e,n){var t,a=(null===(t=e.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";return"\n    // Initialize default wavetables for Wavetable ".concat(a,'\n    Serial.println("Initializing wavetables for Wavetable ').concat(a,'...");\n    for (int i = 0; i < WT').concat(a,"_TABLE_SIZE; i++) {\n        float phase = (2.0 * PI * i) / WT").concat(a,"_TABLE_SIZE;\n        wt").concat(a,"_table0[i] = sin(phase);                    // Sine wave\n        wt").concat(a,"_table1[i] = (i < WT").concat(a,"_TABLE_SIZE/2) ? 1.0 : -1.0; // Square wave\n        wt").concat(a,"_table2[i] = 2.0 * (float)i / WT").concat(a,"_TABLE_SIZE - 1.0; // Sawtooth wave\n        wt").concat(a,'_table3[i] = 1.0 - 4.0 * abs(phase - PI) / PI; // Triangle wave\n    }\n    Serial.println("Wavetables initialized for Wavetable ').concat(a,'");')}).join(""),"\n\n    // SAFE: Preload first sample for each Sample Player during setup (not during audio processing)\n    ").concat(this.modules.filter(function(e){return"SamplePlayer"===e.type}).map(function(e,n){var t,a=(null===(t=e.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";return"\n    // Preload sample1.wav for Sample Player ".concat(a,"\n    String preloadFile").concat(a,' = "/sample1.wav";\n    if (!SD.exists(preloadFile').concat(a,")) {\n        preloadFile").concat(a,' = "/samples/sample1.wav";\n    }\n    if (SD.exists(preloadFile').concat(a,") && sdPlayer").concat(a,"_player.loadFile(preloadFile").concat(a,".c_str())) {\n        sdPlayer").concat(a,'_lastLoadedFile = 1;\n        Serial.println("Preloaded: " + preloadFile').concat(a,');\n    } else {\n        Serial.println("Warning: Could not preload sample1.wav for Sample Player ').concat(a,'");\n    }')}).join(""),'\n\n    // CRITICAL: Clear audio buffers and output silence before starting main loop\n    // This prevents startup glitches from uninitialized memory\n    Serial.println("Clearing audio buffers and outputting initial silence...");\n\n    // Clear all buffers\n    memset(leftBuffer, 0, sizeof(leftBuffer));\n    memset(rightBuffer, 0, sizeof(rightBuffer));\n    memset(i2sBuffer, 0, sizeof(i2sBuffer));\n\n    // Output 3 silent frames to let I2S stabilize\n    for (int frame = 0; frame < 3; frame++) {\n        size_t bytes_written;\n        i2s_write(I2S_NUM_0, i2sBuffer, sizeof(i2sBuffer), &bytes_written, portMAX_DELAY);\n    }\n\n    // Initialize NeoPixels\n    neoPixels.begin();\n    neoPixels.setBrightness(').concat(N.NEOPIXEL_BRIGHTNESS,');\n    neoPixels.clear();\n    neoPixels.show();\n    Serial.println("NeoPixels initialized (8 LEDs, GPIO46)");\n\n    Serial.println("Audio system ready!");\n\n    // Launch control task on Core 0 (audio runs on Core 1 in loop())\n    Serial.println("Creating control task on Core 0...");\n    xTaskCreatePinnedToCore(\n        controlTask,           // Task function\n        "ControlTask",         // Task name\n        8192,                  // Stack size (bytes)\n        NULL,                  // Parameters\n        1,                     // Priority\n        NULL,                  // Task handle (not needed)\n        0                      // Core 0\n    );\n    Serial.println("Control task launched on Core 0 - dual-core operation active");\n}\n        '))}},{key:"generatePSRAMInitialization",value:function(){var e="";return this.modules.forEach(function(n,t){"Looper_OLD_DISABLED"===n.type&&(e+="\n    // OLD DISABLED: Initialize Looper module ".concat(t,"\n    // looper").concat(t,".init();\n                "))}),this.modularInstances.forEach(function(n,t){e+="\n    // Initialize modular ".concat(n.type," instance\n    ").concat(n.instanceName,".init();\n            ")}),this.modules.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||t+1;if("Delay"===n.type){var r=Math.round(44.1*(n.params.time_ms||380)*2);e+="\n    // Initialize PSRAM buffers for Delay module ".concat(o,'\n    Serial.println("Allocating PSRAM buffers for delay effect...");\n    delay').concat(o,"_bufferL = (float*)ps_malloc(").concat(r," * sizeof(float));\n    delay").concat(o,"_bufferR = (float*)ps_malloc(").concat(r," * sizeof(float));\n\n    if (!delay").concat(o,"_bufferL || !delay").concat(o,'_bufferR) {\n        Serial.println("PSRAM allocation failed for delay, falling back to DRAM with smaller buffers...");\n\n        // Fallback to DRAM - try progressively smaller buffers\n        const int maxDRAMSize = ').concat(Math.floor(4410),"; // 100ms max for DRAM\n        const int minDRAMSize = ").concat(Math.floor(441),"; // 10ms minimum\n        int fallbackSize = maxDRAMSize;\n\n        while (fallbackSize >= minDRAMSize) {\n            delay").concat(o,"_bufferL = (float*)malloc(fallbackSize * sizeof(float));\n            delay").concat(o,"_bufferR = (float*)malloc(fallbackSize * sizeof(float));\n\n            if (delay").concat(o,"_bufferL && delay").concat(o,'_bufferR) {\n                Serial.printf("Delay ').concat(o,': Allocated %d samples in DRAM (%.1fms)\\n", fallbackSize, fallbackSize / 44.1f);\n                break;\n            }\n\n            if (delay').concat(o,"_bufferL) free(delay").concat(o,"_bufferL);\n            if (delay").concat(o,"_bufferR) free(delay").concat(o,"_bufferR);\n\n            fallbackSize = (int)(fallbackSize * 0.75); // Reduce by 25%\n        }\n\n        if (!delay").concat(o,"_bufferL || !delay").concat(o,'_bufferR) {\n            Serial.println("ERROR: Even DRAM allocation failed for delay!");\n            while(1);\n        }\n    } else {\n        Serial.printf("Delay ').concat(o,': Allocated %d samples in PSRAM (%.1fms)\\n", ').concat(r,", ").concat(r," / 44.1f);\n\n        // Initialize buffers to silence\n        memset(delay").concat(o,"_bufferL, 0, ").concat(r," * sizeof(float));\n        memset(delay").concat(o,"_bufferR, 0, ").concat(r," * sizeof(float));\n    }\n                ")}else if("GranularSynth"===n.type){var i=Math.floor(.5*N.SAMPLE_RATE);e+="\n    // Initialize PSRAM buffers for GranularSynth module ".concat(o,'\n    Serial.println("Allocating PSRAM buffers for granular synthesis...");\n    granular').concat(o,"_buffer_L = (float*)ps_malloc(").concat(i," * sizeof(float));\n    granular").concat(o,"_buffer_R = (float*)ps_malloc(").concat(i," * sizeof(float));\n\n    if (!granular").concat(o,"_buffer_L || !granular").concat(o,'_buffer_R) {\n        Serial.println("PSRAM allocation failed, falling back to DRAM with smaller buffers...");\n\n        // Fallback to DRAM - try progressively smaller buffers\n        const int maxDRAMSize = ').concat(Math.floor(.5*N.SAMPLE_RATE),"; // 0.5s max\n        const int minDRAMSize = ").concat(Math.floor(.25*N.SAMPLE_RATE),"; // Minimum 0.25s\n        int fallbackSize = maxDRAMSize;\n\n        while (fallbackSize >= minDRAMSize) {\n            granular").concat(o,"_buffer_L = (float*)malloc(fallbackSize * sizeof(float));\n            granular").concat(o,"_buffer_R = (float*)malloc(fallbackSize * sizeof(float));\n\n            if (granular").concat(o,"_buffer_L && granular").concat(o,"_buffer_R) {\n                break; // Success!\n            }\n\n            // Free any partial allocation\n            if (granular").concat(o,"_buffer_L) free(granular").concat(o,"_buffer_L);\n            if (granular").concat(o,"_buffer_R) free(granular").concat(o,'_buffer_R);\n\n            // Try smaller buffer\n            fallbackSize = (int)(fallbackSize * 0.75); // Reduce by 25%\n            Serial.print("Retrying with smaller buffer: ");\n            Serial.print(fallbackSize);\n            Serial.println(" samples");\n        }\n\n        if (!granular').concat(o,"_buffer_L || !granular").concat(o,'_buffer_R) {\n            Serial.println("ERROR: Even DRAM allocation failed!");\n            while(1);\n        }\n\n        granular').concat(o,'_buffer_size = fallbackSize;\n        Serial.printf("Using DRAM buffers: %d bytes (%.2fs buffer)\\n",\n            fallbackSize * sizeof(float) * 2, (float)fallbackSize / ').concat(N.SAMPLE_RATE,");\n    } else {\n        granular").concat(o,"_buffer_size = ").concat(i,';\n        Serial.printf("PSRAM granular buffers allocated: %d bytes (%.2fs buffer)\\n",\n            ').concat(i," * sizeof(float) * 2, (float)").concat(i," / ").concat(N.SAMPLE_RATE,");\n    }\n\n    // Initialize buffers to silence\n    for (int i = 0; i < granular").concat(o,"_buffer_size; i++) {\n        granular").concat(o,"_buffer_L[i] = 0.0f;\n        granular").concat(o,"_buffer_R[i] = 0.0f;\n    }\n\n    granular").concat(o,"_write_pos = 0;\n\n    // Initialize 4 grains to inactive\n    for (int i = 0; i < 4; i++) {\n        granular").concat(o,"_grains[i].active = false;\n        granular").concat(o,"_grains[i].position = 0.0f;\n        granular").concat(o,"_grains[i].pitch_ratio = 1.0f;\n        granular").concat(o,"_grains[i].amplitude = 0.0f;\n        granular").concat(o,"_grains[i].samples_remaining = 0;\n        granular").concat(o,"_grains[i].grain_size_samples = 0;\n    }\n")}else if("GranularDense"===n.type){var c=Math.floor(2*N.SAMPLE_RATE);e+="\n    // Initialize PSRAM buffers for GranularDense module ".concat(o,'\n    Serial.println("Allocating PSRAM buffers for dense granular synthesis...");\n    granular').concat(o,"_buffer_L = (float*)ps_malloc(").concat(c," * sizeof(float));\n    granular").concat(o,"_buffer_R = (float*)ps_malloc(").concat(c," * sizeof(float));\n    \n    if (!granular").concat(o,"_buffer_L || !granular").concat(o,'_buffer_R) {\n        Serial.println("PSRAM allocation failed, falling back to DRAM with smaller buffers...");\n        \n        // Fallback to DRAM - smaller buffer sizes for dense processing\n        const int maxDRAMSize = ').concat(Math.floor(1*N.SAMPLE_RATE),"; // 1s max for DRAM\n        const int minDRAMSize = ").concat(Math.floor(.5*N.SAMPLE_RATE),"; // Minimum 0.5s\n        int fallbackSize = maxDRAMSize;\n        \n        while (fallbackSize >= minDRAMSize) {\n            granular").concat(o,"_buffer_L = (float*)malloc(fallbackSize * sizeof(float));\n            granular").concat(o,"_buffer_R = (float*)malloc(fallbackSize * sizeof(float));\n            \n            if (granular").concat(o,"_buffer_L && granular").concat(o,"_buffer_R) {\n                break; // Success!\n            }\n            \n            // Free any partial allocation\n            if (granular").concat(o,"_buffer_L) free(granular").concat(o,"_buffer_L);\n            if (granular").concat(o,"_buffer_R) free(granular").concat(o,'_buffer_R);\n            \n            // Try smaller buffer\n            fallbackSize = (int)(fallbackSize * 0.75); // Reduce by 25%\n            Serial.print("Retrying dense granular with smaller buffer: ");\n            Serial.print(fallbackSize);\n            Serial.println(" samples");\n        }\n        \n        if (!granular').concat(o,"_buffer_L || !granular").concat(o,'_buffer_R) {\n            Serial.println("ERROR: Even DRAM allocation failed for dense granular!");\n            while(1);\n        }\n        \n        granular').concat(o,'_buffer_size = fallbackSize;\n        Serial.print("Using DRAM buffers for dense granular: ");\n        Serial.print(fallbackSize * sizeof(float) * 2);\n        Serial.print(" bytes (");\n        Serial.print((float)fallbackSize / ').concat(N.SAMPLE_RATE,');\n        Serial.println("s buffer)");\n    } else {\n        granular').concat(o,"_buffer_size = ").concat(c,';\n        Serial.print("PSRAM dense granular buffers allocated successfully: ");\n        Serial.print(').concat(c,' * sizeof(float) * 2);\n        Serial.print(" bytes (");\n        Serial.print((float)').concat(c," / ").concat(N.SAMPLE_RATE,');\n        Serial.println("s buffer)");\n    }\n    \n    // Initialize dense granular buffers to silence\n    for (int i = 0; i < granular').concat(o,"_buffer_size; i++) {\n        granular").concat(o,"_buffer_L[i] = 0.0f;\n        granular").concat(o,"_buffer_R[i] = 0.0f;\n    }\n    \n    granular").concat(o,"_write_pos = 0;\n    \n    // Initialize all 20 dense grains to inactive\n    for (int i = 0; i < 20; i++) {\n        granular").concat(o,"_grains[i].active = false;\n        granular").concat(o,"_grains[i].position = 0.0f;\n        granular").concat(o,"_grains[i].pitch_ratio = 1.0f;\n        granular").concat(o,"_grains[i].envelope_pos = 0.0f;\n        granular").concat(o,"_grains[i].envelope_inc = 0.0f;\n        granular").concat(o,"_grains[i].samples_remaining = 0;\n    }\n")}else if("Automation"===n.type){var l=n.params.buffer_size||1e3,s=n.params.num_inputs||1;e+="\n    // Initialize PSRAM buffers for Automation module ".concat(o," (").concat(s,' channels)\n    Serial.println("Allocating PSRAM buffers for automation recording...");\n');for(var u=1;u<=s;u++)e+="    automation".concat(o,"_buffer_").concat(u," = (float*)ps_malloc(").concat(l," * sizeof(float));\n    if (!automation").concat(o,"_buffer_").concat(u,') {\n        Serial.println("ERROR: PSRAM allocation failed for automation channel ').concat(u,'");\n        while(1);\n    } else {\n        memset(automation').concat(o,"_buffer_").concat(u,", 0, ").concat(l,' * sizeof(float));\n        Serial.printf("Automation ').concat(o," channel ").concat(u,': Allocated %d samples in PSRAM (%.1fs @ 50Hz)\\n", ').concat(l,", ").concat(l," / 50.0f);\n    }\n")}else"CleanReverb"===n.type&&(e+="\n    // Initialize CleanReverb ".concat(o,' buffers to zero (critical to prevent glitching)\n    Serial.println("Initializing CleanReverb buffers...");\n    initCleanReverb').concat(o,"();\n"))}),e}},{key:"generateLoop",value:function(){var e=this,n=this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type});this.loopCode.push('\n// Core 0 Task: Control Processing\nvoid controlTask(void* parameter) {\n    Serial.println("🎛️  Control Task started on Core 0");\n\n    while(1) {\n        '.concat(n?"// Universal SD directory browser\n        handleSDCommands();":"// No SD modules - SD commands disabled","\n\n        ").concat(this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})?"\n        // Handle SD card file transfers from web app\n        ".concat(this.modules.filter(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type}).map(function(n){var t=e.modules.findIndex(function(e){return e.id===n.id});return"handleFileTransfer".concat(t,"();")}).join("\n        "),"\n        "):"","\n        // Timed I2C access to prevent I2S interference\n        // ").concat(this.modules.some(function(e){return"GateIn"===e.type})?"1ms polling (1kHz) for piezo trigger detection (brief pulses)":"100ms polling (10Hz) reduces audio glitches while maintaining responsive UI","\n        if (millis() - lastMcpRead > ").concat(this.modules.some(function(e){return"GateIn"===e.type})?"1":"100",") {\n            lastMcpRead = millis();\n            updateHardware();\n        }\n\n        // Update control signals at 100Hz\n        static unsigned long lastControlUpdate = 0;\n        if (millis() - lastControlUpdate > 10) {\n            lastControlUpdate = millis();\n            updateControl();\n        }\n\n        // Update NeoPixels every 100ms\n        static unsigned long lastNeoPixelUpdate = 0;\n        if (millis() - lastNeoPixelUpdate > 100) {\n            lastNeoPixelUpdate = millis();\n            updateNeoPixels();\n        }\n\n        // Yield to FreeRTOS scheduler (1ms delay)\n        vTaskDelay(1 / portTICK_PERIOD_MS);\n    }\n}\n\n// Core 1 Loop: Audio Processing ONLY\nvoid loop() {\n    // Generate and output audio buffer\n    // This runs as fast as possible on Core 1\n    processAudio();\n    outputAudio();\n}\n        ")),this.loopCode.push('\nvoid updateHardware() {\n    // Batch read all MCP23017 inputs (single I2C transaction) into global variable\n    inputs = mcp.readGPIOAB();\n\n    // DEBUG: Print raw MCP23017 input values periodically\n    static unsigned long lastInputDebug = 0;\n    static uint16_t lastInputs = 0xFFFF;\n    if (inputs != lastInputs || millis() - lastInputDebug > 5000) {\n        lastInputDebug = millis();\n        lastInputs = inputs;\n        Serial.print("MCP23017 raw inputs: 0x");\n        Serial.println(inputs, HEX);\n    }\n        ');var t=this.modules.some(function(e){return"GateGen"===e.type});this.loopCode.push("\n    // DEDICATED ENCODER BANKING SYSTEM\n    // ================================\n    // Encoder controls bank switching for virtual pots/buttons\n    // LED Bank Indication (clockwise navigation):\n    //   Bank 1: Gate1 LED    → Bank 2: Gate2 LED     → Bank 3: MIDI-IN LED\n    //   Bank 4: MIDI-OUT LED → Bank 5: Gate3 LED     → Bank 6: Gate4 LED → wraps to Bank 1\n    //\n    // Hardware: GPIO13(A), GPIO8(B), GPIO6(button)\n    // LEDs temporarily override normal operation during navigation\n    \n    \n    int encoderA = digitalRead(".concat(N.ENCODER_A,");\n    int encoderB = digitalRead(").concat(N.ENCODER_B,");\n    bool encoderBtn = !digitalRead(").concat(N.ENCODER_BTN,'); // Active low (pullup)\n    \n    // 20-detent encoder: One detent = one menu step (improved precision)\n    static unsigned long lastEncoderChange = 0;\n    static int encoderState = 0;\n    static const int encoderStates[4][2] = {{0,1},{1,1},{1,0},{0,0}}; // Quadrature sequence\n    \n    // Detect state changes for precise detent detection\n    int currentState = (encoderA << 1) | encoderB;\n    static int lastState = 0;\n    \n    if (currentState != lastState && millis() - lastEncoderChange > 25) { // 25ms debounce for 20-detent encoder\n        // Determine direction by comparing state transitions\n        int direction = 0;\n        if ((lastState == 0 && currentState == 1) || (lastState == 1 && currentState == 3) ||\n            (lastState == 3 && currentState == 2) || (lastState == 2 && currentState == 0)) {\n            direction = 1; // Clockwise\n        } else if ((lastState == 0 && currentState == 2) || (lastState == 2 && currentState == 3) ||\n                   (lastState == 3 && currentState == 1) || (lastState == 1 && currentState == 0)) {\n            direction = -1; // Counter-clockwise\n        }\n        \n        if (direction != 0) {\n            lastEncoderChange = millis();\n\n            // Additional safeguard: prevent rapid bank changes within 150ms (20-detent encoder)\n            static unsigned long lastBankChange = 0;\n            if (millis() - lastBankChange >= 150) {\n                lastBankChange = millis();\n\n            Serial.print("DEBUG: Encoder direction = ");\n            Serial.print(direction);\n            Serial.print(", currentBank before = ");\n            Serial.print(currentBank);\n            Serial.print(", activeBanks = ");\n            Serial.println(activeBanks);\n\n            if (direction > 0) {\n                currentBank++;\n                Serial.print("DEBUG: After increment, currentBank = ");\n                Serial.print(currentBank);\n                if (currentBank > activeBanks) {\n                    Serial.print(" > activeBanks, resetting to 1");\n                    currentBank = 1;\n                }\n                Serial.println();\n            } else {\n                currentBank--;\n                Serial.print("DEBUG: After decrement, currentBank = ");\n                Serial.print(currentBank);\n                if (currentBank < 1) {\n                    Serial.print(" < 1, setting to activeBanks");\n                    currentBank = activeBanks;\n                }\n                Serial.println();\n            }\n\n                // Show bank indicator LED\n                showingBankIndicator = true;\n                bankIndicatorTime = millis();\n                Serial.print("Bank navigation (detent-precise): ");\n                Serial.println(currentBank);\n            } else {\n                Serial.println("DEBUG: Ignoring rapid encoder change");\n            }\n        }\n        lastState = currentState;\n    }\n    \n    // Encoder button: long-press detection for future automation recording\n    // Short press (<1s): Toggle Gate Generator start/stop\n    // Long press (>1s): Toggle automation recording (future feature)\n\n    // On button press, record timestamp\n    if (encoderBtn && !lastEncoderBtn) {\n        encoderBtnPressTime = millis();\n        encoderBtnLongPressHandled = false;\n        Serial.println("DEBUG: Encoder button pressed");\n    }\n\n    // Check for long press while button is still held (>1000ms)\n    if (encoderBtn && (millis() - encoderBtnPressTime > 1000) && !encoderBtnLongPressHandled) {\n        // LONG PRESS: Encoder button available for Automation mode selection\n        Serial.println("LONG PRESS: Encoder button held - Automation mode select active");\n        encoderBtnLongPressHandled = true;\n        enc1_buttonLongPressed = true; // Expose to Automation modules\n    }\n\n    // While button is held after long press, keep enc1_buttonLongPressed true\n    if (encoderBtn && encoderBtnLongPressHandled) {\n        enc1_buttonLongPressed = true;\n    }\n\n    // Clear enc1_buttonLongPressed when button is released\n    if (!encoderBtn && enc1_buttonLongPressed) {\n        enc1_buttonLongPressed = false;\n        Serial.println("Encoder button released - mode select inactive");\n    }\n\n    // DEBUG: Show button state and timing while held\n    if (encoderBtn && encoderBtnPressTime > 0) {\n        static unsigned long lastDebug = 0;\n        if (millis() - lastDebug > 200) {  // Print every 200ms while held\n            lastDebug = millis();\n            unsigned long holdTime = millis() - encoderBtnPressTime;\n            Serial.print("DEBUG: Button held for ");\n            Serial.print(holdTime);\n            Serial.print("ms, longPressHandled=");\n            Serial.println(encoderBtnLongPressHandled);\n        }\n    }\n\n    // On button release, check if it was a short press\n    if (!encoderBtn && lastEncoderBtn && !encoderBtnLongPressHandled) {\n        // SHORT PRESS: Toggle Gate Generator or show bank\n        ').concat(t?'\n        // Toggle Gate Generator run state\n        gate1_running = !gate1_running;\n        Serial.print("Gate Generator ");\n        Serial.println(gate1_running ? "STARTED" : "STOPPED");\n\n        // Show bank indicator when stopped\n        if (!gate1_running) {\n            showingBankIndicator = true;\n            bankIndicatorTime = millis();\n        }\n        ':'\n        // No Gate Generator - show current bank\n        showingBankIndicator = true;\n        bankIndicatorTime = millis();\n        Serial.print("Current bank: ");\n        Serial.println(currentBank);\n        ',"\n    }\n\n    // Bank indicator LED control (only controls indicator LEDs, not button LEDs)\n    if (showingBankIndicator) {\n        // Turn off only the bank indicator LEDs (not button LEDs!)\n        mcp.digitalWrite(").concat(G.MIDI_IN_LED,", LOW);\n        mcp.digitalWrite(").concat(G.MIDI_OUT_LED,', LOW);\n        // Gate LEDs controlled via MCP23017 (set to LOW)\n        mcp.digitalWrite(GATE1_LED_PIN, LOW);\n        mcp.digitalWrite(GATE2_LED_PIN, LOW);\n        mcp.digitalWrite(GATE3_LED_PIN, LOW);\n        mcp.digitalWrite(GATE4_LED_PIN, LOW);\n\n        // Light up the current bank indicator\n        Serial.print("Lighting bank indicator for bank: ");\n        Serial.println(currentBank);\n        switch(currentBank) {\n            case 1:\n                mcp.digitalWrite(GATE1_LED_PIN, HIGH);\n                Serial.println("Gate1 LED ON");\n                break;    // Bank 1: Gate1 LED\n            case 2:\n                mcp.digitalWrite(GATE2_LED_PIN, HIGH);\n                Serial.println("Gate2 LED ON");\n                break;    // Bank 2: Gate2 LED\n            case 3:\n                mcp.digitalWrite(').concat(G.MIDI_IN_LED,', HIGH);\n                Serial.println("MIDI-IN LED ON");\n                break;  // Bank 3: MIDI-IN LED\n            case 4:\n                mcp.digitalWrite(').concat(G.MIDI_OUT_LED,', HIGH);\n                Serial.println("MIDI-OUT LED ON");\n                break; // Bank 4: MIDI-OUT LED\n            case 5:\n                mcp.digitalWrite(GATE3_LED_PIN, HIGH);\n                Serial.println("Gate3 LED ON");\n                break;    // Bank 5: Gate3 LED\n            case 6:\n                mcp.digitalWrite(GATE4_LED_PIN, HIGH);\n                Serial.println("Gate4 LED ON");\n                break;    // Bank 6: Gate4 LED\n            case 7: /* Reserved for future expansion */ break;\n            case 8: /* Reserved for future expansion */ break;\n        }\n\n        // Auto-fade back to functional LED display after 1 second\n        if (millis() - bankIndicatorTime > 1000) {\n            showingBankIndicator = false;\n            Serial.println("Bank indicator faded - returning to functional LED display");\n        }\n    } else {\n        // Functional LED feedback (Gate/MIDI activity) when NOT showing bank indicator\n\n        // Gate In LEDs (GPA4→Gate1 LED, GPA5→Gate2 LED)\n        mcp.digitalWrite(GATE1_LED_PIN, led_gatein1_active ? HIGH : LOW);\n        mcp.digitalWrite(GATE2_LED_PIN, led_gatein2_active ? HIGH : LOW);\n\n        // Gate Out LEDs (Gate3 LED, Gate4 LED)\n        mcp.digitalWrite(GATE3_LED_PIN, led_gateout1_active ? HIGH : LOW);\n        mcp.digitalWrite(GATE4_LED_PIN, led_gateout2_active ? HIGH : LOW);\n\n        // MIDI In LED (50ms flash on activity)\n        if (led_midiin_active && (millis() - led_midiin_time < 50)) {\n            mcp.digitalWrite(').concat(G.MIDI_IN_LED,", HIGH);\n        } else {\n            mcp.digitalWrite(").concat(G.MIDI_IN_LED,", LOW);\n            led_midiin_active = false;\n        }\n\n        // MIDI Out LED (50ms flash on activity)\n        if (led_midiout_active && (millis() - led_midiout_time < 50)) {\n            mcp.digitalWrite(").concat(G.MIDI_OUT_LED,", HIGH);\n        } else {\n            mcp.digitalWrite(").concat(G.MIDI_OUT_LED,", LOW);\n            led_midiout_active = false;\n        }\n    }\n    \n    lastEncoderA = encoderA;\n    lastEncoderBtn = encoderBtn;\n        ")),this.modules.filter(function(e){return["Pot","LEDButton","Encoder","GateOut","GateIn"].includes(e.type)}).forEach(function(n,t){var a=e.modules.findIndex(function(e){return e.id===n.id});switch(n.type){case"LEDButton":var o=n.params.index||1,r=n.params.bank||1,i=n.params.locked||!1;e.loopCode.push("\n    // Button ".concat(a," (Bank ").concat(r,", Physical ").concat(o).concat(i?" - LOCKED":"",")\n    btn").concat(o,"_lastState = btn").concat(o,"_state;\n    if (").concat(i?"true":"currentBank == ".concat(r),") {\n        // Physical buttons use actual hardware pin mapping (Button 1=GPA2, 2=GPA1, 3=GPA0, 4=GPA3)\n        bool rawBit = (inputs & (1 << BTN_PIN_").concat(o,")) != 0; // Use actual MCP23017 pin from ESP32Config\n        btn").concat(o,"_state = !rawBit; // Inverted due to pullup\n        btn").concat(o,"_pressed = btn").concat(o,"_state && !btn").concat(o,"_lastState;\n        btn").concat(o,"_gate = btn").concat(o,"_state;  // Raw gate signal always follows button state\n        btn").concat(o,"_output = btn").concat(o,"_state ? 1.0 : 0.0;\n        \n        // DEBUG: Print button state changes\n        if (btn").concat(o,"_state != btn").concat(o,'_lastState) {\n            Serial.print("Button ').concat(a," (Physical ").concat(o,'): ");\n            Serial.print(btn').concat(o,'_state ? "PRESSED" : "RELEASED");\n            Serial.print(" (raw bit: ");\n            Serial.print(rawBit);\n            Serial.print(", inputs: 0x");\n            Serial.print(inputs, HEX);\n            Serial.println(")");\n        }\n        \n        // DEBUG: Print button press detection\n        if (btn').concat(o,'_pressed) {\n            Serial.println("BUTTON EDGE DETECTED!");\n        }\n\n        // Note: Button LED feedback is handled by NeoPixels in updateNeoPixels() on Core 0\n        // MCP23017 pins 6-9 are Gate LEDs and MIDI LEDs, NOT button LEDs\n    } else {\n        // Button not in current bank - set to inactive\n        btn').concat(o,"_state = false;\n        btn").concat(o,"_pressed = false;\n        btn").concat(o,"_gate = false;  // CRITICAL: Clear gate signal for proper bank isolation\n        btn").concat(o,"_output = 0.0;\n    }\n                    "));break;case"GateIn":var c=n.params.index||1,l=e.hardwareModules.generateControlCode(n,c,e.connections);l&&e.loopCode.push(l)}}),this.loopCode.push("\n}\n        "),this.loopCode.push("\nvoid updateControl() {\n        "),this.loopCode.push("\n        unsigned long currentTime = millis(); // Shared time for all control modules\n        "),this.modules.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";if("ADSR"!==n.type)switch(n.type){case"GateGen":e.loopCode.push("\n        // Gate Generator ".concat(o," - Clock-triggered gate with S&H\n        bool clockTrigger = false;\n        \n        // Update BPM from pot connection if available\n        float currentBPM = gate").concat(o,"_self_clock_bpm;\n        // Update probability from pot connection if available\n        float currentProbability = gate").concat(o,"_probability;\n                    "));var r=e.connections.find(function(e){return e.to.id==="".concat(n.id,":self_clock_bpm")});if(r){var i,c=r.from.id.split(":")[0],l=e.modules.find(function(e){return e.id===c});if(null===(i=c.match(/\d+$/))||void 0===i||i[0],l&&"Pot"===l.type){var s=e.getPotReference(l.id);s&&e.loopCode.push("        currentBPM = 60.0 + ".concat(s,"_value * 240.0; // BPM from pot (60-300 BPM)"))}}var u=e.connections.find(function(e){return e.to.id==="".concat(n.id,":probability")});if(u){var p,d=u.from.id.split(":")[0],f=e.modules.find(function(e){return e.id===d});if(null===(p=d.match(/\d+$/))||void 0===p||p[0],f&&"Pot"===f.type){var m=e.getPotReference(f.id);m&&e.loopCode.push("        currentProbability = ".concat(m,"_value; // Probability from pot"))}}var _=e.connections.find(function(e){return e.to.id==="".concat(n.id,":gate_input")});if(_){var g,h=_.from.id.split(":")[0],v=e.modules.find(function(e){return e.id===h}),b=(null===(g=h.match(/\d+$/))||void 0===g?void 0:g[0])||"1";if(v&&b>=0){if("LEDButton"===v.type){var y=v.params.index||1;e.loopCode.push("        gate".concat(o,"_gate_input = btn").concat(y,"_state; // Gate input from button ").concat(y)),e.loopCode.push("        gate".concat(o,"_use_self_clock = true; // Button connected - run sequence when button held"))}else"ADSR"===v.type?e.loopCode.push("        gate".concat(o,"_gate_input = adsr").concat(b,"_output; // Gate input from ADSR")):"LFO"===v.type?e.loopCode.push("        gate".concat(o,"_gate_input = lfo").concat(b,"_output; // Gate input from LFO")):"Clock"===v.type?e.loopCode.push("        gate".concat(o,"_gate_input = clock").concat(b,"_out1; // Gate input from clock")):e.loopCode.push("        gate".concat(o,"_gate_input = ").concat(v.type.toLowerCase()).concat(b,"_output; // Gate input"));e.loopCode.push("        gate".concat(o,"_gate_enabled = (gate").concat(o,"_gate_input > 0.5); // Gate active when > 0.5"))}else e.loopCode.push("        gate".concat(o,"_gate_enabled = true; // Invalid gate input connection - always enabled"))}else e.loopCode.push("        gate".concat(o,"_gate_enabled = true; // No gate input - always enabled"));var k=e.connections.find(function(e){return e.to.id==="".concat(n.id,":sh_input")});if(k){var S,x=k.from.id.split(":")[0],E=e.modules.find(function(e){return e.id===x}),w=(null===(S=x.match(/\d+$/))||void 0===S?void 0:S[0])||"1";if(E)if("LFO"===E.type)e.loopCode.push("        gate".concat(o,"_sh_input = lfo").concat(w,"_output; // S&H input from LFO"));else if("Pot"===E.type){var P=e.getPotReference(E.id);e.loopCode.push("        gate".concat(o,"_sh_input = ").concat(P,"_value; // S&H input from Pot"))}else"ADSR"===E.type?e.loopCode.push("        gate".concat(o,"_sh_input = adsr").concat(w,"_output; // S&H input from ADSR")):e.loopCode.push("        gate".concat(o,"_sh_input = ").concat(E.type.toLowerCase()).concat(w,"_output; // S&H input"))}e.loopCode.push("\n        // Check for clock input or use self-clock (only when running)\n        if (gate".concat(o,"_use_self_clock && gate").concat(o,"_running) {\n            // Self-clock mode - generate internal clock\n            float clockPeriod = 60000.0 / currentBPM; // Period in ms using current BPM\n            if (currentTime - gate").concat(o,"_last_self_clock >= clockPeriod) {\n                clockTrigger = true;\n                gate").concat(o,"_last_self_clock = currentTime;\n            }\n        } else {\n            // External clock mode - would need external clock source\n            // This mode is for connecting to other clock generators\n        }\n        \n        // Process gate logic (only when gate is enabled)\n        // Gate input acts as an on/off toggle - when enabled, generator runs normally\n        if (clockTrigger && !gate").concat(o,"_last_clock && gate").concat(o,"_gate_enabled) {\n            // Rising edge of clock - check probability\n            float random_val = (float)random(0, 1000) / 1000.0; // 0.0 to 1.0\n            if (random_val <= currentProbability) {\n                gate").concat(o,"_state = true;\n                gate").concat(o,'_start_time = currentTime;\n                \n                // Debug: Gate triggered\n                Serial.println("Gate Generator triggered");\n                \n                // Sample & Hold: capture input value on gate trigger\n                if (gate').concat(o,"_sh_enabled) {\n                    gate").concat(o,"_sh_output = gate").concat(o,'_sh_input;\n                }\n            }\n            // Debug: Print probability info occasionally\n            static unsigned long lastProbDebug = 0;\n            if (millis() - lastProbDebug > 2000) { // Every 2 seconds\n                lastProbDebug = millis();\n                Serial.print("Gate Gen Prob: ");\n                Serial.print(currentProbability);\n                Serial.print(", Random: ");\n                Serial.print(random_val);\n                Serial.print(", Triggered: ");\n                Serial.println(random_val <= currentProbability ? "YES" : "NO");\n            }\n        }\n        \n        // Gate input controls whether the generator is enabled to run\n        // When gate_enabled is false, generator doesn\'t trigger new gates\n        \n        gate').concat(o,"_last_clock = clockTrigger;\n        \n        // Check gate length (in self-clock mode)\n        if (gate").concat(o,"_state) {\n            float gatePeriod = 60000.0 / currentBPM; // Period in ms using current BPM\n            float gateDuration = gatePeriod * gate").concat(o,"_length; // Gate duration in ms\n            \n            if (currentTime - gate").concat(o,"_start_time >= gateDuration) {\n                gate").concat(o,"_state = false;\n            }\n        }\n        \n        // Gate input behavior: when gate_enabled is false, generator stops triggering new gates\n        // but existing gate states continue their natural length for musical timing\n        \n        gate").concat(o,"_output = gate").concat(o,"_state ? 1.0 : 0.0;\n                    "));break;case"Clock":e.loopCode.push("\n        // Clock ".concat(o," - 8-output clock divider/multiplier\n        if (clock").concat(o,"_running) {\n            clock").concat(o,"_period_ms = 60000.0 / clock").concat(o,"_bpm; // Period in ms\n            \n            if (currentTime - clock").concat(o,"_last_tick >= clock").concat(o,"_period_ms) {\n                clock").concat(o,"_last_tick = currentTime;\n                clock").concat(o,"_master_pulse = true;\n                \n                // Update master phase (0.0 to 1.0 per beat)\n                clock").concat(o,"_master_phase += 1.0;\n                if (clock").concat(o,"_master_phase >= 1.0) clock").concat(o,"_master_phase = 0.0;\n                \n                // Process each output with its division ratio\n                // Output 1\n                clock").concat(o,"_counter1++;\n                if (clock").concat(o,"_counter1 >= clock").concat(o,"_div1) {\n                    clock").concat(o,"_counter1 = 0;\n                    clock").concat(o,"_out1 = !clock").concat(o,"_out1; // Toggle\n                }\n                \n                // Output 2\n                clock").concat(o,"_counter2++;\n                if (clock").concat(o,"_counter2 >= clock").concat(o,"_div2) {\n                    clock").concat(o,"_counter2 = 0;\n                    clock").concat(o,"_out2 = !clock").concat(o,"_out2; // Toggle\n                }\n                \n                // Output 3\n                clock").concat(o,"_counter3++;\n                if (clock").concat(o,"_counter3 >= clock").concat(o,"_div3) {\n                    clock").concat(o,"_counter3 = 0;\n                    clock").concat(o,"_out3 = !clock").concat(o,"_out3; // Toggle\n                }\n                \n                // Output 4\n                clock").concat(o,"_counter4++;\n                if (clock").concat(o,"_counter4 >= clock").concat(o,"_div4) {\n                    clock").concat(o,"_counter4 = 0;\n                    clock").concat(o,"_out4 = !clock").concat(o,"_out4; // Toggle\n                }\n                \n                // Output 5\n                clock").concat(o,"_counter5++;\n                if (clock").concat(o,"_counter5 >= clock").concat(o,"_div5) {\n                    clock").concat(o,"_counter5 = 0;\n                    clock").concat(o,"_out5 = !clock").concat(o,"_out5; // Toggle\n                }\n                \n                // Output 6\n                clock").concat(o,"_counter6++;\n                if (clock").concat(o,"_counter6 >= clock").concat(o,"_div6) {\n                    clock").concat(o,"_counter6 = 0;\n                    clock").concat(o,"_out6 = !clock").concat(o,"_out6; // Toggle\n                }\n                \n                // Output 7\n                clock").concat(o,"_counter7++;\n                if (clock").concat(o,"_counter7 >= clock").concat(o,"_div7) {\n                    clock").concat(o,"_counter7 = 0;\n                    clock").concat(o,"_out7 = !clock").concat(o,"_out7; // Toggle\n                }\n                \n                // Output 8\n                clock").concat(o,"_counter8++;\n                if (clock").concat(o,"_counter8 >= clock").concat(o,"_div8) {\n                    clock").concat(o,"_counter8 = 0;\n                    clock").concat(o,"_out8 = !clock").concat(o,"_out8; // Toggle\n                }\n            } else {\n                clock").concat(o,"_master_pulse = false;\n            }\n        }\n                    "));break;case"Oscillator":var C=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"gate"===e.to.port});if(C){var R=C.from.id.split(":")[0],L=e.modules.find(function(e){return e.id===R});if(L&&"LEDButton"===L.type){var I=L.params.index||1;e.loopCode.push("    // Oscillator ".concat(o," gate from Button ").concat(I)),e.loopCode.push(e.generateBankAwareButtonAssignment(L.id,"osc".concat(o,"_gate = btn").concat(I,"_gate ? 1.0 : 0.0;")))}else if(L&&"ADSR"===L.type){var M,D=(null===(M=R.match(/\d+$/))||void 0===M?void 0:M[0])||"1";e.loopCode.push("    // Oscillator ".concat(o," gate from ADSR ").concat(D)),e.loopCode.push("    osc".concat(o,"_gate = adsr").concat(D,"_output;"))}else if(L&&"GateGen"===L.type){var A,T=(null===(A=R.match(/\d+$/))||void 0===A?void 0:A[0])||"1";e.loopCode.push("    // Oscillator ".concat(o," gate from GateGen ").concat(T)),e.loopCode.push("    osc".concat(o,"_gate = gate").concat(T,"_output;"))}}var O=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"freq"===e.to.port});if(O){var B=O.from.id.split(":")[0],z=e.modules.find(function(e){return e.id===B});if(z&&"Scale"===z.type){var F,N=(null===(F=B.match(/\d+$/))||void 0===F?void 0:F[0])||"1";e.controlConnectionCode.push("    // Oscillator ".concat(o," frequency from Scale ").concat(N)),e.controlConnectionCode.push("    osc".concat(o,"_freq = scale").concat(N,"_output;"))}}var G=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"gain"===e.to.port});if(G){var q=G.from.id.split(":")[0],U=e.modules.find(function(e){return e.id===q});if(U&&"Pot"===U.type){var W=e.getPotReference(U.id);e.loopCode.push("    // Oscillator ".concat(o," gain from ").concat(U.id)),e.loopCode.push("    osc".concat(o,"_amplitude = ").concat(W,"_value; // 0-1 amplitude control"))}else if(U&&"ADSR"===U.type){var V,j=(null===(V=q.match(/\d+$/))||void 0===V?void 0:V[0])||"1";e.loopCode.push("    // Oscillator ".concat(o," gain from ADSR ").concat(j)),e.loopCode.push("    osc".concat(o,"_amplitude = adsr").concat(j,"_output;"))}}var H=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"wave"===e.to.port});if(H){var $=H.from.id.split(":")[0],K=e.modules.find(function(e){return e.id===$});if(K&&"Pot"===K.type){var Y=e.getPotReference(K.id);e.loopCode.push("    // Oscillator ".concat(o," waveform from ").concat(K.id)),e.loopCode.push(e.generateBankAwareAssignment(K.id,"osc".concat(o,"_waveform = (int)(").concat(Y,"_value * 3.99);")))}}var X=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"morph"===e.to.port});if(X){var Z=X.from.id.split(":")[0],Q=e.modules.find(function(e){return e.id===Z});if(Q&&"Pot"===Q.type){var J=e.getPotReference(Q.id);e.loopCode.push("    // Oscillator ".concat(o," morph from ").concat(Q.id)),e.loopCode.push("    osc".concat(o,"_morph = ").concat(J,"_value; // 0-1 wave morphing"))}}break;case"NoiseGenerator":case"Noise":var ee=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"gate"===e.to.port});if(ee){var ne=ee.from.id.split(":")[0],te=e.modules.find(function(e){return e.id===ne});if(te&&"LEDButton"===te.type){var ae=te.params.index||1;e.loopCode.push("    // NoiseGenerator ".concat(o," gate from Button ").concat(ae)),e.loopCode.push(e.generateBankAwareButtonAssignment(te.id,"noise".concat(o,"_gate = btn").concat(ae,"_gate ? 1.0 : 0.0;")))}else if(te&&"ADSR"===te.type){var oe,re=(null===(oe=ne.match(/\d+$/))||void 0===oe?void 0:oe[0])||"1";e.loopCode.push("    // NoiseGenerator ".concat(o," gate from ADSR ").concat(re)),e.loopCode.push("    noise".concat(o,"_gate = adsr").concat(re,"_output;"))}else if(te&&"GateGen"===te.type){var ie,ce=(null===(ie=ne.match(/\d+$/))||void 0===ie?void 0:ie[0])||"1";e.loopCode.push("    // NoiseGenerator ".concat(o," gate from GateGen ").concat(ce)),e.loopCode.push("    noise".concat(o,"_gate = gate").concat(ce,"_output;"))}}var le=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"gain"===e.to.port});if(le){var se=le.from.id.split(":")[0],ue=e.modules.find(function(e){return e.id===se});if(ue&&"Pot"===ue.type){var pe=e.getPotReference(ue.id);e.loopCode.push("    // NoiseGenerator ".concat(o," gain from ").concat(ue.id)),e.loopCode.push(e.generateBankAwareAssignment(ue.id,"noise".concat(o,"_gain = ").concat(pe,"_value;")))}}var de=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"type"===e.to.port});if(de){var fe=de.from.id.split(":")[0],me=e.modules.find(function(e){return e.id===fe});if(me&&"Pot"===me.type){var _e=e.getPotReference(me.id);e.loopCode.push("    // NoiseGenerator ".concat(o," type from ").concat(me.id)),e.loopCode.push(e.generateBankAwareAssignment(me.id,"noise".concat(o,"_type = (int)(").concat(_e,"_value * 3.99);")))}}var ge=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"morph"===e.to.port});if(ge){var he=ge.from.id.split(":")[0],ve=e.modules.find(function(e){return e.id===he});if(ve&&"Pot"===ve.type){var be=e.getPotReference(ve.id);e.loopCode.push("    // NoiseGenerator ".concat(o," morph from ").concat(ve.id)),e.loopCode.push(e.generateBankAwareAssignment(ve.id,"noise".concat(o,"_morph = ").concat(be,"_value;")))}}break;case"StereoMixer4":["g1","g2","g3","g4"].forEach(function(t,a){var r=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&e.to.port===t});if(r){var i=r.from.id.split(":")[0],c=e.modules.find(function(e){return e.id===i});if(c&&"Pot"===c.type){var l=e.getPotReference(c.id);e.loopCode.push("    // StereoMixer4 ".concat(o," ").concat(t," from ").concat(c.id)),e.loopCode.push(e.generateBankAwareAssignment(c.id,"stereoMixer4_".concat(o,"_gain").concat(a+1," = ").concat(l,"_value;")))}}})}}),this.modules.forEach(function(n,t){if("KickDrum"===n.type){var a=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"gate"===e.to.port});if(a){var o,r=a.from.id.split(":")[0],i=e.modules.find(function(e){return e.id===r}),c=(null===(o=r.match(/\d+$/))||void 0===o?void 0:o[0])||"1";i&&"LEDButton"===i.type?e.loopCode.push("\n    // Kick Drum ".concat(t," trigger detection from LEDButton\n    if (btn").concat(c,"_pressed) {\n        // Start all envelopes for kick").concat(t,"\n        kick").concat(t,"_osc_amp_stage = 1;\n        kick").concat(t,"_osc_amp_time = 0.0;\n        kick").concat(t,"_osc_pitch_stage = 1;\n        kick").concat(t,"_osc_pitch_time = 0.0;\n        kick").concat(t,"_noise_amp_stage = 1;\n        kick").concat(t,'_noise_amp_time = 0.0;\n        Serial.println("KICK ').concat(t,' TRIGGERED!");\n        Serial.print("  Osc muted: ");\n        Serial.println(kick').concat(t,'_osc_mute ? "YES" : "NO");\n        Serial.print("  Noise muted: ");\n        Serial.println(kick').concat(t,'_noise_mute ? "YES" : "NO");\n        Serial.print("  Osc level: ");\n        Serial.println(kick').concat(t,'_osc_level);\n        Serial.print("  Noise level: ");\n        Serial.println(kick').concat(t,"_noise_level);\n    }\n                        ")):i&&"GateGen"===i.type&&e.loopCode.push("\n    // Kick Drum ".concat(t," trigger detection from Gate Generator\n    static bool kick").concat(t,"_lastGateState = false;\n    if (gate").concat(c,"_output > 0.5 && !kick").concat(t,"_lastGateState) {\n        // Rising edge trigger from Gate Generator\n        kick").concat(t,"_osc_amp_stage = 1;\n        kick").concat(t,"_osc_amp_time = 0.0;\n        kick").concat(t,"_osc_pitch_stage = 1;\n        kick").concat(t,"_osc_pitch_time = 0.0;\n        kick").concat(t,"_noise_amp_stage = 1;\n        kick").concat(t,'_noise_amp_time = 0.0;\n        Serial.println("KICK ').concat(t,' TRIGGERED BY GATE GENERATOR!");\n        Serial.print("  Gate signal: ");\n        Serial.println(gate').concat(c,'_output);\n        Serial.print("  Osc muted: ");\n        Serial.println(kick').concat(t,'_osc_mute ? "YES" : "NO");\n        Serial.print("  Noise muted: ");\n        Serial.println(kick').concat(t,'_noise_mute ? "YES" : "NO");\n    }\n    kick').concat(t,"_lastGateState = (gate").concat(c,"_output > 0.5);\n                        "))}}});var a=new Map;this.modules.forEach(function(e){if("Pot"===e.type){var n=e.params.index||1,t=e.params.bank||1,o=e.params.locked||!1;a.has(n)||a.set(n,[]),a.get(n).push({bank:t,locked:o})}}),a.forEach(function(n,t){var a,o=N.ANALOG_PINS[t-1]||N.ANALOG_PINS[0],r=n.map(function(e){return e.bank}).filter(function(e,n,t){return t.indexOf(e)===n}),i=n.some(function(e){return e.locked});a=i?"true":1===r.length?"currentBank == ".concat(r[0]):r.map(function(e){return"currentBank == ".concat(e)}).join(" || "),e.loopCode.push("\n    // Pot ".concat(t," (Physical ").concat(t,", Banks: ").concat(r.join(", ")).concat(i?" - LOCKED":"",") - SOFT TAKEOVER\n    static int pot").concat(t,"_last_bank = -1;\n    static float pot").concat(t,"_bank_values[6] = {0}; // Store value per bank (MAX_BANKS)\n    static float pot").concat(t,"_smoothed = 0.0; // Smoothed ADC reading to reduce jitter\n    int pot").concat(t,"_raw = analogRead(").concat(o,");\n    float pot").concat(t,"_raw_normalized = pot").concat(t,"_raw / 4095.0;\n\n    // Exponential smoothing filter (alpha=0.2) to reduce ESP32 ADC noise\n    pot").concat(t,"_smoothed = pot").concat(t,"_smoothed * 0.8 + pot").concat(t,"_raw_normalized * 0.2;\n    pot").concat(t,"_physical = pot").concat(t,"_smoothed; // Use smoothed value\n\n    if (").concat(a,") {\n        // Pot is active in current bank\n\n        // Check for first-time initialization or bank change\n        if (pot").concat(t,"_last_bank == -1) {\n            // First time entering any bank - initialize to physical position immediately\n            pot").concat(t,"_value = pot").concat(t,"_physical;\n            pot").concat(t,"_target = pot").concat(t,"_physical;\n            pot").concat(t,"_taken_over = true;\n            pot").concat(t,"_bank_values[currentBank - 1] = pot").concat(t,'_physical;\n            Serial.print("Pot').concat(t,' INITIAL in Bank ");\n            Serial.print(currentBank);\n            Serial.print(", Value: ");\n            Serial.println(pot').concat(t,"_physical);\n        } else if (pot").concat(t,"_last_bank != currentBank) {\n            // Bank just changed - save old bank's value, load new bank's target\n            pot").concat(t,"_bank_values[pot").concat(t,"_last_bank - 1] = pot").concat(t,"_value; // Save old bank value\n            pot").concat(t,"_target = pot").concat(t,"_bank_values[currentBank - 1]; // Load new bank's last value as target\n            pot").concat(t,"_taken_over = false;\n            pot").concat(t,'_last_bank_change = millis();\n            Serial.print("Pot').concat(t,' Bank Change: ");\n            Serial.print(pot').concat(t,'_last_bank);\n            Serial.print(" -> ");\n            Serial.print(currentBank);\n            Serial.print(", Target: ");\n            Serial.print(pot').concat(t,'_target);\n            Serial.print(", Physical: ");\n            Serial.println(pot').concat(t,"_physical);\n        }\n\n        // Soft takeover logic (only if not already taken over)\n        if (!pot").concat(t,"_taken_over) {\n            // Check if physical pot is close enough to target (within 5%)\n            float takeover_threshold = 0.05;\n            if (abs(pot").concat(t,"_physical - pot").concat(t,"_target) < takeover_threshold) {\n                pot").concat(t,'_taken_over = true;\n                Serial.print("Pot').concat(t,' TAKEOVER at physical=");\n                Serial.print(pot').concat(t,'_physical);\n                Serial.print(", target=");\n                Serial.println(pot').concat(t,"_target);\n            } else {\n                // Not taken over yet - maintain target value\n                pot").concat(t,"_value = pot").concat(t,"_target;\n            }\n        }\n\n        if (pot").concat(t,"_taken_over) {\n            // Pot has taken over - follow physical position\n            pot").concat(t,"_value = pot").concat(t,"_physical;\n        }\n\n        // Save current value to this bank's storage\n        pot").concat(t,"_bank_values[currentBank - 1] = pot").concat(t,"_value;\n        pot").concat(t,"_last_bank = currentBank;\n\n        // Debug: Print pot value periodically (disabled for cleaner serial output)\n        // static unsigned long pot").concat(t,"_lastDebug = 0;\n        // if (millis() - pot").concat(t,"_lastDebug > 1000) {\n        //     pot").concat(t,'_lastDebug = millis();\n        //     Serial.print("Pot').concat(t," (Banks: ").concat(r.join(","),') - Physical: ");\n        //     Serial.print(pot').concat(t,'_physical);\n        //     Serial.print(", Value: ");\n        //     Serial.print(pot').concat(t,'_value);\n        //     Serial.print(", TakenOver: ");\n        //     Serial.print(pot').concat(t,'_taken_over ? "YES" : "NO");\n        //     Serial.print(", CurrentBank: ");\n        //     Serial.println(currentBank);\n        // }\n    } else {\n        // Pot not in current bank - maintain last value and update bank tracking\n        pot').concat(t,"_last_bank = currentBank;\n        // pot").concat(t,"_value remains unchanged\n    }\n                    "))}),this.connections.forEach(function(n){var t=n.from.id.split(":")[0],a=n.to.id.split(":")[0],o=e.modules.find(function(e){return e.id===t}),r=e.modules.find(function(e){return e.id===a});if(o&&r&&("HarmonicSequencer"!==o.type||!n.from.port.includes("step"))){if(n.from&&n.to&&("value"===n.from.port||"pitch_hz"===n.from.port))if(o&&r&&"Pot"===o.type){var i,c=o.params.index||1,l=o.params.bank||1,s=o.params.locked||!1,u=(null===(i=a.match(/\d+$/))||void 0===i?void 0:i[0])||"1";"Oscillator"===r.type&&"freq"===n.to.port?e.potConnectionCode.push("\n    // Oscillator ".concat(u," frequency from Pot").concat(c,"\n        if (").concat(s?"true":"currentBank == ".concat(l),") { osc").concat(u,"_freq = (pot").concat(c,"_value * 2000.0 + 20.0); } // Pot").concat(c," Bank ").concat(l,"\n                        ")):"Filter"===r.type&&"cutoff_hz"===n.to.port?e.potConnectionCode.push("\n    // Filter ".concat(u," cutoff from Pot").concat(c," (logarithmic response)\n        if (").concat(s?"true":"currentBank == ".concat(l),") {\n            // Logarithmic frequency mapping: 20Hz to 20kHz (3 decades)\n            filter").concat(u,"_cutoff = 20.0 * pow(1000.0, pot").concat(c,"_value);\n        } // Pot").concat(c," Bank ").concat(l," (logarithmic 20Hz-20kHz)\n                        ")):"LFO"===r.type&&"rate_hz"===n.to.port&&e.potConnectionCode.push("\n    // LFO ".concat(u," rate from Pot").concat(c,"\n        if (").concat(s?"true":"currentBank == ".concat(l),") { lfo").concat(u,"_rate_hz = pot").concat(c,"_value * 40.0; } // Pot").concat(c," Bank ").concat(l," (0-40 Hz)\n                        "))}else if(o&&r&&"HarmonicSequencer"===o.type&&"pitch_hz"===n.from.port){var p,d,f=(null===(p=t.match(/\d+$/))||void 0===p?void 0:p[0])||"1",m=(null===(d=a.match(/\d+$/))||void 0===d?void 0:d[0])||"1";"Oscillator"===r.type&&"freq"===n.to.port&&e.loopCode.push("\n    // Oscillator ".concat(m," frequency from HarmonicSequencer").concat(f," Hz output\n        osc").concat(m,"_freq = seq").concat(f,"_pitch_hz; // Direct Hz from HarmonicSequencer\n                        "))}if(n.from&&n.to&&"env"===n.from.port&&"pitch_cv"===n.to.port&&o&&r&&"ADSR"===o.type&&"Oscillator"===r.type){var _,g,h=(null===(_=t.match(/\d+$/))||void 0===_?void 0:_[0])||"1",v=(null===(g=a.match(/\d+$/))||void 0===g?void 0:g[0])||"1";e.controlConnectionCode.push("\n    // Oscillator ".concat(v," pitch modulation from ADSR ").concat(h,"\n        osc").concat(v,"_freq *= pow(2.0, (adsr").concat(h,"_output - 0.5) * (osc").concat(v,"_pitch_amount / 12.0)); // ADSR pitch CV (±pitch_amount semitones, use negative for kick drop)\n                    "))}if(n.from&&n.to&&"press"===n.from.port&&"bypass"===n.to.port&&o&&r&&"LEDButton"===o.type&&"Distortion"===r.type){var b,y,k=(null===(b=t.match(/\d+$/))||void 0===b?void 0:b[0])||"1",S=(null===(y=a.match(/\d+$/))||void 0===y?void 0:y[0])||"1";e.controlConnectionCode.push("\n    // Distortion ".concat(S," bypass from Button ").concat(k,"\n        dist").concat(S,"_bypass = btn").concat(k,"_pressed ? 1.0 : 0.0;\n                    "))}if(n.from&&n.to&&"gate"===n.from.port&&"record_trigger"===n.to.port&&o&&r&&"LEDButton"===o.type&&"Automation"===r.type){var x,E=o.params.index||1,w=(null===(x=a.match(/\d+$/))||void 0===x?void 0:x[0])||"1";e.controlConnectionCode.push("\n    // Automation ".concat(w," record trigger from Button ").concat(E,"\n        automation").concat(w,"_record_trigger = btn").concat(E,"_gate;\n                    "))}if(n.from&&n.to&&("press"===n.from.port||"gate"===n.from.port)&&"mode_select"===n.to.port&&o&&r&&"Automation"===r.type){var P,C,R=(null===(P=t.match(/\d+$/))||void 0===P?void 0:P[0])||"1",L=(null===(C=a.match(/\d+$/))||void 0===C?void 0:C[0])||"1";if("Encoder"===o.type)e.controlConnectionCode.push("\n    // Automation ".concat(L," mode select from Encoder ").concat(R," button\n    automation").concat(L,"_mode_select = enc").concat(R,"_buttonPressed;\n                        "));else if("LEDButton"===o.type){var I=o.params.index||1;e.controlConnectionCode.push("\n    // Automation ".concat(L," mode select from Button ").concat(I,"\n    automation").concat(L,"_mode_select = btn").concat(I,"_gate;\n                        "))}}if(n.from&&n.to&&n.from.port&&"clock"===n.to.port&&o&&r&&"Clock"===o.type&&"Automation"===r.type){var M,D,A=(null===(M=t.match(/\d+$/))||void 0===M?void 0:M[0])||"1",T=(null===(D=a.match(/\d+$/))||void 0===D?void 0:D[0])||"1";e.controlConnectionCode.push("\n    // Automation ".concat(T," clock sync from Clock ").concat(A,"\n        automation").concat(T,"_clock_input = clock").concat(A,"_output").concat(n.from.port.replace("out","")," > 0.5 ? 1.0 : 0.0;\n                    "))}if(n.from&&n.to&&"preset_cv"===n.to.port&&r&&"Distortion"===r.type){var O,B,z=(null===(O=t.match(/\d+$/))||void 0===O?void 0:O[0])||"1",F=(null===(B=a.match(/\d+$/))||void 0===B?void 0:B[0])||"1";if("Pot"===o.type&&"value"===n.from.port)e.controlConnectionCode.push("\n    // Distortion ".concat(F," preset CV from Pot ").concat(z,"\n        dist").concat(F,"_preset_cv = pot").concat(z,"_value; // 0-1 maps to presets 0-5\n                        "));else if("ADSR"===o.type&&"env"===n.from.port)e.controlConnectionCode.push("\n    // Distortion ".concat(F," preset CV from ADSR ").concat(z,"\n        dist").concat(F,"_preset_cv = adsr").concat(z,"_output; // 0-1 maps to presets 0-5\n                        "));else if("Modulation"===o.type&&["lfo1","lfo2","lfo3","lfo4"].includes(n.from.port)){var N=n.from.port.replace("lfo","");e.controlConnectionCode.push("\n    // Distortion ".concat(F," preset CV from Modulation ").concat(z," LFO").concat(N,"\n        dist").concat(F,"_preset_cv = mod").concat(z,"_lfo").concat(N,"_output; // 0-1 maps to presets 0-5\n                        "))}else"HarmonicSequencer"===o.type&&"cv1"===n.from.port?e.controlConnectionCode.push("\n    // Distortion ".concat(F," preset CV from HarmonicSequencer ").concat(z,"\n        dist").concat(F,"_preset_cv = seq").concat(z,"_cv1; // 0-1 maps to presets 0-5\n                        ")):"LFO"===o.type&&"out"===n.from.port&&e.controlConnectionCode.push("\n    // Distortion ".concat(F," preset CV from LFO ").concat(z,"\n        dist").concat(F,"_preset_cv = lfo").concat(z,"_output; // 0-1 maps to presets 0-5\n                        "))}}});var o=this.modules.filter(function(e){return"Automation"===e.type});o.length>0&&o.forEach(function(n){var t,a=(null===(t=n.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";e.controlConnectionCode.push("\n    // Automation ".concat(a," mode select from encoder button (built-in auto-wiring)\n    // Hold encoder button (>1s) + move pot to select playback mode (0=normal, 1=reverse, 2=2x, 3=0.5x, 4=pingpong)\n    automation").concat(a,"_mode_select = enc1_buttonLongPressed;\n                "))}),this.potConnectionCode.forEach(function(n){e.loopCode.push(n)}),this.controlConnectionCode.forEach(function(n){e.loopCode.push(n)}),this.modules.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";switch(n.type){case"Pot":case"Scale":break;case"ADSR":var r=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&("gate"===e.to.port||"trigger"===e.to.port)});e.loopCode.push("\n    // ADSR ".concat(o,"\n    float adsr").concat(o,"_currentTimescale = adsr").concat(o,"_timescale; // Default timescale\n    "));var i=e.connections.find(function(e){return e.to.id.includes("".concat(n.id,":"))&&"timescale"===e.to.port});if(i){var c,l=i.from.id.split(":")[0],s=e.modules.find(function(e){return e.id===l});if(null===(c=l.match(/\d+$/))||void 0===c||c[0],s&&"Pot"===s.type){var u=e.getPotReference(s.id);e.loopCode.push("    adsr".concat(o,"_currentTimescale = 0.1 + ").concat(u,"_value * 9.9; // Timescale from pot (0.1x to 10x)"))}}if(r){var p,d=r.from.id.split(":")[0],f=e.modules.find(function(e){return e.id===d}),m=(null===(p=d.match(/\d+$/))||void 0===p?void 0:p[0])||"1";if(f&&"LEDButton"===f.type){var _=f.params.index||1;e.loopCode.push("    adsr".concat(o,"_gate = btn").concat(_,"_state;"))}else f&&"GateGen"===f.type?e.loopCode.push("    adsr".concat(o,"_gate = gate").concat(m,"_output > 0.5; // Gate from GateGen")):f&&"GateIn"===f.type&&e.loopCode.push("    adsr".concat(o,"_gate = gatein").concat(m,"_trigger; // Trigger from Gate In"))}}}),this.loopCode.push("\n\n    // Control module processing (HarmonicSequencer, Scale, LFO) - runs on Core 0\n        "),this.controlChain.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";if("ADSR"!==n.type){if("HarmonicSequencer"===n.type){e.globalFunctions=e.globalFunctions||[];var r=e.controlModules.generateQuantizationFunction(n,o);r&&!e.globalFunctions.some(function(e){return e.includes("quantizePitch".concat(o))})&&e.globalFunctions.push(r);var i=e.controlModules.generateGlissandoFunction(n,o);i&&!e.globalFunctions.some(function(e){return e.includes("glissandoInterpolate".concat(o))})&&e.globalFunctions.push(i)}var c=e.controlModules.generateProcessingCode(n,o,e.connections);c&&(e.loopCode.push(c),"HarmonicSequencer"===n.type&&e.connections.forEach(function(n){var t=n.from.id.split(":")[0],a=n.to.id.split(":")[0],o=e.modules.find(function(e){return e.id===t}),r=e.modules.find(function(e){return e.id===a});if(o&&r&&"HarmonicSequencer"===o.type&&n.from.port.includes("step")){var i,c,l=(null===(i=t.match(/\d+$/))||void 0===i?void 0:i[0])||"1",s=(null===(c=a.match(/\d+$/))||void 0===c?void 0:c[0])||"1",u=n.from.port;u.includes("pitch")&&u.includes("_hz")&&"Oscillator"===r.type&&"freq"===n.to.port?e.loopCode.push("\n    // Oscillator ".concat(s," frequency from HarmonicSequencer").concat(l," ").concat(u,"\n        osc").concat(s,"_freq = seq").concat(l,"_").concat(u,"; // Direct Hz from HarmonicSequencer step\n                                ")):u.includes("gate")&&"ADSR"===r.type&&"gate"===n.to.port&&e.loopCode.push("\n    // ADSR ".concat(s," gate from HarmonicSequencer").concat(l," ").concat(u,"\n        adsr").concat(s,"_gate = (seq").concat(l,"_").concat(u," > 0.5); // Gate from HarmonicSequencer step\n                                "))}}))}}),this.loopCode.push("\n}\n        "),this.loopCode.push("\nvoid processAudio() {\n    // CPU load monitoring\n    static unsigned long processingStartMicros = 0;\n    static unsigned long lastCpuReportTime = 0;\n    static float maxCpuLoad = 0.0;\n    static float avgCpuLoad = 0.0;\n    static int cpuSampleCount = 0;\n\n    processingStartMicros = micros();\n    unsigned long currentTime = millis(); // Shared time for processAudio function\n\n    // Set control inputs for modular instances ONCE per buffer (not per sample)\n    "),this.modularInstances.forEach(function(n,t){var a=e.modules.find(function(n){return(n.id||"".concat(n.type).concat(e.modules.indexOf(n)))===t});a&&(console.log("Looking for connections to module: ".concat(a.id)),"Looper"===n.type?Object.entries({record:0,decay:1,reverse:2,speed:3}).forEach(function(t){var o=function(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||ye(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t,2),r=o[0],i=o[1],c=e.connections.find(function(e){return e.to.id==="".concat(a.id,":").concat(r)});if(c){var l=e.modules.find(function(e){return e.id===c.from.id.split(":")[0]});if(l){var s,u=(null===(s=l.params)||void 0===s?void 0:s.index)||1;"LEDButton"===l.type?(e.loopCode.push("    ".concat(n.instanceName,".setControl(").concat(i,", btn").concat(u,"_state ? 1.0f : 0.0f);  // ").concat(r," button")),console.log("Generated setControl(".concat(i,") for ").concat(n.instanceName,".").concat(r," from btn").concat(u,"_state"))):"Pot"===l.type?(e.loopCode.push("    ".concat(n.instanceName,".setControl(").concat(i,", pot").concat(u,"_value);  // ").concat(r," pot")),console.log("Generated setControl(".concat(i,") for ").concat(n.instanceName,".").concat(r," from pot").concat(u,"_value"))):"LFO"===l.type&&(e.loopCode.push("    ".concat(n.instanceName,".setControl(").concat(i,", lfo").concat(u,"_output);  // ").concat(r," LFO")),console.log("Generated setControl(".concat(i,") for ").concat(n.instanceName,".").concat(r," from lfo").concat(u,"_output")))}}}):e.connections.forEach(function(t){if(console.log("Checking connection: ".concat(t.from.id," → ").concat(t.to.id)),t.to.id.startsWith("".concat(a.id,":"))){var o=e.modules.find(function(e){return e.id===t.from.id.split(":")[0]});if(o&&"LEDButton"===o.type){var r=o.params.index||1,i="btn".concat(r,"_state");e.loopCode.push("    ".concat(n.instanceName,".setControl(0, ").concat(i," ? 1.0f : 0.0f);")),console.log("Generated setControl for ".concat(n.instanceName," with ").concat(i))}}}))}),this.loopCode.push("\n    // Set control inputs for modular instances ONCE per buffer (not per sample)\n    "),this.audioChain.forEach(function(n,t){var a=e.modules.findIndex(function(e){return e.id===n.id});"SamplePlayer"===n.type&&(console.log("Processing Sample Player ".concat(n.id," connections (preprocessing)...")),e.generateSamplePlayerPreProcessing(n,a))}),this.loopCode.push("\n        // ADSR envelope processing (buffer-rate timing on Core 1)\n        "),this.controlChain.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";if("ADSR"===n.type){var r=e.controlModules.generateProcessingCode(n,o,e.connections);r&&e.loopCode.push(r)}}),this.loopCode.push("\n".concat(this.modules.some(function(e){return"LineIn"===e.type})?"\n    // Read I2S input buffer from PCM1802 ADC\n    size_t bytes_read = 0;\n    esp_err_t read_result = i2s_read(I2S_NUM_0, i2sInputBuffer, sizeof(i2sInputBuffer), &bytes_read, portMAX_DELAY);\n    if (read_result != ESP_OK || bytes_read == 0) {\n        // Clear input buffer on read failure\n        memset(i2sInputBuffer, 0, sizeof(i2sInputBuffer));\n    }\n":"","\n    for (int i = 0; i < BUFFER_SIZE; i++) {\n        // Clear buffers for this sample\n        leftBuffer[i] = 0.0;\n        rightBuffer[i] = 0.0;\n\n        // Interpolate ADSR envelopes within buffer to prevent zipper noise\n        float interpFactor = (float)i / (float)BUFFER_SIZE;")),this.modules.forEach(function(n){if("ADSR"===n.type){var t,a=(null===(t=n.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";e.loopCode.push("\n        adsr".concat(a,"_output = adsr").concat(a,"_prevOutput + (adsr").concat(a,"_targetOutput - adsr").concat(a,"_prevOutput) * interpFactor;"))}}),this.loopCode.push("\n\n        // Audio processing chain\n        "),this.audioChain.forEach(function(n,t){var a,o=(null===(a=n.id.match(/\d+$/))||void 0===a?void 0:a[0])||"1";if(!["Scale","ADSR","LFO","Clock"].includes(n.type)&&!["CleanReverb","Delay","Filter","VCA","Distortion","I2SOut","StereoMixer4","Matrix2x2","Panner"].includes(n.type)){"Oscillator"===n.type&&console.log("Processing Oscillator ".concat(n.id," (").concat(o,") in audio loop"));var r=null;(r=e.audioModules.generateProcessingCode(n,o,e.connections))||(r=e.sampleModules.generateProcessingCode(n,o,e.connections))||(r=e.hardwareModules.generateProcessingCode(n,o,e.connections))?e.loopCode.push(r):(console.warn("No modular processor found for audio module: ".concat(n.type)),e.loopCode.push("        // TODO: Implement ".concat(n.type," in modular system")))}}),this.audioChain.forEach(function(n){if(["CleanReverb","Delay","Filter","VCA","Distortion"].includes(n.type)){var t,a=(null===(t=n.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";"CleanReverb"===n.type?e.loopCode.push("        cleanreverb".concat(a,"_inputL = 0.0; cleanreverb").concat(a,"_inputR = 0.0; // Clear inputs")):"Delay"===n.type?e.loopCode.push("        delay".concat(a,"_inputL = 0.0; delay").concat(a,"_inputR = 0.0; // Clear inputs")):"VCA"===n.type?e.loopCode.push("        vca".concat(a,"_inputL = 0.0; vca").concat(a,"_inputR = 0.0; // Clear inputs")):"Filter"===n.type?e.loopCode.push("        filter".concat(a,"_inputL = 0.0; filter").concat(a,"_inputR = 0.0; // Clear inputs")):"Distortion"===n.type&&e.loopCode.push("        dist".concat(a,"_inputL = 0.0; dist").concat(a,"_inputR = 0.0; // Clear inputs"));var o=e.generateConnectionsToModule(n.id);o&&e.loopCode.push(o);var r=e.audioModules.generateProcessingCode(n,a,e.connections);r&&e.loopCode.push(r)}}),this.audioChain.forEach(function(n){if(["StereoMixer4","Matrix2x2","Panner"].includes(n.type)){var t,a=(null===(t=n.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1";"StereoMixer4"===n.type&&(e.loopCode.push("        stereoMixer4_".concat(a,"_input1L = 0.0; stereoMixer4_").concat(a,"_input1R = 0.0; // Clear inputs")),e.loopCode.push("        stereoMixer4_".concat(a,"_input2L = 0.0; stereoMixer4_").concat(a,"_input2R = 0.0;")),e.loopCode.push("        stereoMixer4_".concat(a,"_input3L = 0.0; stereoMixer4_").concat(a,"_input3R = 0.0;")),e.loopCode.push("        stereoMixer4_".concat(a,"_input4L = 0.0; stereoMixer4_").concat(a,"_input4R = 0.0;")));var o=e.generateConnectionsToModule(n.id);o&&e.loopCode.push(o);var r=e.audioModules.generateProcessingCode(n,a,e.connections);r&&e.loopCode.push(r)}}),this.audioChain.forEach(function(n){if("I2SOut"===n.type||"PCM5102A Out"===n.type){var t,a=(null===(t=n.id.match(/\d+$/))||void 0===t?void 0:t[0])||"1",o=e.generateConnectionsToModule(n.id);o&&e.loopCode.push(o);var r=e.audioModules.generateProcessingCode(n,a,e.connections);r&&e.loopCode.push(r)}}),this.loopCode.push("\n        // Initialize buffers (only if no I2S module has written to them)\n        // Note: I2S modules write directly to buffers, other modules add to them\n        ");var r=this.modules.some(function(e){return"I2SOut"===e.type}),i=this.modules.find(function(e){return"I2SOut"===e.type});if(i&&!r){var c=this.connections.filter(function(e){return e.to.id==="".concat(i.id,":L")}),l=this.connections.filter(function(e){return e.to.id==="".concat(i.id,":R")});c.length>0&&c.forEach(function(n){var t=n.from.id.split(":")[0],a=e.modules.find(function(e){return e.id===t});if(a){var o,r=(null===(o=t.match(/\d+$/))||void 0===o?void 0:o[0])||"1";"KickDrum"===a.type?e.loopCode.push("        leftBuffer[i] += kick".concat(r,"_output;")):"Oscillator"===a.type?e.loopCode.push("        leftBuffer[i] += osc".concat(r,"_outputL;")):"Wavetable"===a.type?e.loopCode.push("        leftBuffer[i] += wavetable".concat(r,"_output;")):"VCA"===a.type?e.loopCode.push("        leftBuffer[i] += vca".concat(r,"_outputL;")):"GranularSynth"===a.type||"GranularPSRAM"===a.type||"GranularDense"===a.type?e.loopCode.push("        leftBuffer[i] += granular".concat(r,"_outputL;")):"SDPlayer"===a.type||"SamplePlayer"===a.type?e.loopCode.push("        leftBuffer[i] += sdPlayer".concat(r,"_outputL;")):"StereoMixer4"===a.type?e.loopCode.push("        leftBuffer[i] += stereoMixer4_".concat(r,"_outputL;")):"Filter"===a.type?e.loopCode.push("        leftBuffer[i] += filter".concat(r,"_outputL;")):"Delay"===a.type?e.loopCode.push("        leftBuffer[i] += delay".concat(r,"_outputL;")):"AudioMath"===a.type?e.loopCode.push("        leftBuffer[i] += audioMath".concat(r,"_output;")):"Panner"===a.type?e.loopCode.push("        leftBuffer[i] += panner".concat(r,"_outputL;")):"AdvancedLooper"===a.type?e.loopCode.push("        leftBuffer[i] += advancedLooper".concat(r,"_outputL;")):"SnareDrum"===a.type?e.loopCode.push("        leftBuffer[i] += snareDrum".concat(r,"_output;")):a.type}}),l.length>0&&l.forEach(function(n){var t=n.from.id.split(":")[0],a=e.modules.find(function(e){return e.id===t});if(a){var o,r=(null===(o=t.match(/\d+$/))||void 0===o?void 0:o[0])||"1";"KickDrum"===a.type?e.loopCode.push("        rightBuffer[i] += kick".concat(r,"_output;")):"Oscillator"===a.type?e.loopCode.push("        rightBuffer[i] += osc".concat(r,"_outputR;")):"Wavetable"===a.type?e.loopCode.push("        rightBuffer[i] += wavetable".concat(r,"_output;")):"VCA"===a.type?e.loopCode.push("        rightBuffer[i] += vca".concat(r,"_outputR;")):"GranularSynth"===a.type||"GranularPSRAM"===a.type||"GranularDense"===a.type?e.loopCode.push("        rightBuffer[i] += granular".concat(r,"_outputR;")):"SDPlayer"===a.type||"SamplePlayer"===a.type?e.loopCode.push("        rightBuffer[i] += sdPlayer".concat(r,"_outputR;")):"StereoMixer4"===a.type?e.loopCode.push("        rightBuffer[i] += stereoMixer4_".concat(r,"_outputR;")):"Filter"===a.type?e.loopCode.push("        rightBuffer[i] += filter".concat(r,"_outputR;")):"Delay"===a.type?e.loopCode.push("        rightBuffer[i] += delay".concat(r,"_outputR;")):"AudioMath"===a.type?e.loopCode.push("        rightBuffer[i] += audioMath".concat(r,"_output;")):"Panner"===a.type?e.loopCode.push("        rightBuffer[i] += panner".concat(r,"_outputR;")):"AdvancedLooper"===a.type?e.loopCode.push("        rightBuffer[i] += advancedLooper".concat(r,"_outputR;")):"SnareDrum"===a.type?e.loopCode.push("        rightBuffer[i] += snareDrum".concat(r,"_output;")):a.type}}),0===c.length&&0===l.length&&this.loopCode.push("\n        // DEBUG FALLBACK: No I2S connections found, but modules should be explicitly connected\n        // Fallback disabled to prevent double-adding signals\n        ")}else this.loopCode.push("\n        // DEBUG FALLBACK: No I2S module found - modules should be explicitly connected\n        // Fallback disabled to prevent double-adding signals\n        ");this.modularInstances.forEach(function(n,t){var a=e.modules.find(function(n){return(n.id||"".concat(n.type).concat(e.modules.indexOf(n)))===t});a&&(e.loopCode.push("\n        \n        // Process modular ".concat(n.type," instance ").concat(n.instanceName,"\n        ").concat(n.instanceName,"_inputL = 0.0f;\n        ").concat(n.instanceName,"_inputR = 0.0f;")),e.connections.forEach(function(t){if(t.to.id.startsWith("".concat(a.id,":"))){var o=e.modules.find(function(e){return e.id===t.from.id.split(":")[0]});if(o){var r,i=(null===(r=o.id.match(/\d+$/))||void 0===r?void 0:r[0])||"1";t.to.id.includes("inL")&&("Oscillator"===o.type?e.loopCode.push("        ".concat(n.instanceName,"_inputL = osc").concat(i,"_outputL;")):"LineIn"===o.type&&e.loopCode.push("        ".concat(n.instanceName,"_inputL = linein").concat(i,"_outputL;"))),t.to.id.includes("inR")&&("Oscillator"===o.type?e.loopCode.push("        ".concat(n.instanceName,"_inputR = osc").concat(i,"_outputR;")):"LineIn"===o.type&&e.loopCode.push("        ".concat(n.instanceName,"_inputR = linein").concat(i,"_outputR;")))}}}),e.loopCode.push("        ".concat(n.instanceName,".process(").concat(n.instanceName,"_inputL, ").concat(n.instanceName,"_inputR);")),e.connections.forEach(function(t){if(t.from.id.startsWith("".concat(a.id,":"))){var o=e.modules.find(function(e){return e.id===t.to.id.split(":")[0]});o&&"I2SOut"===o.type&&(t.from.id.includes("outL")&&t.to.id.includes("L")&&e.loopCode.push("        leftBuffer[i] += ".concat(n.instanceName,".outL;")),t.from.id.includes("outR")&&t.to.id.includes("R")&&e.loopCode.push("        rightBuffer[i] += ".concat(n.instanceName,".outR;")))}}))}),this.loopCode.push('\n    }\n\n    // CPU load monitoring - calculate processing time\n    unsigned long processingTimeMicros = micros() - processingStartMicros;\n    float availableTimeMicros = (BUFFER_SIZE * 1000000.0) / SAMPLE_RATE; // Time available for this buffer\n    float cpuLoad = (processingTimeMicros / availableTimeMicros) * 100.0;\n\n    // Track statistics\n    if (cpuLoad > maxCpuLoad) maxCpuLoad = cpuLoad;\n    avgCpuLoad = (avgCpuLoad * cpuSampleCount + cpuLoad) / (cpuSampleCount + 1);\n    cpuSampleCount++;\n\n    // Print CPU load report every second\n    if (millis() - lastCpuReportTime > 1000) {\n        lastCpuReportTime = millis();\n\n        Serial.print("CPU Load - Current: ");\n        Serial.print(cpuLoad, 1);\n        Serial.print("%, Avg: ");\n        Serial.print(avgCpuLoad, 1);\n        Serial.print("%, Max: ");\n        Serial.print(maxCpuLoad, 1);\n        Serial.print("% (");\n        Serial.print(processingTimeMicros);\n        Serial.print("us / ");\n        Serial.print((int)availableTimeMicros);\n        Serial.print("us) @ ");\n        Serial.print(getCpuFrequencyMhz());\n        Serial.print("MHz");\n\n        if (cpuLoad > 90.0) {\n            Serial.print(" ⚠️ WARNING: CPU OVERLOAD!");\n        }\n        Serial.println();\n\n        // Debug: Print buffer contents periodically\n        float maxLeft = 0.0, maxRight = 0.0;\n        for (int i = 0; i < BUFFER_SIZE; i++) {\n            if (abs(leftBuffer[i]) > maxLeft) maxLeft = abs(leftBuffer[i]);\n            if (abs(rightBuffer[i]) > maxRight) maxRight = abs(rightBuffer[i]);\n        }\n        if (maxLeft > 0.0 || maxRight > 0.0) {\n            Serial.print("Audio buffer peaks - L: ");\n            Serial.print(maxLeft);\n            Serial.print(", R: ");\n            Serial.println(maxRight);\n        }\n\n        // Reset max for next period\n        maxCpuLoad = 0.0;\n        avgCpuLoad = 0.0;\n        cpuSampleCount = 0;\n    }\n}\n        ');var s=this.modules.some(function(e){return"LineIn"===e.type});this.loopCode.push("\nvoid outputAudio() {\n    // Convert float samples to ".concat(s?"32":"16","-bit integers and interleave with clipping protection\n    for (int i = 0; i < BUFFER_SIZE; i++) {\n        // Clamp float values to [-1.0, 1.0] range to prevent harsh clipping\n        float leftSample = leftBuffer[i];\n        float rightSample = rightBuffer[i];\n        if (leftSample > 1.0) leftSample = 1.0;\n        if (leftSample < -1.0) leftSample = -1.0;\n        if (rightSample > 1.0) rightSample = 1.0;\n        if (rightSample < -1.0) rightSample = -1.0;\n\n").concat(s?"        // 32-bit output (24-bit in 32-bit slot for PCM5102A compatibility)\n        i2sBuffer[i * 2] = ((int32_t)(leftSample * 8388608.0f)) << 8;      // Left channel\n        i2sBuffer[i * 2 + 1] = ((int32_t)(rightSample * 8388608.0f)) << 8;  // Right channel":"        i2sBuffer[i * 2] = (int16_t)(leftSample * 16000.0);     // Left channel\n        i2sBuffer[i * 2 + 1] = (int16_t)(rightSample * 16000.0); // Right channel","\n    }\n\n    // Write to I2S\n    size_t bytesWritten;\n    i2s_write(I2S_NUM_0, i2sBuffer, BUFFER_SIZE * ").concat(s?"8":"4",", &bytesWritten, portMAX_DELAY);\n}\n        "))}},{key:"generateSamplePlayerPreProcessing",value:function(e,n){var t=this.connections.find(function(n){return n.to.id==="".concat(e.id,":trig")||n.to.id==="".concat(e.id,":gate")}),a=this.connections.find(function(n){return n.to.id==="".concat(e.id,":gain")}),o=this.connections.find(function(n){return n.to.id==="".concat(e.id,":file_index")||n.to.id==="".concat(e.id,":sample_select")}),r=this.connections.find(function(n){return n.to.id==="".concat(e.id,":pitch")}),i=this.connections.find(function(n){return n.to.id==="".concat(e.id,":pitch_env")}),c=this.connections.find(function(n){return n.to.id==="".concat(e.id,":start_pos")}),l=this.connections.find(function(n){return n.to.id==="".concat(e.id,":end_pos")});if(console.log("Sample Player ".concat(n," connection debug:")),console.log("- trigConnection: ".concat(t?"FOUND":"NOT FOUND")),console.log("- fileIndexConnection: ".concat(o?"FOUND":"NOT FOUND")),console.log("- samplePitchConnection: ".concat(r?"FOUND":"NOT FOUND")),console.log("- startPosConnection: ".concat(c?"FOUND":"NOT FOUND")),console.log("- endPosConnection: ".concat(l?"FOUND":"NOT FOUND")),console.log("Module ID: ".concat(e.id)),console.log("All connections to this module:"),this.connections.filter(function(n){return n.to.id.startsWith(e.id)}).forEach(function(e){console.log("  ".concat(e.from.id," → ").concat(e.to.id))}),this.loopCode.push("\n    // Sample Player ".concat(n," - Pre-processing (trigger detection)\n    float sdPlayer").concat(n,"_trigger = 0.0;\n    float sdPlayer").concat(n,"_currentGain = sdPlayer").concat(n,"_gain;\n    float sdPlayer").concat(n,"_currentPitch = sdPlayer").concat(n,"_pitch;\n    int sdPlayer").concat(n,"_targetFile = sdPlayer").concat(n,"_currentFile;\n    float sdPlayer").concat(n,"_startPos = ").concat(e.params.start_pos||0,";\n    float sdPlayer").concat(n,"_endPos = ").concat(e.params.end_pos||1,";\n    \n    // Track loaded sample to avoid unnecessary reloads (declared globally)\n        ")),t){var s=t.from.id.split(":")[0],u=this.modules.find(function(e){return e.id===s});if(u&&"LEDButton"===u.type){var p=this.getButtonReference(u.id);this.loopCode.push("    sdPlayer".concat(n,"_trigger = ").concat(p,"_output;"))}else if(u&&"GateGen"===u.type){var d,f=(null===(d=s.match(/\d+$/))||void 0===d?void 0:d[0])||"1";this.loopCode.push("    sdPlayer".concat(n,"_trigger = gate").concat(f,"_output;"))}else if(u){var m,_=(null===(m=s.match(/\d+$/))||void 0===m?void 0:m[0])||"1";this.loopCode.push("    sdPlayer".concat(n,"_trigger = ").concat(u.type.toLowerCase()).concat(_,"_output;"))}}if(a){var g=a.from.id.split(":")[0],h=this.modules.find(function(e){return e.id===g});if(h&&"Pot"===h.type){var v=this.getPotReference(h.id);this.loopCode.push("    sdPlayer".concat(n,"_currentGain = ").concat(v,"_value;"))}else if(h&&"ADSR"===h.type){var b,y=(null===(b=g.match(/\d+$/))||void 0===b?void 0:b[0])||"1";this.loopCode.push("    sdPlayer".concat(n,"_currentGain = adsr").concat(y,"_output; // Gain from ADSR envelope"))}}if(o){var k=o.from.id.split(":")[0],S=this.modules.find(function(e){return e.id===k});if(S&&"Pot"===S.type){var x=this.getPotReference(S.id);this.loopCode.push("    // Dynamic sample selection: pot maps to actual sample count\n    if (sdPlayer".concat(n,"_sampleCount > 0) {\n        int oldTargetFile = sdPlayer").concat(n,"_targetFile;\n        sdPlayer").concat(n,"_targetFile = 1 + (int)(").concat(x,"_value * sdPlayer").concat(n,"_sampleCount);\n        if (sdPlayer").concat(n,"_targetFile > sdPlayer").concat(n,"_sampleCount) {\n            sdPlayer").concat(n,"_targetFile = sdPlayer").concat(n,"_sampleCount;\n        }\n        \n        // Debug sample selection changes\n        if (sdPlayer").concat(n,'_targetFile != oldTargetFile) {\n            Serial.printf("Sample selection changed: pot=%.3f, sampleCount=%d, targetFile=%d\\n", \n                         ').concat(x,"_value, sdPlayer").concat(n,"_sampleCount, sdPlayer").concat(n,"_targetFile);\n        }\n    } else {\n        sdPlayer").concat(n,'_targetFile = 1; // Default if no samples found\n        Serial.println("Warning: No samples found for selection!");\n    }'))}}else this.loopCode.push("    sdPlayer".concat(n,"_targetFile = 1; // Default to sample1.wav"));if(r){var E=r.from.id.split(":")[0],w=this.modules.find(function(e){return e.id===E});if(w&&"Pot"===w.type){var P=this.getPotReference(w.id);this.loopCode.push("    sdPlayer".concat(n,"_currentPitch = 0.5 + (").concat(P,"_value * 1.5); // Coarse pitch: 0.5x to 2.0x speed"))}else if(w&&"ADSR"===w.type){var C,R=(null===(C=E.match(/\d+$/))||void 0===C?void 0:C[0])||"1";this.loopCode.push("    sdPlayer".concat(n,"_currentPitch = adsr").concat(R,"_output; // Pitch from ADSR envelope"))}else if(w&&"Scale"===w.type){var L,I=(null===(L=E.match(/\d+$/))||void 0===L?void 0:L[0])||"1";this.loopCode.push("    // Convert Scale output (frequency Hz) to pitch ratio\n    float scaleFreq = scale".concat(I,"_output;\n    float scalePitchRatio = scaleFreq / 440.0; // Convert frequency to pitch ratio (440Hz = 1.0x)\n    scalePitchRatio = constrain(scalePitchRatio, 0.25, 4.0); // Limit to reasonable range\n    sdPlayer").concat(n,"_currentPitch = scalePitchRatio; // Musical pitch from Scale quantizer"))}else if(w){var M,D=(null===(M=E.match(/\d+$/))||void 0===M?void 0:M[0])||"1";this.loopCode.push("    sdPlayer".concat(n,"_currentPitch = 0.5 + (").concat(w.type.toLowerCase()).concat(D,"_output * 1.5); // Coarse pitch from ").concat(w.type))}}if(i){var A=i.from.id.split(":")[0],T=this.modules.find(function(e){return e.id===A});if(T&&"ADSR"===T.type){var O,B=(null===(O=A.match(/\d+$/))||void 0===O?void 0:O[0])||"1";this.loopCode.push("    // Pitch envelope modulation: ±2 semitones, center offset: 0\n    float pitchEnvMod = adsr".concat(B,"_output; // 0.0 to 1.0\n    float envSemitoneOffset = 0 + ((pitchEnvMod - 0.5) * 2.0 * 2); // ±range around center\n    float pitchEnvRatio = pow(2.0, envSemitoneOffset / 12.0); // Convert semitones to pitch ratio\n    sdPlayer").concat(n,"_currentPitch *= pitchEnvRatio; // Apply envelope modulation"))}}if(this.loopCode.push("    sdPlayer".concat(n,"_currentPitch = constrain(sdPlayer").concat(n,"_currentPitch, 0.1, 8.0); // Final safety limit")),c){var z=c.from.id.split(":")[0],F=this.modules.find(function(e){return e.id===z});if(F&&"Pot"===F.type){var N=this.getPotReference(F.id);this.loopCode.push("    sdPlayer".concat(n,"_startPos = ").concat(N,"_value; // 0.0 to 1.0"))}}if(l){var G=l.from.id.split(":")[0],q=this.modules.find(function(e){return e.id===G});if(q&&"Pot"===q.type){var U=this.getPotReference(q.id);this.loopCode.push("    sdPlayer".concat(n,"_endPos = ").concat(U,"_value; // 0.0 to 1.0"))}}this.loopCode.push("\n    // Single-voice MinimalWAVPlayer trigger detection (rising edge)\n    if (sdPlayer".concat(n,"_trigger > sdPlayer").concat(n,"_triggerThreshold && !sdPlayer").concat(n,'_lastTrigger) {\n        Serial.printf("Single-voice trigger: sample %d, pitch %.2f\\n", \n                     sdPlayer').concat(n,"_targetFile, sdPlayer").concat(n,"_currentPitch);\n        \n        // CRITICAL: No SD I/O during audio processing!\n        // Just flag that we need a different sample - let setup() or background task handle loading\n        if (sdPlayer").concat(n,"_targetFile != sdPlayer").concat(n,'_lastLoadedFile) {\n            Serial.println("Sample change requested - SD loading handled elsewhere");\n            // For now, keep using the currently loaded sample to avoid crashes\n        }\n        \n        // Apply position controls to current sample (safe during audio processing)\n        if (sdPlayer').concat(n,"_lastLoadedFile != -1) {\n            sdPlayer").concat(n,"_player.setStartPosition(sdPlayer").concat(n,"_startPos);\n            sdPlayer").concat(n,"_player.setEndPosition(sdPlayer").concat(n,"_endPos);\n            \n            // Always restart playback from beginning\n            sdPlayer").concat(n,"_player.play();\n            sdPlayer").concat(n,"_playing = true;\n        }\n    }\n    \n    // Stop playback on falling edge (button release)\n    if (sdPlayer").concat(n,"_trigger <= sdPlayer").concat(n,"_triggerThreshold && sdPlayer").concat(n,"_lastTrigger) {\n        if (sdPlayer").concat(n,'_playing) {\n            Serial.println("Single-voice release: stopping playback");\n            sdPlayer').concat(n,"_player.stop();\n            sdPlayer").concat(n,"_playing = false;\n        }\n    }\n    \n    sdPlayer").concat(n,"_lastTrigger = sdPlayer").concat(n,"_trigger > sdPlayer").concat(n,"_triggerThreshold;\n            "))}},{key:"generateAudioConnections",value:function(){var e=this;if(!this.connections||0===this.connections.length)return"// No audio connections to resolve";var n=[];return this.connections.forEach(function(t,a){var o,r,i,c,l,s;if(t.from&&"string"==typeof t.from)i=t.from,c=t.fromPort;else{if(!t.from||!t.from.id)return;i=t.from.id.split(":")[0],c=t.from.port||t.from.id.split(":")[1]}if(t.to&&"string"==typeof t.to)l=t.to,s=t.toPort;else{if(!t.to||!t.to.id)return;l=t.to.id.split(":")[0],s=t.to.port||t.to.id.split(":")[1]}var u=e.modules.find(function(e){return e.id===i}),p=e.modules.find(function(e){return e.id===l});if(u&&p){var d=(null===(o=i.match(/\d+$/))||void 0===o?void 0:o[0])||"1",f=(null===(r=l.match(/\d+$/))||void 0===r?void 0:r[0])||"1";if(e.isAudioPort(u.type,c)&&e.isAudioPort(p.type,s)){var m=e.getAudioOutputVariable(u.type,d,c),_=e.getAudioInputVariable(p.type,f,s);m&&_&&n.push("        ".concat(_," = ").concat(m,"; // ").concat(u.type).concat(d,":").concat(c," -> ").concat(p.type).concat(f,":").concat(s))}}}),n.join("\n")}},{key:"generateConnectionsToModule",value:function(e){var n=this;if(!this.connections||0===this.connections.length)return"";var t=[];return this.connections.forEach(function(a){var o,r,i,c,l,s;if(a.from&&"string"==typeof a.from)i=a.from,c=a.fromPort;else{if(!a.from||!a.from.id)return;i=a.from.id.split(":")[0],c=a.from.port||a.from.id.split(":")[1]}if(a.to&&"string"==typeof a.to)l=a.to,s=a.toPort;else{if(!a.to||!a.to.id)return;l=a.to.id.split(":")[0],s=a.to.port||a.to.id.split(":")[1]}if(l===e){var u=n.modules.find(function(e){return e.id===i}),p=n.modules.find(function(e){return e.id===l});if(u&&p){var d=(null===(o=i.match(/\d+$/))||void 0===o?void 0:o[0])||"1",f=(null===(r=l.match(/\d+$/))||void 0===r?void 0:r[0])||"1";if(n.isAudioPort(u.type,c)&&n.isAudioPort(p.type,s)){var m=n.getAudioOutputVariable(u.type,d,c),_=n.getAudioInputVariable(p.type,f,s);m&&_&&t.push("        ".concat(_," = ").concat(m,"; // ").concat(u.type).concat(d,":").concat(c," -> ").concat(p.type).concat(f,":").concat(s))}}}}),t.join("\n")}},{key:"isAudioPort",value:function(e,n){var t;return(null===(t={Oscillator:["outL","outR","L","R"],Wavetable:["outL","outR","L","R"],Noise:["out"],NoiseGenerator:["out"],LineIn:["L","R","outL","outR"],Filter:["in","out","inL","inR","outL","outR"],VCA:["inL","inR","outL","outR"],Distortion:["inL","inR","outL","outR"],Delay:["inL","inR","outL","outR"],Reverb:["inL","inR","outL","outR"],CleanReverb:["inL","inR","outL","outR"],StereoMixer4:["in1L","in1R","in2L","in2R","in3L","in3R","in4L","in4R","outL","outR","1L","1R","2L","2R","3L","3R","4L","4R"],I2SOut:["inL","inR","L","R"],"PCM5102A Out":["inL","inR","L","R"]}[e])||void 0===t?void 0:t.includes(n))||!1}},{key:"getAudioOutputVariable",value:function(e,n,t){switch(e){case"Oscillator":if("outL"===t||"L"===t)return"osc".concat(n,"_outputL");if("outR"===t||"R"===t)return"osc".concat(n,"_outputR");break;case"Wavetable":if("outL"===t||"L"===t)return"wt".concat(n,"_outputL");if("outR"===t||"R"===t)return"wt".concat(n,"_outputR");break;case"Noise":case"NoiseGenerator":if("out"===t)return"noise".concat(n,"_output");break;case"LineIn":if("L"===t||"outL"===t)return"linein".concat(n,"_outputL");if("R"===t||"outR"===t)return"linein".concat(n,"_outputR");break;case"Filter":if("out"===t)return"filter".concat(n,"_output");if("outL"===t)return"filter".concat(n,"_outputL");if("outR"===t)return"filter".concat(n,"_outputR");break;case"VCA":if("outL"===t)return"vca".concat(n,"_outputL");if("outR"===t)return"vca".concat(n,"_outputR");break;case"Distortion":if("outL"===t)return"dist".concat(n,"_outputL");if("outR"===t)return"dist".concat(n,"_outputR");break;case"Delay":if("outL"===t)return"delay".concat(n,"_outputL");if("outR"===t)return"delay".concat(n,"_outputR");break;case"Reverb":if("outL"===t)return"reverb".concat(n,"_outputL");if("outR"===t)return"reverb".concat(n,"_outputR");break;case"CleanReverb":if("outL"===t)return"cleanreverb".concat(n,"_outputL");if("outR"===t)return"cleanreverb".concat(n,"_outputR");break;case"StereoMixer4":if("outL"===t)return"stereoMixer4_".concat(n,"_outputL");if("outR"===t)return"stereoMixer4_".concat(n,"_outputR")}return null}},{key:"getAudioInputVariable",value:function(e,n,t){switch(e){case"Filter":if("in"===t)return"filter".concat(n,"_input");if("inL"===t)return"filter".concat(n,"_inputL");if("inR"===t)return"filter".concat(n,"_inputR");break;case"VCA":if("inL"===t)return"vca".concat(n,"_inputL");if("inR"===t)return"vca".concat(n,"_inputR");break;case"Distortion":if("inL"===t)return"dist".concat(n,"_inputL");if("inR"===t)return"dist".concat(n,"_inputR");break;case"Delay":if("inL"===t)return"delay".concat(n,"_inputL");if("inR"===t)return"delay".concat(n,"_inputR");break;case"Reverb":if("inL"===t)return"reverb".concat(n,"_inputL");if("inR"===t)return"reverb".concat(n,"_inputR");break;case"CleanReverb":if("inL"===t)return"cleanreverb".concat(n,"_inputL");if("inR"===t)return"cleanreverb".concat(n,"_inputR");break;case"StereoMixer4":if("in1L"===t||"1L"===t)return"stereoMixer4_".concat(n,"_input1L");if("in1R"===t||"1R"===t)return"stereoMixer4_".concat(n,"_input1R");if("in2L"===t||"2L"===t)return"stereoMixer4_".concat(n,"_input2L");if("in2R"===t||"2R"===t)return"stereoMixer4_".concat(n,"_input2R");if("in3L"===t||"3L"===t)return"stereoMixer4_".concat(n,"_input3L");if("in3R"===t||"3R"===t)return"stereoMixer4_".concat(n,"_input3R");if("in4L"===t||"4L"===t)return"stereoMixer4_".concat(n,"_input4L");if("in4R"===t||"4R"===t)return"stereoMixer4_".concat(n,"_input4R");break;case"I2SOut":case"PCM5102A Out":if("inL"===t||"L"===t)return"i2sout".concat(n,"_inputL");if("inR"===t||"R"===t)return"i2sout".concat(n,"_inputR")}return null}},{key:"generateNetlist",value:function(){var e=["/*"," * PATCH NETLIST"," * ============"],n=this.connections.filter(function(e){return"audio"===e.from.kind}),t=this.connections.filter(function(e){return"ctrl"===e.from.kind||"control"===e.from.kind});return n.length>0&&(e.push(" *"," * AUDIO CONNECTIONS:"),n.forEach(function(n){var t=n.from.id.split(":"),a=n.to.id.split(":");e.push(" * [audio] ".concat(t[0],":").concat(n.from.port," → ").concat(a[0],":").concat(n.to.port))})),t.length>0&&(e.push(" *"," * CONTROL CONNECTIONS:"),t.forEach(function(n){var t=n.from.id.split(":"),a=n.to.id.split(":");e.push(" * [ctrl] ".concat(t[0],":").concat(n.from.port," → ").concat(a[0],":").concat(n.to.port))})),e.push(" */"),e.join("\n")}},{key:"assembleCode",value:function(){return["// Generated ESP32-S3 Patcher Code","// Target: ESP32-S3 with PCM5102A DAC and MCP23017 I/O Expander","// Generated on: "+(new Date).toISOString(),this.modules.some(function(e){return"SDPlayer"===e.type||"SamplePlayer"===e.type||"KickDrum"===e.type||"SnareDrum"===e.type})?"// File transfer functionality is built-in - no external libraries required":"","",this.generateNetlist(),""].concat(be(Array.from(this.includes)),[""],be(this.moduleClasses),[""],be(this.globalVariables),[""],be(this.globalFunctions||[]),[""],be(this.setupCode),[""],be(this.loopCode)).join("\n")}},{key:"estimateCPU",value:function(){var e=new Set(["HarmonicSequencer","BankSequencer","Scale","Modulation","Clock","GateGen","Pot","LEDButton","Encoder","MIDIIn","MIDIOut","GateOut"]),n={Oscillator:10,Wavetable:10,Noise:2,NoiseGenerator:2,ADSR:3,VCA:2,Filter:15,Delay:10,Reverb:40,CleanReverb:30,StereoMixer4:2,Matrix2x2:4,Panner:2,SamplePlayer:12,GranularDense:50,Looper:22,KickDrum:18,SnareDrum:18,SDPlay:10,I2SOut:2,"PCM5102A Out":2,HarmonicSequencer:0,BankSequencer:0,Scale:0,Modulation:0,Clock:0,GateGen:0,Pot:0,LEDButton:0,Encoder:0,MIDIIn:0,MIDIOut:0,GateOut:0},t=0,a=0,o=[];this.modules.forEach(function(r){var i=void 0!==n[r.type]?n[r.type]:5;e.has(r.type)?a++:t+=i,o.push({id:r.id,type:r.type,cost:i,core:e.has(r.type)?0:1})});var r=55*(t+=10),i=r/5442*100;return{percentage:Math.round(10*i)/10,breakdown:o,total:t,core0ModuleCount:a,estimatedCycles:r,availableCycles:5442,dualCore:!0}}}],n&&Ee(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function Ce(){var e,n,t="function"==typeof Symbol?Symbol:{},a=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function r(t,a,o,r){var l=a&&a.prototype instanceof c?a:c,s=Object.create(l.prototype);return Re(s,"_invoke",function(t,a,o){var r,c,l,s=0,u=o||[],p=!1,d={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return r=n,c=0,l=e,d.n=t,i}};function f(t,a){for(c=t,l=a,n=0;!p&&s&&!o&&n<u.length;n++){var o,r=u[n],f=d.p,m=r[2];t>3?(o=m===a)&&(l=r[(c=r[4])?5:(c=3,3)],r[4]=r[5]=e):r[0]<=f&&((o=t<2&&f<r[1])?(c=0,d.v=a,d.n=r[1]):f<m&&(o=t<3||r[0]>a||a>m)&&(r[4]=t,r[5]=a,d.n=m,c=0))}if(o||t>1)return i;throw p=!0,a}return function(o,u,m){if(s>1)throw TypeError("Generator is already running");for(p&&1===u&&f(u,m),c=u,l=m;(n=c<2?e:l)||!p;){r||(c?c<3?(c>1&&(d.n=-1),f(c,l)):d.n=l:d.v=l);try{if(s=2,r){if(c||(o="next"),n=r[o]){if(!(n=n.call(r,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,c<2&&(c=0)}else 1===c&&(n=r.return)&&n.call(r),c<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),c=1);r=e}else if((n=(p=d.n<0)?l:t.call(a,d))!==i)break}catch(n){r=e,c=1,l=n}finally{s=1}}return{value:n,done:p}}}(t,o,r),!0),s}var i={};function c(){}function l(){}function s(){}n=Object.getPrototypeOf;var u=[][a]?n(n([][a]())):(Re(n={},a,function(){return this}),n),p=s.prototype=c.prototype=Object.create(u);function d(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,Re(e,o,"GeneratorFunction")),e.prototype=Object.create(p),e}return l.prototype=s,Re(p,"constructor",s),Re(s,"constructor",l),l.displayName="GeneratorFunction",Re(s,o,"GeneratorFunction"),Re(p),Re(p,o,"Generator"),Re(p,a,function(){return this}),Re(p,"toString",function(){return"[object Generator]"}),(Ce=function(){return{w:r,m:d}})()}function Re(e,n,t,a){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Re=function(e,n,t,a){function r(n,t){Re(e,n,function(e){return this._invoke(n,t,e)})}n?o?o(e,n,{value:t,enumerable:!a,configurable:!a,writable:!a}):e[n]=t:(r("next",0),r("throw",1),r("return",2))},Re(e,n,t,a)}function Le(e,n,t,a,o,r,i){try{var c=e[r](i),l=c.value}catch(e){return void t(e)}c.done?n(l):Promise.resolve(l).then(a,o)}function Ie(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Me(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Me(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Me(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}const De=function(e){var n=e.module,t=e.onUpdateParam,o=e.onClose,r=e.embedded,i=void 0!==r&&r,c=e.activeLayer,l=void 0===c?"oscillator":c,s=e.setActiveLayer,u=e.onAudioLoaded,p=e.preloadedAudio,d=e.fixedEnvelopeType,f=void 0===d?null:d;console.log("🌊 EnvelopeWaveformEditor rendered with embedded =",i);var m=(0,a.useRef)(),_=(0,a.useRef)(),g=Ie((0,a.useState)(null),2),h=g[0],v=g[1],b=Ie((0,a.useState)({x:0,y:0}),2),y=(b[0],b[1]),k=Ie((0,a.useState)(null),2),S=k[0],x=k[1],E=Ie((0,a.useState)(null),2),w=E[0],P=E[1],C=Ie((0,a.useState)(!1),2),R=C[0],L=C[1],I=Ie((0,a.useState)(f||"amplitude"),2),M=I[0],D=I[1];(0,a.useEffect)(function(){if(p){var e=p.originalBuffer||p.audioBuffer;e&&(console.log("🔗 Using preloaded trimmed audio in EnvelopeWaveformEditor:",e),x(e),setTimeout(function(){K()},100))}},[p]);var A,T,O,B,z=function(e){var n=440*Math.pow(2,-4.75);if(e<=0)return"---";var t=Math.round(12*Math.log2(e/n)),a=Math.floor(t/12);return"".concat(["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][t%12]).concat(a)},F=200,N=40,G=720,q=320,U=function(){var e,a=(e=Ce().m(function e(a){var o,r,i,c,l,s;return Ce().w(function(e){for(;;)switch(e.p=e.n){case 0:if(a){e.n=1;break}return e.a(2);case 1:if(L(!0),e.p=2,(o=w)&&"closed"!==o.state||(o=new(window.AudioContext||window.webkitAudioContext),P(o)),"suspended"!==o.state){e.n=3;break}return e.n=3,o.resume();case 3:return e.n=4,a.arrayBuffer();case 4:return r=e.v,e.n=5,o.decodeAudioData(r);case 5:i=e.v,console.log("Loaded audio file:",{name:a.name,duration:i.duration,sampleRate:i.sampleRate,channels:i.numberOfChannels}),x(i),u&&(console.log("🔗 Calling onAudioLoaded with decodedBuffer"),c=i.getChannelData(0),l=new Float32Array(c),u(l,i)),n.params.sample_name&&""!==n.params.sample_name||t("sample_name",a.name.replace(/\.[^/.]+$/,"")),e.n=7;break;case 6:e.p=6,s=e.v,console.error("Failed to load audio file:",s),alert("Failed to load audio file: ".concat(a.name,"\n\nError: ").concat(s.message,"\n\nPlease try a different audio format (WAV, MP3, or OGG)."));case 7:return e.p=7,L(!1),e.f(7);case 8:return e.a(2)}},e,null,[[2,6,7,8]])}),function(){var n=this,t=arguments;return new Promise(function(a,o){var r=e.apply(n,t);function i(e){Le(r,a,o,i,c,"next",e)}function c(e){Le(r,a,o,i,c,"throw",e)}i(void 0)})});return function(e){return a.apply(this,arguments)}}(),W=function(e){var n=e.target.files[0];n&&U(n)},V=function(e){e.preventDefault();var n=Array.from(e.dataTransfer.files).find(function(e){return e.type.startsWith("audio/")||e.name.toLowerCase().match(/\.(wav|mp3|ogg|flac|aac)$/)});n&&U(n)},j=function(e){e.preventDefault()},H=function(e,n){var t=n.attack_ms,a=n.decay_ms,o=n.sustain,r=n.release_ms,i=n.attack_curve,c=n.decay_curve,l=n.release_curve,s=e*(t+a+200+r),u=0;if(s<=t){var p=s/t,d=p;switch(i){case"exp":d=(1-Math.exp(-5*p))/(1-Math.exp(-5));break;case"log":d=Math.log(1+9*p)/Math.log(10);break;case"sine":d=Math.sin(p*Math.PI/2);break;case"quad":d=p*p}u=d}else if(s<=t+a){var f=(s-t)/a,m=f;switch(c){case"exp":m=1-(1-Math.exp(-5*(1-f)))/(1-Math.exp(-5));break;case"log":m=1-Math.log(1+9*(1-f))/Math.log(10);break;case"sine":m=1-Math.sin((1-f)*Math.PI/2);break;case"quad":m=1-(1-f)*(1-f)}u=1-(1-o)*m}else if(s<=t+a+200)u=o;else{var _=(s-t-a-200)/r;if(_>=1)u=0;else{var g=_;switch(l){case"exp":g=1-(1-Math.exp(-5*(1-_)))/(1-Math.exp(-5));break;case"log":g=1-Math.log(1+9*(1-_))/Math.log(10);break;case"sine":g=1-Math.sin((1-_)*Math.PI/2);break;case"quad":g=1-(1-_)*(1-_)}u=o*(1-g)}}return Math.max(0,Math.min(1,u))},$=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"amplitude";e="sample"===l?"sample_".concat("filter"===t?"filter":"pitch"===t?"pitch":"amp"):"noise"===l?"noise_".concat("filter"===t?"filter":"amp"):"osc_".concat("pitch"===t?"pitch":"amp");var a={attack_ms:n.params["".concat(e,"_attack_ms")]||10,decay_ms:n.params["".concat(e,"_decay_ms")]||120,sustain:n.params["".concat(e,"_sustain")]||.6,release_ms:n.params["".concat(e,"_release_ms")]||200,attack_curve:n.params["".concat(e,"_attack_curve")]||"linear",decay_curve:n.params["".concat(e,"_decay_curve")]||"exp",release_curve:n.params["".concat(e,"_release_curve")]||"exp"};return console.log("🔧 getCurrentLayerParams: envelopeTab=".concat(t,", prefix=").concat(e,", result:"),a),a},K=function(){var e=m.current;if(e){var t,a,o=e.getContext("2d"),r=$(M);console.log("🎨 Drawing with params:",r,"activeEnvelopeTab:",M),o.fillStyle="#0f172a",o.fillRect(0,0,800,400),o.strokeStyle="#374151",o.lineWidth=1,o.setLineDash([2,2]);for(var i=0;i<=4;i++){var c=N+i*q/4;o.beginPath(),o.moveTo(N,c),o.lineTo(760,c),o.stroke();var s=N+i*G/4;o.beginPath(),o.moveTo(s,N),o.lineTo(s,360),o.stroke()}switch(o.setLineDash([]),l){case"oscillator":t=function(e,n,t){for(var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:44100,o=[],r=Math.floor(t*a),i=0;i<r;i++){var c=i/a,l=2*Math.PI*n*c;switch(e){case"sine":default:o[i]=Math.sin(l);break;case"saw":o[i]=l%(2*Math.PI)/(2*Math.PI)*2-1;break;case"square":o[i]=Math.sign(Math.sin(l));break;case"triangle":o[i]=2/Math.PI*Math.asin(Math.sin(l))}}return o}("sine",n.params.osc_freq||60,1);break;case"noise":t=function(e,n){for(var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:44100,a=[],o=Math.floor(n*t),r=0,i=0;i<o;i++){var c=void 0;switch(e){case"white":default:c=2*Math.random()-1;break;case"brown":c=r+.1*(2*Math.random()-1),r=c=Math.max(-1,Math.min(1,c));break;case"pink":c=(2*Math.random()-1)*Math.pow(Math.random(),.5)}a[i]=c}return a}(n.params.noise_type||"white",1);break;case"sample":t=function(){if(console.log("getRealSampleWaveform called, audioBuffer:",S),S&&S.getChannelData){var e=S.getChannelData(0),n=e.length,t=4e3;if(n-0>t){for(var a=(n-0)/t,o=[],r=0;r<t;r++){var i=Math.floor(0+r*a);o[r]=e[i]}return o}return Array.from(e.slice(0,n))}if(S&&S.length){console.log("Using Float32Array audioBuffer:",S.length,"samples");var c=4e3;if(S.length>c){for(var l=S.length/c,s=[],u=0;u<c;u++){var p=Math.floor(u*l);s[u]=S[p]}return s}return Array.from(S)}for(var d=[],f=Math.floor(44100),m=0;m<f;m++){var _=m/44100,g=Math.exp(8*-_),h=1+2*Math.exp(15*-_),v=2*Math.PI*60*h*_;d[m]=Math.sin(v)*g}return d}()}a="pitch"===M?function(e,t,a){for(var o="sample"===l?n.params.sample_pitch_amount||12:n.params.osc_pitch_amount||.5,r=[],i=0,c=0;c<e.length;c++){var s=c/(e.length-1),u=H(s,t),p=void 0;if("sample"===l){var d=u*o;p=a*Math.pow(2,d/12)}else p=a*Math.pow(2,u*o);e.length,(i+=2*Math.PI*p/44100)>=2*Math.PI&&(i-=2*Math.PI),r[c]=Math.sin(i)}return r}(t,r,n.params.osc_frequency||60):function(e,n){return e&&e.map?e.map(function(t,a){var o=a/(e.length-1);return t*H(o,n)}):(console.warn("applyEnvelopeToWaveform: waveform is undefined or not array-like"),[])}(t,r),o.strokeStyle="#4b5563",o.lineWidth=1,o.globalAlpha=.3,o.beginPath();for(var u=0;u<t.length;u+=Math.ceil(t.length/G)){var p=N+u/t.length*G,d=200+t[u]*q/4;0===u?o.moveTo(p,d):o.lineTo(p,d)}o.stroke(),o.globalAlpha=1;var f={oscillator:"#10b981",noise:"#f59e0b",sample:"#8b5cf6"};o.strokeStyle=f[l],o.lineWidth=2,o.beginPath();for(var _=0;_<a.length;_+=Math.ceil(a.length/G)){var g=N+_/a.length*G,v=200+a[_]*q/4;0===_?o.moveTo(g,v):o.lineTo(g,v)}o.stroke(),o.strokeStyle="#ef4444",o.lineWidth=3,o.globalAlpha=.8,o.beginPath();for(var b=0;b<=G;b+=2){var y=H(b/G,r),k=N+b,x=N+(1-y)*q;0===b?o.moveTo(k,x):o.lineTo(k,x)}o.stroke(),o.globalAlpha=1;var E=r.attack_ms+r.decay_ms+200+r.release_ms,w=N+r.attack_ms/E*G,P=N+(r.attack_ms+r.decay_ms)/E*G,C=N+(r.attack_ms+r.decay_ms+200)/E*G,R=N+(1-r.sustain)*q,L=R,I=function(e,n,t,a){o.fillStyle=t?"#fbbf24":"#ef4444",o.strokeStyle="#000",o.lineWidth=2,o.beginPath(),o.arc(e,n,8,0,2*Math.PI),o.fill(),o.stroke(),o.fillStyle="#fff",o.font="bold 12px sans-serif",o.textAlign="center",o.fillText(a,e,n-12)};I(w,40,"attack"===h,"A"),I(P,R,"decay"===h,"D"),I(C,L,"sustain"===h,"S"),I(760,360,"release"===h,"R"),o.fillStyle=f[l],o.font="bold 16px sans-serif",o.textAlign="left",o.fillText("".concat(l.toUpperCase()," LAYER"),45,60),"sample"!==l||S||(o.fillStyle="#8b5cf6",o.font="bold 14px sans-serif",o.textAlign="center",o.fillText("Drag & drop audio file here or use Load button",400,200),o.font="12px sans-serif",o.fillStyle="#a855f7",o.fillText("Supports: WAV, MP3, OGG, FLAC, AAC",400,220))}},Y=function(e){console.log("🎯 EnvelopeWaveformEditor handleMouseDown fired!",e);var n=m.current;if(n){var t=n.getBoundingClientRect(),a=n.width/t.width,o=n.height/t.height,r=(e.clientX-t.left)*a,i=(e.clientY-t.top)*o,c=$(M);console.log("🎯 activeLayer:",l,"activeEnvelopeTab:",M),console.log("🎯 params:",c);var s=c.attack_ms+c.decay_ms+200+c.release_ms,u=N+c.attack_ms/s*G,p=N+(c.attack_ms+c.decay_ms)/s*G,d=N+(c.attack_ms+c.decay_ms+200)/s*G,f=N+(1-c.sustain)*q,_=f;Math.sqrt(Math.pow(r-u,2)+Math.pow(i-40,2))<15?(v("attack"),e.preventDefault(),e.stopPropagation()):Math.sqrt(Math.pow(r-p,2)+Math.pow(i-f,2))<15?(v("decay"),e.preventDefault(),e.stopPropagation()):Math.sqrt(Math.pow(r-d,2)+Math.pow(i-_,2))<15?(v("sustain"),e.preventDefault(),e.stopPropagation()):Math.sqrt(Math.pow(r-760,2)+Math.pow(i-360,2))<15&&(v("release"),e.preventDefault(),e.stopPropagation()),y({x:r,y:i})}else console.log("❌ No canvas ref!")},X=function(e){if(h){var n=m.current;if(n){var a,o=n.getBoundingClientRect(),r=n.width/o.width,i=n.height/o.height,c=(e.clientX-o.left)*r,s=(e.clientY-o.top)*i;if($(M),a="sample"===l?"sample_".concat("filter"===M?"filter":"pitch"===M?"pitch":"amp"):"noise"===l?"noise_".concat("filter"===M?"filter":"amp"):"osc_".concat("pitch"===M?"pitch":"amp"),"attack"===h){var u=Math.max(0,Math.min(1,(c-N)/G)),p=Math.max(1,Math.min(1e3,500*u));t("".concat(a,"_attack_ms"),Math.round(p))}else if("decay"===h){var d=Math.max(0,Math.min(1,(c-N)/G)),f=Math.max(1,Math.min(2e3,800*d));t("".concat(a,"_decay_ms"),Math.round(f))}else if("sustain"===h){var _=Math.max(0,Math.min(1,1-(s-N)/q));t("".concat(a,"_sustain"),_)}else if("release"===h){var g=Math.max(0,Math.min(1,(c-N)/G)),v=Math.max(10,Math.min(3e3,1500*g));t("".concat(a,"_release_ms"),Math.round(v))}y({x:c,y:s}),e.preventDefault()}}},Z=function(){v(null)};return(0,a.useEffect)(function(){K()},[l,M,n.params,h,S]),i?(console.log("🎛️ EMBEDDED MODE ACTIVATED - No left panel, knobs handled by parent"),console.log("🎛️ activeLayer:",l,"activeEnvelopeTab:",M),console.log("🎛️ module.params:",n.params),a.createElement("div",{style:{width:"100%",height:"100%",display:"flex",flexDirection:"column",backgroundColor:"#0c1428"}},("oscillator"===l||"noise"===l||"sample"===l)&&!f&&a.createElement("div",{style:{padding:"8px 16px",borderBottom:"1px solid #334155",display:"flex",alignItems:"center",gap:"8px"}},a.createElement("div",{style:{display:"flex",gap:"2px",border:"1px solid #374151",borderRadius:"4px",overflow:"hidden"}},a.createElement("button",{onClick:function(){return D("amplitude")},style:{padding:"4px 12px",background:"amplitude"===M?"#ef4444":"#374151",color:"amplitude"===M?"#000":"#cbd5e1",border:"none",fontSize:"11px",fontWeight:"600",cursor:"pointer"}},"Amplitude"),("oscillator"===l||"sample"===l)&&a.createElement("button",{onClick:function(){return D("pitch")},style:{padding:"4px 12px",background:"pitch"===M?"#3b82f6":"#374151",color:"pitch"===M?"#000":"#cbd5e1",border:"none",fontSize:"11px",fontWeight:"600",cursor:"pointer"}},"Pitch"),("noise"===l||"sample"===l)&&a.createElement("button",{onClick:function(){return D("filter")},style:{padding:"4px 12px",background:"filter"===M?"#10b981":"#374151",color:"filter"===M?"#000":"#cbd5e1",border:"none",fontSize:"11px",fontWeight:"600",cursor:"pointer"}},"Filter"))),a.createElement("div",{style:{flex:1,display:"flex",alignItems:"center",justifyContent:"flex-start",padding:"16px"}},"sample"!==l||S?a.createElement("canvas",{ref:m,width:800,height:400,onMouseDown:Y,onMouseMove:X,onMouseUp:Z,onMouseLeave:Z,style:{border:"2px solid #374151",borderRadius:"8px",backgroundColor:"#0f172a",maxWidth:"100%",maxHeight:"100%",cursor:h?"grabbing":"grab"}}):a.createElement("div",{style:{width:"100%",height:"100%",border:"2px dashed #8b5cf6",borderRadius:"8px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",backgroundColor:"#0f172a"},onClick:function(){var e;return null===(e=_.current)||void 0===e?void 0:e.click()},onDragOver:j,onDrop:V},a.createElement("div",{style:{textAlign:"center",color:"#8b5cf6"}},a.createElement("div",{style:{fontSize:"48px",marginBottom:"12px"}},"🎵"),a.createElement("div",{style:{fontSize:"16px",fontWeight:"600"}},"Drop audio file here"),a.createElement("div",{style:{fontSize:"13px",marginTop:"6px"}},"or click to browse")),a.createElement("input",{ref:_,type:"file",accept:".wav,.mp3,.ogg,.flac,.aac",onChange:W,style:{display:"none"}}))),a.createElement("div",{style:{backgroundColor:"#0f172a",padding:"16px",borderTop:"1px solid #334155",display:"flex",alignItems:"flex-start",gap:"20px",flexWrap:"wrap",minHeight:"120px"}},a.createElement("div",{style:{color:{oscillator:"#10b981",noise:"#f59e0b",sample:"#8b5cf6"}[l],fontSize:"12px",fontWeight:"600",textTransform:"uppercase",letterSpacing:"0.5px",minWidth:"80px"}},l),"oscillator"===l&&a.createElement("div",{style:{display:"flex",flexWrap:"wrap",gap:"16px",alignItems:"center",border:"1px solid #334155",borderRadius:"6px",padding:"12px",backgroundColor:"#0c1428"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#10b981",fontSize:"12px",fontWeight:"600",minWidth:"70px"}},"Waveform:"),a.createElement("select",{value:n.params.osc_waveform||"sine",onChange:function(e){return t("osc_waveform",e.target.value)},style:{padding:"6px 8px",borderRadius:"4px",border:"1px solid #10b981",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px",minWidth:"100px"}},a.createElement("option",{value:"sine"},"Sine"),a.createElement("option",{value:"square"},"Square"),a.createElement("option",{value:"saw"},"Sawtooth"),a.createElement("option",{value:"triangle"},"Triangle"))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px",flexWrap:"wrap"}},a.createElement("label",{style:{color:"#10b981",fontSize:"12px",fontWeight:"600",minWidth:"70px"}},"pitch"===M?"Start Freq:":"Frequency:"),a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"4px",cursor:"pointer"}},a.createElement("input",{type:"checkbox",checked:n.params.osc_snap_to_note||!1,onChange:function(e){return t("osc_snap_to_note",e.target.checked)},style:{accentColor:"#10b981"}}),a.createElement("span",{style:{color:"#10b981",fontSize:"10px",fontWeight:"500"}},"Snap to Note")),a.createElement("input",{type:"range",min:"0",max:"100",step:n.params.osc_snap_to_note?"1":"0.1",value:(A=n.params.osc_freq||60,T=Math.max(30,Math.min(F,A)),O=Math.log(30),B=Math.log(F),(Math.log(T)-O)/(B-O)*100),onChange:function(e){var a=function(e){var n=e/100,t=Math.log(30),a=Math.log(F);return Math.exp(t+n*(a-t))}(parseFloat(e.target.value));n.params.osc_snap_to_note&&(a=function(e){var n=440*Math.pow(2,-4.75),t=Math.round(12*Math.log2(e/n)),a=n*Math.pow(2,t/12);return Math.max(30,Math.min(F,a))}(a)),t("osc_freq",Math.round(10*a)/10)},style:{width:"120px",accentColor:"#10b981"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px",fontWeight:"500",minWidth:"120px"}},(n.params.osc_freq||60).toFixed(1),"Hz (",z(n.params.osc_freq||60),")")),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#10b981",fontSize:"12px",fontWeight:"600",minWidth:"70px"}},"Distortion:"),a.createElement("input",{type:"range",min:"0",max:"10",step:"0.1",value:n.params.osc_distortion||0,onChange:function(e){return t("osc_distortion",parseFloat(e.target.value))},style:{width:"120px",accentColor:"#10b981"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px",fontWeight:"500",minWidth:"40px"}},(n.params.osc_distortion||0).toFixed(1))),"pitch"===M&&a.createElement(a.Fragment,null,"oscillator"===l&&a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px",padding:"4px",backgroundColor:"rgba(59, 130, 246, 0.1)",borderRadius:"4px",position:"relative",zIndex:10}},a.createElement("label",{style:{color:"#3b82f6",fontSize:"12px",fontWeight:"600",minWidth:"80px"}},"Pitch Range:"),a.createElement("input",{type:"range",min:"1",max:"24",step:"1",value:n.params.osc_pitch_amount||12,onChange:function(e){console.log("OSC PITCH AMOUNT CHANGE:",e.target.value),t("osc_pitch_amount",parseInt(e.target.value))},style:{width:"120px",accentColor:"#3b82f6",cursor:"pointer",height:"20px",pointerEvents:"auto"}}),a.createElement("span",{style:{color:"#3b82f6",fontSize:"11px",fontWeight:"500",minWidth:"120px"}},"±",n.params.osc_pitch_amount||12," semitones")),"sample"===l&&a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#3b82f6",fontSize:"12px",fontWeight:"600",minWidth:"80px"}},"Pitch Range:"),a.createElement("input",{type:"range",min:"1",max:"24",step:"1",value:n.params.sample_pitch_amount||12,onChange:function(e){return t("sample_pitch_amount",parseInt(e.target.value))},style:{width:"120px",accentColor:"#3b82f6"}}),a.createElement("span",{style:{color:"#3b82f6",fontSize:"11px",fontWeight:"500",minWidth:"120px"}},"±",n.params.sample_pitch_amount||12," semitones")),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px",width:"100%"}},a.createElement("label",{style:{color:"#3b82f6",fontSize:"12px",fontWeight:"600",minWidth:"70px"}},"End Freq:"),a.createElement("span",{style:{color:"#3b82f6",fontSize:"11px",minWidth:"120px",fontWeight:"500"}},Math.round((n.params.osc_freq||60)*Math.pow(2,0*(n.params.osc_pitch_amount||12)/12)),"Hz (",z(Math.round((n.params.osc_freq||60)*Math.pow(2,0*(n.params.osc_pitch_amount||12)/12))),")"),a.createElement("span",{style:{color:"#94a3b8",fontSize:"10px"}},"→ Max: ",Math.round((n.params.osc_freq||60)*Math.pow(2,1*(n.params.osc_pitch_amount||12)/12)),"Hz (",z(Math.round((n.params.osc_freq||60)*Math.pow(2,1*(n.params.osc_pitch_amount||12)/12))),")")))),"noise"===l&&a.createElement("div",{style:{display:"flex",flexWrap:"wrap",gap:"16px",alignItems:"center",border:"1px solid #334155",borderRadius:"6px",padding:"12px",backgroundColor:"#0c1428"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#f59e0b",fontSize:"12px",fontWeight:"600",minWidth:"50px"}},"Type:"),a.createElement("select",{value:n.params.noise_type||"white",onChange:function(e){return t("noise_type",e.target.value)},style:{padding:"6px 8px",borderRadius:"4px",border:"1px solid #f59e0b",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px",minWidth:"100px"}},a.createElement("option",{value:"white"},"White"),a.createElement("option",{value:"pink"},"Pink"),a.createElement("option",{value:"brown"},"Brown"))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#f59e0b",fontSize:"12px",fontWeight:"600",minWidth:"50px"}},"Filter:"),a.createElement("input",{type:"range",min:"100",max:"8000",step:"100",value:n.params.noise_filter||2e3,onChange:function(e){return t("noise_filter",parseInt(e.target.value))},style:{width:"120px",accentColor:"#f59e0b"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px",fontWeight:"500",minWidth:"80px"}},n.params.noise_filter||2e3,"Hz"))),"sample"===l&&a.createElement("div",{style:{display:"flex",flexWrap:"wrap",gap:"16px",alignItems:"center",border:"1px solid #334155",borderRadius:"6px",padding:"12px",backgroundColor:"#0c1428"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#8b5cf6",fontSize:"12px",fontWeight:"600"}},"File:"),a.createElement("input",{ref:_,type:"file",accept:".wav,.mp3,.ogg,.flac,.aac",onChange:W,style:{fontSize:"12px",color:"#cbd5e1",backgroundColor:"#0f172a",border:"1px solid #8b5cf6",borderRadius:"4px",padding:"6px 8px"}})),S&&a.createElement("div",{style:{color:"#8b5cf6",fontSize:"11px",fontWeight:"500"}},"Loaded: ",(S.duration||0).toFixed(2),"s @ ",S.sampleRate,"Hz"),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"4px",cursor:"pointer"}},a.createElement("input",{type:"checkbox",checked:n.params.sample_pitch_enabled||!1,onChange:function(e){return t("sample_pitch_enabled",e.target.checked)},style:{accentColor:"#8b5cf6"}}),a.createElement("span",{style:{color:"#8b5cf6",fontSize:"12px",fontWeight:"500"}},"Enable Pitch Envelope")))),a.createElement("div",{style:{display:"flex",flexWrap:"wrap",gap:"16px",alignItems:"center",border:"1px solid #334155",borderRadius:"6px",padding:"12px",backgroundColor:"#0c1428",width:"100%"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:{oscillator:"#10b981",noise:"#f59e0b",sample:"#8b5cf6"}[l],fontSize:"12px",fontWeight:"600",minWidth:"80px"}},"Duration:"),"oscillator"===l&&a.createElement(a.Fragment,null,a.createElement("input",{type:"range",min:"0.1",max:"2.0",step:"0.01",value:n.params.osc_time||.8,onChange:function(e){return t("osc_time",parseFloat(e.target.value))},style:{width:"120px",accentColor:"#10b981"}}),a.createElement("span",{style:{color:"#10b981",fontSize:"11px",fontWeight:"500",minWidth:"60px"}},(n.params.osc_time||.8).toFixed(2),"s")),"noise"===l&&a.createElement(a.Fragment,null,a.createElement("input",{type:"range",min:"0.05",max:"0.5",step:"0.005",value:n.params.noise_time||.15,onChange:function(e){return t("noise_time",parseFloat(e.target.value))},style:{width:"120px",accentColor:"#f59e0b"}}),a.createElement("span",{style:{color:"#f59e0b",fontSize:"11px",fontWeight:"500",minWidth:"60px"}},Math.round(1e3*(n.params.noise_time||.15)),"ms")),"sample"===l&&a.createElement(a.Fragment,null,a.createElement("input",{type:"range",min:"0.2",max:"3.0",step:"0.01",value:n.params.sample_time||1.2,onChange:function(e){return t("sample_time",parseFloat(e.target.value))},style:{width:"120px",accentColor:"#8b5cf6"}}),a.createElement("span",{style:{color:"#8b5cf6",fontSize:"11px",fontWeight:"500",minWidth:"60px"}},(n.params.sample_time||1.2).toFixed(2),"s"))),a.createElement("div",{style:{color:"#6b7280",fontSize:"10px",fontStyle:"italic"}},"Controls the overall duration of the ",l," layer"))))):a.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.9)",zIndex:2e3,display:"flex",alignItems:"center",justifyContent:"center"}},a.createElement("div",{style:{backgroundColor:"#0c1428",border:"1px solid #1f2937",borderRadius:"12px",width:"95vw",height:"90vh",padding:"20px",display:"flex",flexDirection:"column",overflow:"auto"}},a.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between",marginBottom:"20px",paddingBottom:"12px",borderBottom:"1px solid #334155"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"20px"}},a.createElement("h2",{style:{color:"#22c55e",fontWeight:"bold",fontSize:"24px",margin:0}},"🌊 Waveform + Envelope Editor"),a.createElement("div",{style:{display:"flex",gap:"2px",border:"1px solid #374151",borderRadius:"6px",overflow:"hidden"}},["oscillator","noise","sample"].map(function(e){return a.createElement("button",{key:e,onClick:function(){return s(e)},style:{padding:"8px 16px",background:l===e?{oscillator:"#10b981",noise:"#f59e0b",sample:"#8b5cf6"}[e]:"#374151",color:l===e?"#000":"#cbd5e1",border:"none",fontSize:"14px",fontWeight:"700",cursor:"pointer",textTransform:"capitalize"}},e)})),"sample"===l&&a.createElement("div",{style:{display:"flex",gap:"8px",alignItems:"center"}},a.createElement("input",{ref:_,type:"file",accept:".wav,.mp3,.ogg,.flac,.aac",onChange:W,style:{display:"none"}}),a.createElement("button",{onClick:function(){var e;return null===(e=_.current)||void 0===e?void 0:e.click()},disabled:R,style:{padding:"6px 12px",background:R?"#6b7280":"#8b5cf6",color:"#fff",border:"none",borderRadius:"4px",fontSize:"12px",fontWeight:"600",cursor:R?"not-allowed":"pointer"}},R?"⏳ Loading...":"📁 Load Audio File"),S&&a.createElement("span",{style:{color:"#8b5cf6",fontSize:"12px"}},"✓ ",S.duration.toFixed(1),"s @ ",S.sampleRate,"Hz"))),a.createElement("button",{onClick:o,style:{background:"#dc2626",color:"#fff",border:"none",borderRadius:"6px",padding:"8px 16px",cursor:"pointer",fontSize:"14px",fontWeight:"700"}},"Close Editor")),a.createElement("div",{style:{flex:1,display:"flex",justifyContent:"center",alignItems:"center"}},a.createElement("canvas",{ref:m,width:800,height:400,onMouseDown:Y,onMouseMove:X,onMouseUp:Z,onMouseLeave:Z,onDragOver:j,onDrop:V,style:{border:"sample"!==l||S?"2px solid #374151":"2px dashed #8b5cf6",borderRadius:"8px",backgroundColor:"#0f172a",maxWidth:"100%",maxHeight:"100%",cursor:h?"grabbing":"grab"}})),a.createElement("div",{style:{marginTop:"20px",padding:"16px",background:"#111827",borderRadius:"8px",fontSize:"12px",color:"#94a3b8"}},a.createElement("strong",null,"Legend:"),a.createElement("span",{style:{color:"#4b5563",marginLeft:"12px"}},"━ Original Waveform"),a.createElement("span",{style:{color:{oscillator:"#10b981",noise:"#f59e0b",sample:"#8b5cf6"}[l],marginLeft:"12px"}},"━ Enveloped Waveform"),a.createElement("span",{style:{color:"#ef4444",marginLeft:"12px"}},"━ Envelope Shape"))))};function Ae(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Te(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Te(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Te(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}var Oe=(0,a.createContext)(),Be=function(){var e=(0,a.useContext)(Oe);if(!e)throw new Error("useTransfer must be used within a TransferProvider");return e},ze=function(e){var n=e.children,t=Ae((0,a.useState)([]),2),o=t[0],r=t[1],i=Ae((0,a.useState)(null),2),c=i[0],l=i[1],s={transferQueue:o,setTransferQueue:r,currentTransfer:c,setCurrentTransfer:l,getOverallProgress:function(){if(0===o.length)return{current:0,total:0,percentage:0};var e=o.filter(function(e){return"completed"===e.status}).length,n=o.length,t=0,a=o.find(function(e){return"transferring"===e.status});a&&(t=a.progress/100);var r=(e+t)/n*100;return{current:e+(a?1:0),total:n,percentage:Math.min(100,Math.max(0,r)),currentFile:a?a.filename:null,currentFileProgress:a?a.progress:0}},hasActiveTransfers:function(){return o.some(function(e){return"transferring"===e.status||"queued"===e.status})}};return a.createElement(Oe.Provider,{value:s},n)};function Fe(e){return Fe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Fe(e)}function Ne(e){return function(e){if(Array.isArray(e))return Xe(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Ye(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ge(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function qe(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Ge(Object(t),!0).forEach(function(n){Ue(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ge(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Ue(e,n,t){return(n=function(e){var n=function(e){if("object"!=Fe(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Fe(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Fe(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function We(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=Ye(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var a=0,o=function(){};return{s:o,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,c=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return i=e.done,e},e:function(e){c=!0,r=e},f:function(){try{i||null==t.return||t.return()}finally{if(c)throw r}}}}function Ve(){var e,n,t="function"==typeof Symbol?Symbol:{},a=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function r(t,a,o,r){var l=a&&a.prototype instanceof c?a:c,s=Object.create(l.prototype);return je(s,"_invoke",function(t,a,o){var r,c,l,s=0,u=o||[],p=!1,d={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return r=n,c=0,l=e,d.n=t,i}};function f(t,a){for(c=t,l=a,n=0;!p&&s&&!o&&n<u.length;n++){var o,r=u[n],f=d.p,m=r[2];t>3?(o=m===a)&&(l=r[(c=r[4])?5:(c=3,3)],r[4]=r[5]=e):r[0]<=f&&((o=t<2&&f<r[1])?(c=0,d.v=a,d.n=r[1]):f<m&&(o=t<3||r[0]>a||a>m)&&(r[4]=t,r[5]=a,d.n=m,c=0))}if(o||t>1)return i;throw p=!0,a}return function(o,u,m){if(s>1)throw TypeError("Generator is already running");for(p&&1===u&&f(u,m),c=u,l=m;(n=c<2?e:l)||!p;){r||(c?c<3?(c>1&&(d.n=-1),f(c,l)):d.n=l:d.v=l);try{if(s=2,r){if(c||(o="next"),n=r[o]){if(!(n=n.call(r,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,c<2&&(c=0)}else 1===c&&(n=r.return)&&n.call(r),c<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),c=1);r=e}else if((n=(p=d.n<0)?l:t.call(a,d))!==i)break}catch(n){r=e,c=1,l=n}finally{s=1}}return{value:n,done:p}}}(t,o,r),!0),s}var i={};function c(){}function l(){}function s(){}n=Object.getPrototypeOf;var u=[][a]?n(n([][a]())):(je(n={},a,function(){return this}),n),p=s.prototype=c.prototype=Object.create(u);function d(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,je(e,o,"GeneratorFunction")),e.prototype=Object.create(p),e}return l.prototype=s,je(p,"constructor",s),je(s,"constructor",l),l.displayName="GeneratorFunction",je(s,o,"GeneratorFunction"),je(p),je(p,o,"Generator"),je(p,a,function(){return this}),je(p,"toString",function(){return"[object Generator]"}),(Ve=function(){return{w:r,m:d}})()}function je(e,n,t,a){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}je=function(e,n,t,a){function r(n,t){je(e,n,function(e){return this._invoke(n,t,e)})}n?o?o(e,n,{value:t,enumerable:!a,configurable:!a,writable:!a}):e[n]=t:(r("next",0),r("throw",1),r("return",2))},je(e,n,t,a)}function He(e,n,t,a,o,r,i){try{var c=e[r](i),l=c.value}catch(e){return void t(e)}c.done?n(l):Promise.resolve(l).then(a,o)}function $e(e){return function(){var n=this,t=arguments;return new Promise(function(a,o){var r=e.apply(n,t);function i(e){He(r,a,o,i,c,"next",e)}function c(e){He(r,a,o,i,c,"throw",e)}i(void 0)})}}function Ke(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||Ye(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ye(e,n){if(e){if("string"==typeof e)return Xe(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xe(e,n):void 0}}function Xe(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}function Ze(e){var n,t,a,o=2;for("undefined"!=typeof Symbol&&(t=Symbol.asyncIterator,a=Symbol.iterator);o--;){if(t&&null!=(n=e[t]))return n.call(e);if(a&&null!=(n=e[a]))return new Qe(n.call(e));t="@@asyncIterator",a="@@iterator"}throw new TypeError("Object is not async iterable")}function Qe(e){function n(e){if(Object(e)!==e)return Promise.reject(new TypeError(e+" is not an object."));var n=e.done;return Promise.resolve(e.value).then(function(e){return{value:e,done:n}})}return Qe=function(e){this.s=e,this.n=e.next},Qe.prototype={s:null,n:null,next:function(){return n(this.n.apply(this.s,arguments))},return:function(e){var t=this.s.return;return void 0===t?Promise.resolve({value:e,done:!0}):n(t.apply(this.s,arguments))},throw:function(e){var t=this.s.return;return void 0===t?Promise.reject(e):n(t.apply(this.s,arguments))}},new Qe(e)}const Je=function(e){var n=e.module,t=e.onUpdateParam,o=e.onClose,r=(e.modules,(0,a.useRef)()),i=(0,a.useRef)(),c=Ke((0,a.useState)(null),2),l=c[0],s=c[1],u=Ke((0,a.useState)(null),2),p=u[0],d=u[1],f=Ke((0,a.useState)(!1),2),m=(f[0],f[1],Ke((0,a.useState)(0),2)),_=m[0],g=m[1],h=Ke((0,a.useState)(!1),2),v=h[0],b=h[1],y=Ke((0,a.useState)(.2),2),k=y[0],S=y[1],x=Ke((0,a.useState)(.8),2),E=x[0],w=x[1],P=Ke((0,a.useState)(0),2),C=P[0],R=P[1],L=Ke((0,a.useState)(0),2),I=L[0],M=L[1],D=Ke((0,a.useState)(1),2),A=D[0],T=D[1],O=Ke((0,a.useState)(44100),2),B=O[0],z=O[1],F=Ke((0,a.useState)(null),2),N=F[0],G=F[1],q=Ke((0,a.useState)(0),2),U=(q[0],q[1]),W=Ke((0,a.useState)(0),2),V=W[0],j=W[1],H=Ke((0,a.useState)(0),2),$=H[0],K=H[1],Y=Ke((0,a.useState)(60),2),X=Y[0],Z=Y[1],Q=Ke((0,a.useState)(1),2),J=Q[0],ee=(Q[1],Ke((0,a.useState)(1),2)),ne=ee[0],te=ee[1],ae=Ke((0,a.useState)(0),2),oe=ae[0],re=ae[1],ie=Ke((0,a.useState)(.8),1)[0],ce=Ke((0,a.useState)("normal"),2),le=ce[0],se=ce[1],ue=Ke((0,a.useState)("manual"),2),pe=ue[0],de=ue[1],fe=Ke((0,a.useState)("stopped"),2),me=fe[0],_e=fe[1],ge=Ke((0,a.useState)(null),2),he=ge[0],ve=ge[1],be=Ke((0,a.useState)("disconnected"),2),ye=be[0],ke=be[1],Se=Ke((0,a.useState)(null),2),xe=Se[0],Ee=Se[1],we=Be(),Pe=we.transferQueue,Ce=we.setTransferQueue,Re=Ke((0,a.useState)([]),2),Le=Re[0],Ie=Re[1],Me=Ke((0,a.useState)(null),2),Ae=Me[0],Te=Me[1],Oe=(0,a.useRef)(null),ze=Ke((0,a.useState)(0),2),Fe=ze[0],Ge=ze[1],je=Ke((0,a.useState)(""),2),He=(je[0],je[1]);(0,a.useEffect)(function(){console.log("useEffect triggered - localTransferQueue.length:",Le.length,"localCurrentTransfer:",Ae),Le.length>0&&!Ae?(console.log("useEffect: Local queue has items and no current transfer, processing queue..."),$n()):console.log("useEffect: Not processing local queue - length:",Le.length,"localCurrentTransfer:",!!Ae)},[Le,Ae]),(0,a.useEffect)(function(){console.log("localCurrentTransfer changed to:",Ae)},[Ae]);var Ye=Ke((0,a.useState)(null),2),Xe=Ye[0],Qe=Ye[1],Je=Ke((0,a.useState)("not_connected"),2),en=Je[0],nn=Je[1],tn=Ke((0,a.useState)(!1),2),an=(tn[0],tn[1],Ke((0,a.useState)("oscillator"),2)),on=an[0],rn=an[1],cn=Ke((0,a.useState)(null),2),ln=(cn[0],cn[1],Ke((0,a.useState)(0),2)),sn=(ln[0],ln[1],Ke((0,a.useState)(0),2)),un=(sn[0],sn[1],Ke((0,a.useState)({osc_level:n.params.osc_level||.7,noise_level:n.params.noise_level||.3,sample_level:n.params.sample_level||0,osc_mute:n.params.osc_mute||!1,noise_mute:n.params.noise_mute||!1,sample_mute:n.params.sample_mute||!1}),2)),pn=un[0],dn=un[1],fn=Ke((0,a.useState)(!1),2),mn=fn[0],_n=fn[1],gn=Ke((0,a.useState)(0),2),hn=gn[0],vn=gn[1],bn=Ke((0,a.useState)(0),2),yn=bn[0],kn=bn[1],Sn=(0,a.useRef)(null),xn=(0,a.useRef)([]),En=(0,a.useRef)(null),wn=(0,a.useRef)(null),Pn=(0,a.useRef)(null);(0,a.useEffect)(function(){dn({osc_level:n.params.osc_level||.7,noise_level:n.params.noise_level||.3,sample_level:n.params.sample_level||0,osc_mute:n.params.osc_mute||!1,noise_mute:n.params.noise_mute||!1,sample_mute:n.params.sample_mute||!1})},[n.params.osc_level,n.params.noise_level,n.params.sample_level,n.params.osc_mute,n.params.noise_mute,n.params.sample_mute]);var Cn=(0,a.useCallback)(function(e,a){try{t.length>=3&&void 0!==(null==n?void 0:n.id)?(console.log("📤 Sending param with 3-arg signature:",n.id,e,a),t(n.id,e,a)):(console.log("📤 Sending param with 2-arg signature:",e,a),t(e,a))}catch(n){console.warn("📤 Error sending param, falling back to 2-arg:",n),t(e,a)}},[t,null==n?void 0:n.id]),Rn=Ke((0,a.useState)(null),2),Ln=Rn[0],In=Rn[1],Mn=Ke((0,a.useState)(null),2),Dn=Mn[0],An=Mn[1],Tn=Ke((0,a.useState)(null),2),On=Tn[0],Bn=Tn[1];(0,a.useEffect)(function(){l&&zn(l)},[ne,oe,l,k,E,C,I,_,me,N]);var zn=function(e){var n=r.current;if(n&&e){var t=n.getContext("2d"),a=n.width,o=n.height;t.clearRect(0,0,a,o),t.fillStyle="#0b1220",t.fillRect(0,0,a,o);var i=e.getChannelData?e.getChannelData(0):e,c=i.length,l=Math.floor(c/ne),s=Math.floor(oe*(c-l)),u=Math.max(0,s),p=Math.min(c,u+l),d=p-u,f=Math.max(1,Math.floor(d/a));if(t.strokeStyle="#10b981",t.lineWidth=1,f>1){t.fillStyle="#10b981";for(var m=0;m<a;m++){for(var g=u+Math.floor(m*f),h=Math.min(p,u+Math.floor((m+1)*f)),v=0,b=0,y=g;y<h;y++)y<i.length&&(v=Math.min(v,i[y]),b=Math.max(b,i[y]));var S=o/2-v*o*ie*.45,x=o/2-b*o*ie*.45;t.fillRect(m,Math.min(S,x),1,Math.abs(x-S)||1)}}else{t.beginPath();for(var w=0;w<a;w++){var P=u+Math.floor(w*f);if(P<i.length){var R=o/2-i[P]*o*ie*.45;0===w?t.moveTo(w,R):t.lineTo(w,R)}}t.stroke()}var L=u/c,M=p/c,D=M-L,A=(k-L)/D*a,T=(E-L)/D*a;if(A<a&&T>0&&A<T){var O=Math.max(0,A),B=Math.min(a,T);t.fillStyle="rgba(34, 197, 94, 0.1)",t.fillRect(O,0,B-O,o)}if(A>=-20&&A<=a+20){t.strokeStyle="loopStart"===N?"#34d399":"#22c55e",t.lineWidth="loopStart"===N?4:2,t.beginPath(),t.moveTo(A,0),t.lineTo(A,o),t.stroke();t.fillStyle="loopStart"===N?"#34d399":"#22c55e",t.fillRect(A-8,0,16,18),t.strokeStyle="#000000",t.lineWidth=2,t.strokeRect(A-8,0,16,18),t.strokeStyle="#ffffff",t.lineWidth=1,t.strokeRect(A-8+1,1,14,16),t.fillStyle="#000000",t.font="bold 12px monospace",t.textAlign="center",t.fillText("S",A,13)}if(T>=-20&&T<=a+20){t.strokeStyle="loopEnd"===N?"#f87171":"#dc2626",t.lineWidth="loopEnd"===N?4:2,t.beginPath(),t.moveTo(T,0),t.lineTo(T,o),t.stroke();t.fillStyle="loopEnd"===N?"#f87171":"#dc2626",t.fillRect(T-8,0,16,18),t.strokeStyle="#000000",t.lineWidth=2,t.strokeRect(T-8,0,16,18),t.strokeStyle="#ffffff",t.lineWidth=1,t.strokeRect(T-8+1,1,14,16),t.fillStyle="#000000",t.font="bold 12px monospace",t.textAlign="center",t.fillText("E",T,13)}var z=E-k,F=k+C*z,G=E-I*z;if(C>0&&F>=L&&k<=M){var q=Math.max(0,(k-L)/D*a),U=Math.min(a,(F-L)/D*a);U>q&&(t.fillStyle="rgba(34, 197, 94, 0.2)",t.fillRect(q,0,U-q,o))}if(I>0&&G<=M&&E>=L){var W=Math.max(0,(G-L)/D*a),V=Math.min(a,(E-L)/D*a);V>W&&(t.fillStyle="rgba(239, 68, 68, 0.2)",t.fillRect(W,0,V-W,o))}if("playing"===me&&_>=L&&_<=M){var j=(_-L)/D*a;t.strokeStyle="#f59e0b",t.lineWidth=3,t.beginPath(),t.moveTo(j,0),t.lineTo(j,o),t.stroke()}}},Fn=function(e){console.log("Processing file:",e.name,"Type:",e.type,"Size:",e.size);var n=new FileReader;n.onload=function(){var n=$e(Ve().m(function n(t){var a,o,r,i,c,l,u;return Ve().w(function(n){for(;;)switch(n.p=n.n){case 0:if(n.p=0,(a=Ln)&&"closed"!==a.state||(a=new(window.AudioContext||window.webkitAudioContext),In(a)),"suspended"!==a.state){n.n=1;break}return n.n=1,a.resume();case 1:return o=t.target.result,console.log("ArrayBuffer size:",o.byteLength),n.n=2,a.decodeAudioData(o);case 2:r=n.v,console.log("Decoded buffer:",{duration:r.duration,sampleRate:r.sampleRate,numberOfChannels:r.numberOfChannels,length:r.length}),d(r),i=r.getChannelData(0),c=new Float32Array(i),s(c),S(.2),w(.8),g(.2),(l=a.createGain()).connect(a.destination),Bn(l),z(r.sampleRate),Cn("sample_name",e.name.replace(/\.[^/.]+$/,"")),console.log("File processed successfully"),n.n=4;break;case 3:n.p=3,u=n.v,console.error("Failed to decode audio file:",u),alert("Failed to load audio file: ".concat(e.name,"\n\nError: ").concat(u.message,"\n\nPlease try a different file format (WAV, MP3, or OGG)."));case 4:return n.a(2)}},n,null,[[0,3]])}));return function(e){return n.apply(this,arguments)}}(),n.readAsArrayBuffer(e)},Nn=function(){var e=$e(Ve().m(function e(){var n,t,a,o,r,i,c,l,s;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,e.n=1,navigator.mediaDevices.getUserMedia({audio:{sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1}});case 1:n=e.v,Pn.current=n,t=new(window.AudioContext||window.webkitAudioContext),a=t.createAnalyser(),o=t.createMediaStreamSource(n),a.fftSize=256,o.connect(a),wn.current={analyser:a,audioCtx:t},r=function(){if(mn){var e=new Uint8Array(a.frequencyBinCount);a.getByteTimeDomainData(e);for(var n=0,t=0;t<e.length;t++){var o=Math.abs((e[t]-128)/128);o>n&&(n=o)}kn(n),requestAnimationFrame(r)}},i=MediaRecorder.isTypeSupported("audio/webm;codecs=opus")?"audio/webm;codecs=opus":"audio/webm",c=new MediaRecorder(n,{mimeType:i}),xn.current=[],c.ondataavailable=function(e){e.data.size>0&&xn.current.push(e.data)},c.onstop=$e(Ve().m(function e(){var t,a;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:return n.getTracks().forEach(function(e){return e.stop()}),t=new Blob(xn.current,{type:i}),e.p=1,e.n=2,Gn(t);case 2:e.n=4;break;case 3:e.p=3,a=e.v,console.error("Failed to convert recording:",a),alert("Failed to process recording. Please try again.");case 4:wn.current&&(wn.current.audioCtx.close(),wn.current=null),Pn.current=null,kn(0),vn(0),En.current&&(clearInterval(En.current),En.current=null);case 5:return e.a(2)}},e,null,[[1,3]])})),Sn.current=c,c.start(),_n(!0),l=Date.now(),En.current=setInterval(function(){vn((Date.now()-l)/1e3)},100),r(),e.n=3;break;case 2:e.p=2,s=e.v,console.error("Failed to start recording:",s),alert("Failed to access microphone.\n\nError: ".concat(s.message,"\n\nPlease grant microphone permissions."));case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),Gn=function(){var e=$e(Ve().m(function e(n){var a,o,r,i,c,l,u,p,f,m,_,g,h,v,b,y,k,S;return Ve().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,n.arrayBuffer();case 1:return a=e.v,e.n=2,Ln.decodeAudioData(a);case 2:if(o=e.v,r=44100,i=Math.floor(o.duration*r),c=Ln.createBuffer(1,i,r),l=c.getChannelData(0),1===o.numberOfChannels)for(u=o.getChannelData(0),p=o.sampleRate/r,f=0;f<i;f++)m=Math.floor(f*p),l[f]=u[Math.min(m,u.length-1)];else for(_=o.getChannelData(0),g=o.getChannelData(1),h=o.sampleRate/r,v=0;v<i;v++)b=Math.floor(v*h),y=Math.min(b,_.length-1),l[v]=(_[y]+g[y])/2;s(c),d(c),k=(new Date).toISOString().slice(11,19).replace(/:/g,"-"),S="recorded_".concat(k,".wav"),t("sample_name",S),console.log("Recording converted: ".concat(i," samples, ").concat(r,"Hz, mono")),alert("Recording captured!\n\nDuration: ".concat(o.duration.toFixed(1),"s\nName: ").concat(S,"\n\nYou can now edit and save to SD card."));case 3:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),qn=function(){var e=$e(Ve().m(function e(){var n,t,a,o,r,i,c,l,s,u,d,f;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(p&&Ln){e.n=1;break}return console.warn("No audio buffer or context available"),p||alert("Please load an audio file first."),e.a(2);case 1:if("playing"!==me){e.n=2;break}if(Dn){try{Dn.stop()}catch(e){console.warn("Error stopping audio source:",e)}An(null)}return he&&(clearInterval(he),ve(null)),_e("stopped"),e.a(2);case 2:if(e.p=2,"suspended"!==Ln.state){e.n=4;break}return e.n=3,Ln.resume();case 3:console.log("Audio context resumed");case 4:n=p,t=100*V+$,a=Math.pow(2,t/1200)*J,console.log("Starting playback with:",{pitchRatio:a,loopStart:k,loopEnd:E,playbackMode:le,volume:A,bufferDuration:n.duration}),(o=Ln.createBufferSource()).buffer=n,o.playbackRate.value=a,(r=Ln.createGain()).gain.value=.5*A,Bn(r),o.connect(r),r.connect(Ln.destination),i=k*n.duration,c=E*n.duration,l=c-i,"loop"!==le&&"sustain"!==le||(o.loop=!0,o.loopStart=i,o.loopEnd=c,console.log("Loop enabled:",{startTime:i,endTime:c})),"loop"===le||"sustain"===le?o.start(0,i):o.start(0,i,l),An(o),_e("playing"),g("reverse"===le?E:k),s=Date.now(),u=E-k,d=setInterval(function(){var e=(Date.now()-s)/1e3;g(function(n){var t;if("reverse"===le){if((t=E-e*a/(c-i)*u)<=k)return"loop"===le||"sustain"===le?E:k}else if((t=k+e*a/(c-i)*u)>=E)return"loop"===le||"sustain"===le?k+(t-k)%u:E;return t})},50),ve(d),o.onended=function(){console.log("Playback ended"),_e("stopped"),g(k),d&&(clearInterval(d),ve(null)),An(null),Bn(null)},console.log("Playback started successfully"),e.n=6;break;case 5:e.p=5,f=e.v,console.error("Error playing audio:",f),alert("Could not play audio: ".concat(f.message,"\n\nPlease check that your browser supports Web Audio API and audio is not muted."));case 6:return e.a(2)}},e,null,[[2,5]])}));return function(){return e.apply(this,arguments)}}();(0,a.useEffect)(function(){"auto"===pe&&(R(.1),M(.1))},[pe,k,E]),(0,a.useEffect)(function(){if("playing"===me&&Dn&&Ln){var e=100*V+$,n=Math.pow(2,e/1200)*J;Dn.playbackRate.value=n,On&&(On.gain.value=.5*A),console.log("Updated real-time params:",{pitchRatio:n,volume:.5*A})}},[V,$,J,A,me,Dn,On,Ln]),(0,a.useEffect)(function(){if("playing"===me&&Dn&&p&&("loop"===le||"sustain"===le)){var e=k*p.duration,n=E*p.duration;Dn.loopStart=e,Dn.loopEnd=n,console.log("Updated loop points in real-time:",{loopStart:e,loopEnd:n})}},[k,E,me,Dn,p,le]),(0,a.useEffect)(function(){return function(){he&&clearInterval(he)}},[he]);var Un=function(){if(!l)return null;var e=l;if(0!==V||0!==$||1!==J){var n=100*V+$,t=Math.pow(2,n/1200)*J,a=Math.floor(l.length/t);e=new Float32Array(a);for(var o=0;o<a;o++){var r=o*t,i=Math.floor(r),c=Math.min(i+1,l.length-1),s=r-i;e[o]=l[i]*(1-s)+l[c]*s}}1!==A&&(e=e.map(function(e){return e*A}));for(var u=0;u<e.length;u++){var p=u/e.length,d=1;C>0&&p<C&&(d*=p/C),I>0&&p>1-I&&(d*=(1-p)/I),e[u]*=d}var f=e.length,m=1*B*2,_=2*f,g=44+_,h=new ArrayBuffer(g),v=new DataView(h),b=function(e,n){for(var t=0;t<n.length;t++)v.setUint8(e+t,n.charCodeAt(t))};b(0,"RIFF"),v.setUint32(4,g-8,!0),b(8,"WAVE"),b(12,"fmt "),v.setUint32(16,16,!0),v.setUint16(20,1,!0),v.setUint16(22,1,!0),v.setUint32(24,B,!0),v.setUint32(28,m,!0),v.setUint16(32,2,!0),v.setUint16(34,16,!0),b(36,"data"),v.setUint32(40,_,!0);for(var y=44,k=0;k<f;k++){var S=e[k];S=Math.max(-1,Math.min(1,S)),S*=32767,v.setInt16(y,S,!0),y+=2}return h},Wn=function(){var e=$e(Ve().m(function e(){var n,t,a;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(!("serial"in navigator)){e.n=7;break}return e.p=1,e.n=2,navigator.serial.requestPort();case 2:return n=e.v,e.n=3,n.open({baudRate:921600});case 3:return Ee(n),ke("synth"),t=n.writable.getWriter(),e.n=4,t.write((new TextEncoder).encode("STATUS\n"));case 4:t.releaseLock(),Vn(n),e.n=6;break;case 5:e.p=5,a=e.v,console.error("Failed to connect to hardware:",a),alert("Failed to connect to ESP32. Make sure it's plugged in and the correct port is selected.");case 6:e.n=8;break;case 7:alert("Web Serial API not supported. Please use Chrome/Edge browser.");case 8:return e.a(2)}},e,null,[[1,5]])}));return function(){return e.apply(this,arguments)}}(),Vn=function(){var e=$e(Ve().m(function e(n){var t,a,o,r,i,c,l,s,u,p,d,f,m;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:t=n.readable.getReader(),a=new TextDecoder,o="",e.p=1;case 2:return e.n=3,t.read();case 3:if(r=e.v,i=r.value,!r.done){e.n=4;break}return e.a(3,13);case 4:o+=a.decode(i,{stream:!0}),c=o.split("\n"),o=c.pop()||"",l=We(c),e.p=5,l.s();case 6:if((s=l.n()).done){e.n=9;break}if(u=s.value,0!==(p=u.trim()).length){e.n=7;break}return e.a(3,8);case 7:console.log("Received from ESP32:",p),"MODE:SYNTH"===p?ke("synth"):"MODE:USB"===p?ke("usb"):"MODE:SWITCHING"===p?ke("switching"):p.startsWith("SD:FILE:READY")?(console.log("ESP32 ready - uploading current transfer from queue"),jn(n)):p.startsWith("SD:SAVE:COMPLETE")?Yn(p):p.startsWith("SD:PROGRESS:")?(d=parseFloat(p.split(":")[2]),console.log("Progress update:",d),Zn(d)):(p.startsWith("SD:LIST:")||p.startsWith("SD:FILE:"))&&window.sdFileListHandler&&window.sdFileListHandler(p);case 8:e.n=6;break;case 9:e.n=11;break;case 10:e.p=10,f=e.v,l.e(f);case 11:return e.p=11,l.f(),e.f(11);case 12:e.n=2;break;case 13:e.n=15;break;case 14:e.p=14,m=e.v,console.error("Error reading from hardware:",m);case 15:return e.p=15,t.releaseLock(),e.f(15);case 16:return e.a(2)}},e,null,[[5,10,11,12],[1,14,15,16]])}));return function(n){return e.apply(this,arguments)}}(),jn=function(){var e=$e(Ve().m(function e(n){var t,a,o,r,i,c,l;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(console.log("uploadCurrentTransfer - localCurrentTransfer:",Ae),console.log("uploadCurrentTransfer - currentTransferRef.current:",Oe.current),console.log("uploadCurrentTransfer - localTransferQueue:",Le),console.log("uploadCurrentTransfer - localTransferQueue.length:",Le.length),t=Oe.current||Ae||Le[0]){e.n=1;break}return console.log("No current transfer to upload - both currentTransfer and transferQueue[0] are null"),e.a(2);case 1:console.log("Uploading current transfer:",t),e.p=2,a=n.writable.getWriter(),o=1024,r=new Uint8Array(t.data),console.log("Sending ".concat(r.length," bytes in ").concat(Math.ceil(r.length/o)," chunks")),i=0;case 3:if(!(i<r.length)){e.n=6;break}return c=r.slice(i,i+o),e.n=4,a.write(c);case 4:return i%102400==0&&console.log("Sent ".concat(i," / ").concat(r.length," bytes")),e.n=5,new Promise(function(e){return setTimeout(e,10)});case 5:i+=o,e.n=3;break;case 6:console.log("Finished sending file data"),a.releaseLock(),e.n=8;break;case 7:e.p=7,l=e.v,console.error("Upload failed:",l),Xn(t.id,"Upload failed: "+l.message);case 8:return e.a(2)}},e,null,[[2,7]])}));return function(n){return e.apply(this,arguments)}}(),Hn=function(){var e=$e(Ve().m(function e(){var n;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(!xe){e.n=5;break}return e.p=1,e.n=2,xe.close();case 2:e.n=4;break;case 3:e.p=3,n=e.v,console.error("Error closing serial port:",n);case 4:Ee(null);case 5:ke("disconnected");case 6:return e.a(2)}},e,null,[[1,3]])}));return function(){return e.apply(this,arguments)}}(),$n=function(){var e=$e(Ve().m(function e(){var n,t,a,o;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(console.log("processLocalTransferQueue called - queue length:",Le.length,"localCurrentTransfer:",Ae),0!==Le.length&&!Ae){e.n=1;break}return console.log("Local queue empty or transfer in progress, returning"),e.a(2);case 1:return n=Le[0],console.log("Processing local transfer:",n),console.log("Setting localCurrentTransfer and ref to:",n),Te(n),Oe.current=n,e.p=2,ke("transferring"),t=xe.writable.getWriter(),a="SD:FILE:".concat(n.filename,":").concat(n.size,"\n"),console.log("Sending to ESP32:",a.trim()),e.n=3,t.write((new TextEncoder).encode(a));case 3:t.releaseLock(),e.n=5;break;case 4:e.p=4,o=e.v,console.error("Failed to start local transfer:",o),Te(null),ke("synth");case 5:return e.a(2)}},e,null,[[2,4]])}));return function(){return e.apply(this,arguments)}}(),Kn=function(){var e=$e(Ve().m(function e(){var n,t,a,o;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:return console.log("processTransferQueue called - this function is deprecated"),console.log("Queue empty or transfer in progress, returning"),e.a(2);case 1:return n=transferQueue[0],console.log("Processing transfer:",n),setCurrentTransfer(n),Te(n),setTransferQueue(function(e){return e.map(function(e){return e.id===n.id?qe(qe({},e),{},{status:"transferring"}):e})}),e.p=2,ke("transferring"),t=xe.writable.getWriter(),a="SD:FILE:".concat(n.filename,":").concat(n.size,"\n"),console.log("Sending to ESP32:",a.trim()),e.n=3,t.write((new TextEncoder).encode(a));case 3:t.releaseLock(),e.n=5;break;case 4:e.p=4,o=e.v,console.error("Failed to start transfer:",o),Xn(n.id,"Failed to start transfer");case 5:return e.a(2)}},e,null,[[2,4]])}));return function(){return e.apply(this,arguments)}}(),Yn=function(e){Ae&&(Ie(function(e){return e.filter(function(e){return e.id!==Ae.id})}),Te(null),ke("synth"),console.log("Transfer completed:",e),setTimeout(function(){Kn()},100))},Xn=function(e,n){setTransferQueue(function(t){return t.map(function(t){return t.id===e?qe(qe({},t),{},{status:"error",error:n}):t})}),setCurrentTransfer(null),ke("synth"),setTimeout(function(){Kn()},1e3)},Zn=function(e){console.log("updateTransferProgress called:",e,"localCurrentTransfer:",Ae,"ref:",Oe.current);var n=Oe.current||Ae;n?Ce(function(t){return t.map(function(t){return t.id===n.id?qe(qe({},t),{},{progress:e}):t})}):console.log("No active transfer - ignoring progress update")},Qn=function(){var e=$e(Ve().m(function e(){return Ve().w(function(e){for(;;)switch(e.n){case 0:if(xe){e.n=1;break}return e.a(2,[]);case 1:return e.a(2,new Promise(function(e){var n=[],t=!1,a=window.sdFileListHandler;window.sdFileListHandler=function(o){if("SD:LIST:START"===o)t=!0;else if("SD:LIST:END"===o)t=!1,window.sdFileListHandler=a,e(n);else if(t&&o.startsWith("SD:FILE:")){var r=o.split(":");if(r.length>=3){var i=r[2];n.push(i)}}};var o=xe.writable.getWriter();o.write((new TextEncoder).encode("SD:LIST\n")),o.releaseLock(),setTimeout(function(){window.sdFileListHandler=a,e(n)},5e3)}))}},e)}));return function(){return e.apply(this,arguments)}}(),Jn=function(e,n,t){for(var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=a?function(e){var n=new Date,t=String(n.getDate()).padStart(2,"0"),a=String(n.getMonth()+1).padStart(2,"0"),o=String(n.getFullYear()).slice(-2),r=String(n.getHours()).padStart(2,"0"),i=String(n.getMinutes()).padStart(2,"0"),c="".concat(t).concat(a).concat(o);return 0===e.filter(function(e){return e.includes("/")}).map(function(e){return e.split("/")[0]}).filter(function(e){return e.startsWith("session_".concat(c))}).map(function(e){return e.replace("session_".concat(c),"")}).filter(function(e){return""===e||e.startsWith("_")}).length?"session_".concat(c):"session_".concat(c,"_").concat(r).concat(i)}(t):"",r=o?"".concat(o,"/"):"",i=e.replace(".wav",""),c=n?"_".concat(n.replace(/[^a-zA-Z0-9-_]/g,"_")):"",l="".concat(i).concat(c,".wav"),s="".concat(r).concat(l),u=1;t.includes(s);){var p=2===++u?"a":String.fromCharCode(96+u-1);l="".concat(i).concat(p).concat(c,".wav"),s="".concat(r).concat(l)}return console.log("Generated unique filename: ".concat(s," (session folder: ").concat(!!a,', custom: "').concat(n,'")')),{filename:s,sessionFolder:o}},et=function(){var e=$e(Ve().m(function e(){var t,a,o,r,i,c,s,u,p,d,f,m;return Ve().w(function(e){for(;;)switch(e.n){case 0:if(console.log("saveToHardwareQueued called"),l){e.n=1;break}return alert("No audio loaded to save"),e.a(2);case 1:if(xe){e.n=3;break}return console.log("No serial port, connecting..."),e.n=2,Wn();case 2:return e.a(2);case 3:if(t=Un()){e.n=4;break}return alert("No audio data to save"),e.a(2);case 4:return console.log("Getting existing files from SD card..."),e.n=5,Qn();case 5:a=e.v,console.log("Existing files on SD:",a),r=(o=Fe+1)>=2,i=n.params.sample_name||"sample",c=n.params.sample_number||1,s=n.params.custom_suffix||"",u="SDPlayer"===n.type||"SamplePlayer"===n.type?"sample_".concat(c):i.replace(/[^a-zA-Z0-9-_]/g,"_"),p=Jn(u+".wav",s,a,r),d=p.filename,f=p.sessionFolder,Ge(o),f&&He(f),m={id:Date.now(),filename:d,data:t,size:t.byteLength,progress:0,status:"queued"},console.log("Adding transfer item to local queue:",m),Ie(function(e){return[].concat(Ne(e),[m])}),Ce(function(e){return[].concat(Ne(e),[m])}),console.log("Transfer item added to local queue, useEffect will process it");case 6:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),nt=function(){var e=$e(Ve().m(function e(){var n,t;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(!("showDirectoryPicker"in window)){e.n=6;break}return e.p=1,e.n=2,window.showDirectoryPicker({mode:"readwrite"});case 2:return n=e.v,Qe(n),nn("connected"),console.log("SD card connected:",n.name),e.n=3,tt(n);case 3:e.n=5;break;case 4:e.p=4,t=e.v,console.error("Failed to connect to SD card:",t),"AbortError"!==t.name&&alert("Failed to connect to SD card. Make sure you select the SD card root folder.");case 5:e.n=7;break;case 6:alert("Direct SD card access not supported in this browser. Please use Chrome/Edge with File System Access API.");case 7:return e.a(2)}},e,null,[[1,4]])}));return function(){return e.apply(this,arguments)}}(),tt=function(){var e=$e(Ve().m(function e(n){var t,a,o,r,i,c,l,s,u,p;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:e.p=0,t=!1,a=!1,e.p=1,r=Ze(n.entries());case 2:return e.n=3,r.next();case 3:if(!(t=!(i=e.v).done)){e.n=5;break}c=Ke(i.value,2),l=c[0],s=c[1],console.log("Found:",l,s.kind);case 4:t=!1,e.n=2;break;case 5:e.n=7;break;case 6:e.p=6,u=e.v,a=!0,o=u;case 7:if(e.p=7,e.p=8,!t||null==r.return){e.n=9;break}return e.n=9,r.return();case 9:if(e.p=9,!a){e.n=10;break}throw o;case 10:return e.f(9);case 11:return e.f(7);case 12:alert("SD card connected successfully!\nDirectory: ".concat(n.name,"\n\nYou can now save samples directly to the SD card.")),e.n=14;break;case 13:e.p=13,p=e.v,console.warn("Could not verify SD card structure:",p);case 14:return e.a(2)}},e,null,[[8,,9,11],[1,6,7,12],[0,13]])}));return function(n){return e.apply(this,arguments)}}(),at=function(){var e=$e(Ve().m(function e(){var t,a,o,r,i,c,s,u;return Ve().w(function(e){for(;;)switch(e.p=e.n){case 0:if(l&&Xe){e.n=3;break}if(Xe){e.n=2;break}return e.n=1,nt();case 1:return e.a(2);case 2:return alert("No audio loaded to save"),e.a(2);case 3:if(e.p=3,nn("writing"),t=Un()){e.n=4;break}return alert("No audio data to save"),nn("connected"),e.a(2);case 4:return a=n.params.sample_name||"sample",o=a.replace(/[^a-zA-Z0-9-_]/g,"_"),"SDPlayer"===n.type||"SamplePlayer"===n.type?(i=n.params.sample_number||1,r="sample".concat(i,".wav")):r="".concat(o,".wav"),e.n=5,Xe.getFileHandle(r,{create:!0});case 5:return c=e.v,e.n=6,c.createWritable();case 6:return s=e.v,e.n=7,s.write(t);case 7:return e.n=8,s.close();case 8:nn("connected"),alert("✅ Sample saved to SD card successfully!\n\nFile: ".concat(r,"\nSize: ").concat((t.byteLength/1024).toFixed(1)," KB\nFormat: 16-bit WAV at ").concat(B," Hz\n\nThe file is now ready to use with your ESP32 Sample Player module!")),e.n=10;break;case 9:e.p=9,u=e.v,console.error("Failed to save to SD card:",u),nn("connected"),"NotAllowedError"===u.name?alert("Permission denied. Please grant write access to the SD card directory."):alert("Failed to save to SD card: ".concat(u.message));case 10:return e.a(2)}},e,null,[[3,9]])}));return function(){return e.apply(this,arguments)}}();(0,a.useEffect)(function(){return function(){Hn()}},[]);var ot=function(){N&&rt(k,E),G(null),U(0)},rt=function(e,n){if(l){var t=Math.abs(n-e);if(t<.02&&t<1/ne*.1){var a=Math.min(20,1/(10*t));te(a);var o=(e+n)/2,r=1/a,i=Math.max(0,Math.min(1-r,o-r/2));re(i)}}},it=["KickDrum","SnareDrum","Percussion"].includes(n.type),ct=(0,a.useRef)({isDragging:!1,param:null,startY:0,startValue:0}),lt=function(e,n,t,a){console.log("🎛️ SIMPLE Knob MouseDown:",n,t),e.preventDefault(),e.stopPropagation(),ct.current={isDragging:!0,param:n,startY:e.clientY,startValue:t},console.log("🎛️ Set drag state:",ct.current),a&&(rn(a),console.log("🎛️ Set active layer to:",a)),console.log("🎛️ Adding global mouse listeners IMMEDIATELY"),document.addEventListener("mousemove",st),document.addEventListener("mouseup",ut)},st=function(e){if(console.log("🎛️ SIMPLE MouseMove, isDragging:",ct.current.isDragging),ct.current.isDragging){var n=ct.current.startY-e.clientY,t=.005*n,a=Math.max(0,Math.min(1,ct.current.startValue+t));if(console.log("🎛️ SIMPLE MouseMove:",ct.current.param,"deltaY:",n,"newValue:",a),"volume"===ct.current.param)T(a),console.log("🎛️ Updated volume to:",a);else{var o=ct.current.param;dn(function(e){return qe(qe({},e),{},Ue({},o,a))}),Cn(o,a),console.log("🎛️ Updated param",o,"to:",a)}}else console.log("🎛️ Not dragging, ignoring")},ut=function(){console.log("🎛️ SIMPLE MouseUp, was dragging:",ct.current.param),ct.current={isDragging:!1,param:null,startY:0,startValue:0},console.log("🎛️ Removing global mouse listeners"),document.removeEventListener("mousemove",st),document.removeEventListener("mouseup",ut)};return a.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.8)",zIndex:2e3,display:"flex",alignItems:"center",justifyContent:"center"}},a.createElement("div",{style:{backgroundColor:"#0c1428",border:"1px solid #1f2937",borderRadius:"12px",width:"90vw",height:"85vh",maxWidth:"1200px",maxHeight:"800px",display:"flex",flexDirection:"column",overflow:"hidden"}},a.createElement("div",{style:{padding:"16px 24px",borderBottom:"1px solid #1f2937",display:"flex",justifyContent:"space-between",alignItems:"center"}},a.createElement("h2",{style:{margin:0,color:"#22c55e",fontSize:"18px"}},n.type," Sample Editor"),a.createElement("button",{className:"btn btn-ghost",onClick:o,style:{fontSize:"18px",padding:"4px 8px"}},"×")),a.createElement("div",{style:{flex:1,display:"grid",gridTemplateColumns:it?"120px 1fr":"120px 1fr 250px",gap:"1px",backgroundColor:"#1f2937",minHeight:0}},a.createElement("div",{style:{backgroundColor:"#0c1428",padding:"16px",display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",gap:"20px",borderRight:"1px solid #334155"}},a.createElement("h3",{style:{color:"#e2e8f0",fontSize:"14px",marginBottom:"8px",textAlign:"center"}},"Layer Volumes"),it?a.createElement(a.Fragment,null,("KickDrum"===n.type||"SnareDrum"===n.type)&&a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("div",{style:{textAlign:"center"}},a.createElement("div",{style:{width:"60px",height:"60px",borderRadius:"50%",background:"conic-gradient(from 0deg, #334155 0deg, #22c55e "+270*pn.osc_level+"deg, #334155 "+270*pn.osc_level+"deg)",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",border:"oscillator"===on?"3px solid #22c55e":"2px solid #1f2937",marginBottom:"8px",opacity:pn.osc_mute?.5:1},onMouseDown:function(e){return lt(e,"osc_level",pn.osc_level,"oscillator")},onMouseEnter:function(){return console.log("🎛️ Mouse ENTERED oscillator knob")},onMouseLeave:function(){return console.log("🎛️ Mouse LEFT oscillator knob")},onClick:function(e){console.log("🎛️ Oscillator knob CLICKED",e);var n=pn.osc_level,t=Math.min(1,n+.1);console.log("🎛️ TEST: Updating osc_level from",n,"to",t),dn(function(e){return qe(qe({},e),{},{osc_level:t})}),Cn("osc_level",t)}},a.createElement("div",{style:{width:"46px",height:"46px",borderRadius:"50%",backgroundColor:"#0f172a",display:"flex",alignItems:"center",justifyContent:"center",color:"#e2e8f0",fontSize:"10px",fontWeight:"bold"}},Math.round(100*pn.osc_level))),a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block"}},"KickDrum"===n.type?"Sub Osc":"Tone")),a.createElement("button",{style:{width:"24px",height:"24px",borderRadius:"4px",border:"none",backgroundColor:pn.osc_mute?"#dc2626":"#374151",color:pn.osc_mute?"#fff":"#9ca3af",fontSize:"10px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center"},onClick:function(){var e=!pn.osc_mute;dn(function(n){return qe(qe({},n),{},{osc_mute:e})}),Cn("osc_mute",e)},title:"Mute Oscillator Layer"},"M")),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("div",{style:{textAlign:"center"}},a.createElement("div",{style:{width:"60px",height:"60px",borderRadius:"50%",background:"conic-gradient(from 0deg, #334155 0deg, #f59e0b "+270*pn.noise_level+"deg, #334155 "+270*pn.noise_level+"deg)",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",border:"noise"===on?"3px solid #f59e0b":"2px solid #1f2937",marginBottom:"8px",opacity:pn.noise_mute?.5:1},onMouseDown:function(e){return lt(e,"noise_level",pn.noise_level,"noise")}},a.createElement("div",{style:{width:"46px",height:"46px",borderRadius:"50%",backgroundColor:"#0f172a",display:"flex",alignItems:"center",justifyContent:"center",color:"#e2e8f0",fontSize:"10px",fontWeight:"bold"}},Math.round(100*pn.noise_level))),a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block"}},"Noise")),a.createElement("button",{style:{width:"24px",height:"24px",borderRadius:"4px",border:"none",backgroundColor:pn.noise_mute?"#dc2626":"#374151",color:pn.noise_mute?"#fff":"#9ca3af",fontSize:"10px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center"},onClick:function(){var e=!pn.noise_mute;dn(function(n){return qe(qe({},n),{},{noise_mute:e})}),Cn("noise_mute",e)},title:"Mute Noise Layer"},"M")),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("div",{style:{textAlign:"center"}},a.createElement("div",{style:{width:"60px",height:"60px",borderRadius:"50%",background:"conic-gradient(from 0deg, #334155 0deg, #8b5cf6 "+270*pn.sample_level+"deg, #334155 "+270*pn.sample_level+"deg)",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",border:"sample"===on?"3px solid #8b5cf6":"2px solid #1f2937",marginBottom:"8px",opacity:pn.sample_mute?.5:1},onMouseDown:function(e){return lt(e,"sample_level",pn.sample_level,"sample")}},a.createElement("div",{style:{width:"46px",height:"46px",borderRadius:"50%",backgroundColor:"#0f172a",display:"flex",alignItems:"center",justifyContent:"center",color:"#e2e8f0",fontSize:"10px",fontWeight:"bold"}},Math.round(100*pn.sample_level))),a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block"}},"Sample")),a.createElement("button",{style:{width:"24px",height:"24px",borderRadius:"4px",border:"none",backgroundColor:pn.sample_mute?"#dc2626":"#374151",color:pn.sample_mute?"#fff":"#9ca3af",fontSize:"10px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center"},onClick:function(){var e=!pn.sample_mute;dn(function(n){return qe(qe({},n),{},{sample_mute:e})}),Cn("sample_mute",e)},title:"Mute Sample Layer"},"M"))):a.createElement("div",{style:{textAlign:"center"}},a.createElement("div",{style:{width:"60px",height:"60px",borderRadius:"50%",background:"conic-gradient(from 0deg, #334155 0deg, #22c55e "+270*A+"deg, #334155 "+270*A+"deg)",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",border:"2px solid #1f2937",marginBottom:"8px"},onMouseDown:function(e){return lt(e,"volume",A)}},a.createElement("div",{style:{width:"46px",height:"46px",borderRadius:"50%",backgroundColor:"#0f172a",display:"flex",alignItems:"center",justifyContent:"center",color:"#e2e8f0",fontSize:"10px",fontWeight:"bold"}},Math.round(100*A))),a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block"}},"Volume"))),a.createElement("div",{style:{backgroundColor:"#0c1428",display:"flex",flexDirection:"column"}},a.createElement("div",{style:{padding:"12px",borderBottom:"1px solid #1f2937",display:"flex",justifyContent:"space-between",alignItems:"center"}},a.createElement("div",{style:{display:"flex",gap:"8px",alignItems:"center"}},!it&&a.createElement(a.Fragment,null,a.createElement("div",{style:{display:"flex",gap:"4px",alignItems:"center",marginRight:"12px"}},a.createElement("button",{className:"btn ".concat("playing"===me?"btn-amber":"btn-green"),onClick:qn,disabled:!l,style:{fontSize:"11px",padding:"6px 12px",minWidth:"70px",fontWeight:"600"}},"playing"===me?"⏸️ Pause":"▶️ Play")),a.createElement("div",{style:{display:"flex",gap:"4px",alignItems:"center",marginRight:"12px"}},a.createElement("span",{style:{color:"#cbd5e1",fontSize:"11px"}},"Mode:"),a.createElement("select",{value:le,onChange:function(e){return se(e.target.value)},style:{padding:"2px 4px",borderRadius:"4px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"11px"}},a.createElement("option",{value:"normal"},"Forward"),a.createElement("option",{value:"reverse"},"Reverse"),a.createElement("option",{value:"loop"},"Loop"),a.createElement("option",{value:"sustain"},"Sustain"))))),a.createElement("div",{style:{display:"flex",gap:"12px",alignItems:"center"}},!it&&a.createElement("div",{style:{display:"flex",gap:"8px",alignItems:"center"}},a.createElement("span",{style:{color:"#cbd5e1",fontSize:"12px"}},"Zoom:"),a.createElement("button",{className:"btn btn-ghost",onClick:function(){return te(function(e){return Math.max(.1,.5*e)})},style:{fontSize:"11px",padding:"2px 6px"}},"-"),a.createElement("span",{style:{color:"#e2e8f0",fontSize:"11px",minWidth:"40px",textAlign:"center"}},ne.toFixed(1),"x"),a.createElement("button",{className:"btn btn-ghost",onClick:function(){return te(function(e){return Math.min(10,2*e)})},style:{fontSize:"11px",padding:"2px 6px"}},"+")))),it?a.createElement("div",{style:{flex:1,padding:"12px"}},a.createElement(De,{module:n,onUpdateParam:Cn,embedded:!0,activeLayer:on,setActiveLayer:rn})):a.createElement("div",{style:{flex:1,padding:"12px"},onDragOver:function(e){e.preventDefault(),e.stopPropagation(),b(!0)},onDragLeave:function(e){e.preventDefault(),e.stopPropagation(),b(!1)},onDrop:function(e){e.preventDefault(),e.stopPropagation(),b(!1);var n=Array.from(e.dataTransfer.files).find(function(e){return e.type.startsWith("audio/")||e.name.toLowerCase().endsWith(".wav")||e.name.toLowerCase().endsWith(".mp3")||e.name.toLowerCase().endsWith(".ogg")});n&&Fn(n)}},a.createElement("div",{style:{position:"relative",width:"100%",height:"100%",backgroundColor:v?"#1e293b":"#0b1220",border:"2px dashed ".concat(v?"#22c55e":"#334155"),borderRadius:"8px",display:"flex",alignItems:"center",justifyContent:"center",cursor:l?"crosshair":"pointer",transition:"all 0.2s ease"}},l?null:a.createElement("div",{style:{textAlign:"center",color:"#94a3b8",fontSize:"14px",userSelect:"none",pointerEvents:"none"}},v?a.createElement("div",null,a.createElement("div",{style:{fontSize:"24px",marginBottom:"8px"}},"🎵"),a.createElement("div",{style:{fontWeight:"600",color:"#22c55e"}},"Drop audio file here"),a.createElement("div",{style:{fontSize:"12px",marginTop:"4px"}},"Supports .wav, .mp3, .ogg")):a.createElement("div",null,a.createElement("div",{style:{fontSize:"32px",marginBottom:"12px",opacity:.5}},"🎵"),a.createElement("div",{style:{fontWeight:"600",marginBottom:"4px"}},"No sample loaded"),a.createElement("div",{style:{fontSize:"12px"}},"Click here to browse files"),a.createElement("div",{style:{fontSize:"12px",marginTop:"2px"}},"or drag & drop audio files"))),a.createElement("canvas",{ref:r,width:800,height:300,onMouseDown:function(e){if(console.log("🖱️ MOUSE DOWN EVENT:",{type:e.type,button:e.button,buttons:e.buttons,target:e.target.tagName,defaultPrevented:e.defaultPrevented}),l){var n=r.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=(e.clientX-t.left)*a,c=o/n.width,s=l?l.getChannelData?l.getChannelData(0).length:l.length:0,u=Math.floor(s/ne),p=Math.floor(oe*(s-u)),d=p/s,f=(p+u)/s-d,m=(k-d)/f*n.width,_=(E-d)/f*n.width;if(console.log("🎵 MARKER POSITIONS:"),console.log("  mouseX:",o),console.log("  loopStart:",k,"→ loopStartX:",m,"(distance:",Math.abs(o-m),")"),console.log("  loopEnd:",E,"→ loopEndX:",_,"(distance:",Math.abs(o-_),")"),console.log("  clickTolerance:",50),console.log("  startInRange:",Math.abs(o-m)<50),console.log("  endInRange:",Math.abs(o-_)<50),Math.abs(o-_)<50)return console.log("🔴 END MARKER HIT! Setting drag state to loopEnd"),console.log("🔴 Current isDragging state before:",N),G("loopEnd"),U(o),e.preventDefault(),e.stopPropagation(),console.log("🔴 Event prevented and propagation stopped"),void setTimeout(function(){console.log("🔴 isDragging state after timeout:",N)},0);if(Math.abs(o-m)<50)return console.log("🟢 START MARKER HIT! Setting drag state to loopStart"),console.log("🟢 Current isDragging state before:",N),G("loopStart"),U(o),e.preventDefault(),e.stopPropagation(),console.log("🟢 Event prevented and propagation stopped"),void setTimeout(function(){console.log("🟢 isDragging state after timeout:",N)},0);console.log("❌ No marker hit, normal click behavior");var h=d+c*f;if(e.shiftKey){var v=Math.max(h,k+.01);w(v),rt(k,v)}else if(e.ctrlKey){var b=Math.min(h,E-.01);S(b),rt(b,E)}else g(h)}else!l&&i.current&&i.current.click()},onMouseMove:function(e){if(N&&l){console.log("🖱️ Mouse move: isDragging =",N);var n=r.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=(e.clientX-t.left)*a/n.width,i=l.getChannelData?l.getChannelData(0).length:l.length,c=Math.floor(i/ne),s=Math.floor(oe*(i-c)),u=s/i,p=(s+c)/i-u,d=Math.max(0,Math.min(1,u+o*p));if("loopStart"===N){var f=Math.min(d,E-.01);S(f)}else if("loopEnd"===N){var m=Math.max(d,k+.01);w(m)}e.preventDefault()}else N&&console.log("🚫 Mouse move called but no audio buffer")},onMouseUp:ot,onMouseLeave:ot,onWheel:function(e){if(e.preventDefault(),e.ctrlKey){var n=e.deltaY>0?.5:2;te(function(e){return Math.max(.1,Math.min(50,e*n))})}else{var t=e.deltaY>0?.05:-.05;re(function(e){return Math.max(0,Math.min(1,e+t))})}},style:{position:"absolute",width:"100%",height:"100%",cursor:l?N?"grabbing":"crosshair":"pointer",opacity:l?1:0}})))),a.createElement("div",{style:{backgroundColor:"#0c1428",padding:"16px",overflowY:"auto"}},!it&&a.createElement(a.Fragment,null,a.createElement("h3",{style:{color:"#e2e8f0",fontSize:"14px",marginBottom:"16px"}},"Sample Controls"),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Load Sample"),a.createElement("div",{style:{display:"flex",gap:"8px"}},a.createElement("input",{ref:i,type:"file",accept:".wav,.mp3,.ogg",onChange:function(e){var n=e.target.files[0];n&&Fn(n)},style:{flex:1,padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}}),a.createElement("button",{onClick:mn?function(){Sn.current&&mn&&(Sn.current.stop(),_n(!1))}:Nn,style:{padding:"6px 12px",borderRadius:"8px",border:"none",backgroundColor:mn?"#dc2626":"#22c55e",color:"white",fontSize:"12px",fontWeight:"500",cursor:"pointer",whiteSpace:"nowrap",transition:"all 0.2s"},onMouseEnter:function(e){e.target.style.opacity="0.8"},onMouseLeave:function(e){e.target.style.opacity="1"}},mn?"⏹ Stop":"🎤 Record")),mn&&a.createElement("div",{style:{marginTop:"8px",padding:"8px",borderRadius:"6px",backgroundColor:"#1e293b",border:"1px solid #dc2626"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"6px"}},a.createElement("span",{style:{color:"#ef4444",fontSize:"11px",fontWeight:"600"}},"● RECORDING"),a.createElement("span",{style:{color:"#cbd5e1",fontSize:"11px",fontFamily:"monospace"}},Math.floor(hn/60),":",String(Math.floor(hn%60)).padStart(2,"0"))),a.createElement("div",{style:{width:"100%",height:"4px",backgroundColor:"#0f172a",borderRadius:"2px",overflow:"hidden"}},a.createElement("div",{style:{width:"".concat(100*yn,"%"),height:"100%",backgroundColor:yn>.9?"#ef4444":yn>.7?"#f59e0b":"#22c55e",transition:"width 0.05s"}})))),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Sample Name"),a.createElement("input",{type:"text",value:n.params.sample_name||"",onChange:function(e){return Cn("sample_name",e.target.value)},placeholder:"Custom sample name",style:{width:"100%",padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}})),("SDPlayer"===n.type||"SamplePlayer"===n.type)&&a.createElement(a.Fragment,null,a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Sample Number (for SDPlayer)"),a.createElement("input",{type:"number",min:"1",max:"32",value:n.params.sample_number||1,onChange:function(e){return Cn("sample_number",parseInt(e.target.value)||1)},style:{width:"100%",padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}}),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginTop:"2px"}},"Will save as: sample",n.params.sample_number||1,".wav")),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Custom Suffix (optional)"),a.createElement("input",{type:"text",placeholder:"e.g. kick, snare, lead",value:n.params.custom_suffix||"",onChange:function(e){return Cn("custom_suffix",e.target.value)},style:{width:"100%",padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}}),a.createElement("div",{style:{color:"#64748b",fontSize:"10px",marginTop:"2px"}},"Preview: sample_",n.params.sample_number||1,"_",n.params.custom_suffix||"name",".wav"),a.createElement("div",{style:{color:"#64748b",fontSize:"10px",marginTop:"1px"}},Fe>=1?"📁 Next file will use session folder: session_[timestamp]":"📄 Will save to root /samples/"))),a.createElement("h4",{style:{color:"#22c55e",fontSize:"12px",marginBottom:"8px",borderTop:"1px solid #334155",paddingTop:"8px"}},"🎵 Pitch Controls"),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Root Note (MIDI)"),a.createElement("select",{value:X,onChange:function(e){return Z(parseInt(e.target.value))},style:{width:"100%",padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}},Array.from({length:128},function(e,n){var t=Math.floor(n/12)-1,o=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][n%12];return a.createElement("option",{key:n,value:n},o,t," (",n,")")}))),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Pitch Shift (Semitones)"),a.createElement("input",{type:"range",min:"-24",max:"24",step:"1",value:V,onChange:function(e){return j(parseInt(e.target.value))},style:{width:"100%"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},V>0?"+":"",V," semitones")),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Fine Tune (Cents)"),a.createElement("input",{type:"range",min:"-100",max:"100",step:"1",value:$,onChange:function(e){return K(parseInt(e.target.value))},style:{width:"100%"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},$>0?"+":"",$," cents")),a.createElement("h4",{style:{color:"#22c55e",fontSize:"12px",marginBottom:"8px",borderTop:"1px solid #334155",paddingTop:"8px"}},"🔄 Loop & Fade Controls"),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Loop Start"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.001",value:k,onChange:function(e){return S(parseFloat(e.target.value))},style:{width:"100%"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},(100*k).toFixed(1),"%")),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Loop End"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.001",value:E,onChange:function(e){return w(parseFloat(e.target.value))},style:{width:"100%"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},(100*E).toFixed(1),"%")),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"flex",alignItems:"center",gap:"8px"}},a.createElement("span",null,"Fade Mode:"),a.createElement("button",{className:"btn ".concat("auto"===pe?"btn-green":"btn-ghost"),onClick:function(){return de("auto"===pe?"manual":"auto")},style:{fontSize:"11px",padding:"2px 6px"}},"auto"===pe?"🔒 Auto":"🔓 Manual"))),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Fade In ","auto"===pe?"(Auto)":""),a.createElement("input",{type:"range",min:"0",max:"0.5",step:"0.001",value:C,onChange:function(e){return R(parseFloat(e.target.value))},disabled:"auto"===pe,style:{width:"100%",opacity:"auto"===pe?.5:1}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},(100*C).toFixed(1),"% of selection ","auto"===pe?"(Auto)":"")),a.createElement("div",{style:{marginBottom:"16px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Fade Out"),a.createElement("input",{type:"range",min:"0",max:"0.5",step:"0.001",value:I,onChange:function(e){return M(parseFloat(e.target.value))},style:{width:"100%"}}),a.createElement("span",{style:{color:"#94a3b8",fontSize:"11px"}},(100*I).toFixed(1),"% of selection")),a.createElement("h3",{style:{color:"#e2e8f0",fontSize:"14px",marginBottom:"16px",borderTop:"1px solid #334155",paddingTop:"16px"}},"Export Settings"),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Sample Rate"),a.createElement("select",{value:B,onChange:function(e){return z(parseInt(e.target.value))},style:{width:"100%",padding:"6px",borderRadius:"8px",border:"1px solid #334155",backgroundColor:"#0f172a",color:"#e2e8f0",fontSize:"12px"}},a.createElement("option",{value:44100},"44.1 kHz"),a.createElement("option",{value:22050},"22.05 kHz"),a.createElement("option",{value:16e3},"16 kHz"),a.createElement("option",{value:8e3},"8 kHz"))),a.createElement("button",{className:"btn btn-green",onClick:function(){var e=Un();if(e){var t=new Blob([e],{type:"audio/wav"}),a=URL.createObjectURL(t),o=document.createElement("a");o.href=a;var r=n.params.sample_name||"sample";o.download="".concat(r.replace(/[^a-zA-Z0-9-_]/g,"_"),".wav"),o.click(),URL.revokeObjectURL(a)}},disabled:!l,style:{width:"100%",marginBottom:"8px"}},"💾 Export WAV File"),a.createElement("button",{className:"btn ".concat("connected"===en?"btn-purple":"writing"===en?"btn-amber":"btn-ghost"),onClick:"not_connected"===en?nt:at,disabled:!l||"writing"===en,style:{width:"100%",marginBottom:"8px"}},"not_connected"===en&&"🗂️ Connect SD Card","connected"===en&&"📁 Save to SD Card","writing"===en&&"⏳ Writing to SD..."),"not_connected"!==en&&a.createElement("button",{className:"btn btn-ghost",onClick:function(){Qe(null),nn("not_connected")},style:{width:"100%",marginBottom:"8px",fontSize:"11px"}},"Disconnect SD Card"),a.createElement("button",{className:"btn ".concat("synth"===ye?"btn-blue":"transferring"===ye||"switching"===ye?"btn-amber":"btn-ghost"),onClick:"disconnected"===ye?Wn:et,disabled:!l||"switching"===ye,style:{width:"100%",marginBottom:"8px"}},"disconnected"===ye&&"🔌 Connect Hardware","synth"===ye&&"💾 Save to Hardware","transferring"===ye&&"📤 Transferring...","usb"===ye&&"📁 USB Mode Active","switching"===ye&&"⏳ Switching Mode..."),"disconnected"!==ye&&a.createElement("button",{className:"btn btn-ghost",onClick:Hn,style:{width:"100%",marginBottom:"8px",fontSize:"11px"}},"Disconnect Hardware"),(Ae||Pe.length>0)&&a.createElement("div",{style:{backgroundColor:"#fbbf24",color:"#92400e",padding:"8px",borderRadius:"4px",marginBottom:"8px",fontSize:"11px",border:"1px solid #f59e0b"}},a.createElement("div",{style:{fontWeight:"bold",marginBottom:"4px"}},"⚠️ File Transfer Active"),a.createElement("div",null,"Do NOT upload Arduino sketches while transferring files! This will interrupt the transfer and may corrupt files."),Pe.length>1&&a.createElement("div",{style:{marginTop:"4px",fontSize:"10px"}},"Queue: ",Pe.length," files waiting")),Pe.length>0&&a.createElement("div",{style:{marginBottom:"16px"}},a.createElement("div",{style:{color:"#cbd5e1",fontSize:"12px",marginBottom:"8px",display:"flex",justifyContent:"space-between",alignItems:"center"}},a.createElement("span",null,"Transfer Queue (",Pe.length,")"),Pe.some(function(e){return"queued"===e.status})&&a.createElement("button",{className:"btn btn-ghost",onClick:function(){Ie([]),Te(null),Ce([])},style:{fontSize:"10px",padding:"2px 6px"}},"Clear")),a.createElement("div",{style:{maxHeight:"120px",overflowY:"auto"}},Pe.map(function(e){return a.createElement("div",{key:e.id,style:{backgroundColor:"#374151",padding:"6px",marginBottom:"4px",borderRadius:"4px",fontSize:"11px"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"2px"}},a.createElement("span",{style:{color:"#cbd5e1"}},"📄 ",e.filename),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"6px"}},a.createElement("span",{style:{color:"transferring"===e.status?"#fbbf24":"completed"===e.status?"#10b981":"error"===e.status?"#ef4444":"#94a3b8"}},"transferring"===e.status&&"📤","queued"===e.status&&"⏳","completed"===e.status&&"✅","error"===e.status&&"❌"),"queued"===e.status&&a.createElement("button",{onClick:function(){return n=e.id,Ie(function(e){return e.filter(function(e){return e.id!==n})}),void Ce(function(e){return e.filter(function(e){return e.id!==n})});var n},style:{background:"none",border:"none",color:"#ef4444",cursor:"pointer",fontSize:"10px",padding:"0 2px"}},"×"))),a.createElement("div",{style:{display:"flex",justifyContent:"space-between",color:"#94a3b8",fontSize:"10px"}},a.createElement("span",null,(e.size/1024).toFixed(1)," KB"),"transferring"===e.status&&a.createElement("span",null,e.progress.toFixed(1),"%")),"transferring"===e.status&&a.createElement("div",{style:{width:"100%",height:"2px",backgroundColor:"#4b5563",borderRadius:"1px",marginTop:"4px",overflow:"hidden"}},a.createElement("div",{style:{width:"".concat(e.progress,"%"),height:"100%",backgroundColor:"#fbbf24",transition:"width 0.3s ease"}})))})))),a.createElement("div",{style:{backgroundColor:"#111827",padding:"8px",borderRadius:"6px",border:"1px solid #334155",marginBottom:"12px"}},a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginBottom:"4px"}},"Total Pitch: ",(12*Math.log2(J)+V+$/100).toFixed(1)," semitones"),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginBottom:"4px"}},"Final Speed: ",(J*Math.pow(2,(100*V+$)/1200)).toFixed(3),"x (",(J*Math.pow(2,(100*V+$)/1200)*100).toFixed(1),"%)"),a.createElement("div",{style:{fontSize:"10px",color:"synth"===ye?"#22c55e":"#94a3b8"}},"Hardware: ","disconnected"===ye?"Not connected":"synth"===ye?"Connected (Synth mode)":"usb"===ye?"USB Storage mode":"Switching..."),a.createElement("div",{style:{fontSize:"10px",color:"connected"===en?"#8b5cf6":"#94a3b8"}},"SD Card: ","not_connected"===en?"Not connected":"connected"===en?"Connected (Direct access)":"Writing...")),!it&&a.createElement("div",{style:{backgroundColor:"#111827",padding:"12px",borderRadius:"8px",border:"1px solid #334155"}},a.createElement("h4",{style:{color:"#22c55e",fontSize:"12px",margin:"0 0 8px 0"}},"Legend"),a.createElement("div",{style:{fontSize:"11px",color:"#cbd5e1"}},a.createElement("div",{style:{marginBottom:"4px"}},a.createElement("span",{style:{color:"#22c55e"}},"●")," Loop Start"),a.createElement("div",{style:{marginBottom:"4px"}},a.createElement("span",{style:{color:"#dc2626"}},"●")," Loop End"),a.createElement("div",{style:{marginBottom:"4px"}},a.createElement("span",{style:{color:"#f59e0b"}},"●")," Play Position"),a.createElement("div",{style:{marginBottom:"4px"}},a.createElement("span",{style:{color:"#22c55e",opacity:.3}},"■")," Loop Region"),a.createElement("div",null,a.createElement("span",{style:{color:"#f59e0b",opacity:.3}},"■")," Fade Regions")))))))};function en(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||function(e,n){if(e){if("string"==typeof e)return nn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?nn(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}const tn=function(e){e.module;var n,t,o,r,i=e.onUpdateParam,c=e.onClose,l=en((0,a.useState)(null),2),s=l[0],u=l[1],p=en((0,a.useState)(null),2),d=p[0],f=p[1],m=(0,a.useRef)();(0,a.useEffect)(function(){var e=function(e){var n;if(e.source===(null===(n=m.current)||void 0===n?void 0:n.contentWindow)){var t=e.data,a=t.type,o=t.data;switch(a){case"ANALYSIS_COMPLETE":u(o),console.log("Received analysis:",o);break;case"PRESET_EXPORT":_(o)}}};return window.addEventListener("message",e),function(){return window.removeEventListener("message",e)}},[]);var _=function(e){var n=function(e){for(var n=e.harmonics,t=(e.meta,[]),a=0;a<257;a++){var o=a/256*2-1,r=o;if(n&&n.length>1){for(var i=0,c=n[0],l=1;l<Math.min(n.length,16);l++){var s=n[l];s&&(i+=Math.pow(10,(s.db-c.db)/20)*Math.sin((l+1)*Math.PI*o))}r=.5*o+.5*i}r=Math.max(-1,Math.min(1,r)),t.push(r.toFixed(6))}return t}(e);f(n),i("preset","custom"),i("customTable",n),alert("Custom preset generated from analysis!\nFundamental: ".concat(e.meta.f0.toFixed(1)," Hz\nTHD: ").concat((100*e.meta.thd).toFixed(1),"%\nHarmonics: ").concat(e.harmonics.length))};return a.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,background:"rgba(0,0,0,0.9)",zIndex:9999,display:"flex",alignItems:"center",justifyContent:"center"}},a.createElement("div",{style:{width:"95%",height:"95%",background:"#0b0d10",borderRadius:"16px",display:"flex",flexDirection:"column",boxShadow:"0 20px 50px rgba(0,0,0,0.5)"}},a.createElement("div",{style:{padding:"16px 24px",borderBottom:"1px solid #1f2a38",display:"flex",justifyContent:"space-between",alignItems:"center"}},a.createElement("div",null,a.createElement("h2",{style:{margin:0,fontSize:"18px",color:"#e9f1f7"}},"Distortion Editor - Spectral Analyzer"),a.createElement("p",{style:{margin:"4px 0 0",fontSize:"13px",color:"#8aa"}},"Load reference & effected audio → Analyze harmonics → Generate custom waveshaping preset")),a.createElement("div",{style:{display:"flex",gap:"8px"}},d&&a.createElement("button",{onClick:function(){d&&(i("preset","custom"),i("customTable",d))},style:{background:"#1c2a42",border:"1px solid #2f5b9e",color:"#e9f1f7",padding:"8px 16px",borderRadius:"8px",cursor:"pointer",fontSize:"13px"}},"Apply Custom Preset"),a.createElement("button",{onClick:c,style:{background:"#4d1f1f",border:"1px solid #8b1d1d",color:"#e9f1f7",padding:"8px 16px",borderRadius:"8px",cursor:"pointer",fontSize:"13px"}},"Close"))),a.createElement("iframe",{ref:m,src:"/spectral_analyzer_ir_helper.html",style:{flex:1,border:"none",borderRadius:"0 0 16px 16px"},title:"Spectral Analyzer"}),s&&a.createElement("div",{style:{position:"absolute",bottom:"24px",left:"24px",background:"#12161b",border:"1px solid #2a3a4d",borderRadius:"12px",padding:"12px 16px",fontSize:"13px",color:"#8aa",maxWidth:"400px"}},a.createElement("div",{style:{color:"#60a5fa",fontWeight:"bold",marginBottom:"4px"}},"Analysis Complete"),a.createElement("div",null,"f₀: ",null===(n=s.meta)||void 0===n||null===(n=n.f0)||void 0===n?void 0:n.toFixed(1)," Hz"),a.createElement("div",null,"THD: ",null===(t=100*(null===(o=s.meta)||void 0===o?void 0:o.thd))||void 0===t?void 0:t.toFixed(1),"%"),a.createElement("div",null,"Harmonics detected: ",null===(r=s.harmonics)||void 0===r?void 0:r.length))))};function an(e){return an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},an(e)}function on(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,rn(a.key),a)}}function rn(e){var n=function(e){if("object"!=an(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=an(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==an(n)?n:n+""}function cn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(cn=function(){return!!e})()}function ln(e){return ln=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ln(e)}function sn(e,n){return sn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},sn(e,n)}const un=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=function(e,n,t){return n=ln(n),function(e,n){if(n&&("object"==an(n)||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,cn()?Reflect.construct(n,t||[],ln(e).constructor):n.apply(e,t))}(this,n,[e])).state={hasError:!1,error:null},t}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&sn(e,n)}(n,e),t=n,r=[{key:"getDerivedStateFromError",value:function(e){return{hasError:!0,error:e}}}],(o=[{key:"componentDidCatch",value:function(e,n){console.error("ErrorBoundary caught an error:",e,n)}},{key:"render",value:function(){var e,n=this;return this.state.hasError?a.createElement("div",{style:{padding:"20px",backgroundColor:"#fee2e2",border:"1px solid #fecaca",borderRadius:"8px",color:"#991b1b"}},a.createElement("h3",{style:{margin:"0 0 12px 0",color:"#991b1b"}},this.props.componentName||"Component"," Error"),a.createElement("p",{style:{margin:"0 0 12px 0",fontSize:"14px"}},"This component has been temporarily disabled due to an error. The rest of the application should continue to work normally."),a.createElement("details",{style:{fontSize:"12px",color:"#7f1d1d"}},a.createElement("summary",null,"Error details"),a.createElement("pre",{style:{whiteSpace:"pre-wrap",marginTop:"8px"}},null===(e=this.state.error)||void 0===e?void 0:e.toString())),this.props.onRetry&&a.createElement("button",{onClick:function(){n.setState({hasError:!1,error:null}),n.props.onRetry()},style:{marginTop:"12px",padding:"6px 12px",backgroundColor:"#991b1b",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"}},"Retry")):this.props.children}}])&&on(t.prototype,o),r&&on(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,o,r}(a.Component);function pn(e){return pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pn(e)}function dn(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function fn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?dn(Object(t),!0).forEach(function(n){mn(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):dn(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function mn(e,n,t){return(n=function(e){var n=function(e){if("object"!=pn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=pn(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==pn(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function _n(e){return function(e){if(Array.isArray(e))return vn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||hn(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function gn(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||hn(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hn(e,n){if(e){if("string"==typeof e)return vn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?vn(e,n):void 0}}function vn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}var bn=function(e){var n=e.label,t=e.value,o=e.min,r=e.max,i=e.step,c=void 0===i?1:i,l=e.onChange,s=e.color,u=void 0===s?"#22c55e":s,p=e.unit,d=void 0===p?"":p,f=gn((0,a.useState)(!1),2),m=f[0],_=f[1],g=gn((0,a.useState)({x:0,y:0,value:0}),2),h=g[0],v=g[1],b=(0,a.useRef)(null),y=(t-o)/(r-o),k=270*y-135;return(0,a.useEffect)(function(){var e=function(e){if(m){var n=h.y-e.clientY,t=(r-o)/100,a=Math.max(o,Math.min(r,h.value+n*t)),i=Math.round(a/c)*c;l(i)}},n=function(){_(!1)};return m&&(document.addEventListener("mousemove",e),document.addEventListener("mouseup",n)),function(){document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",n)}},[m,h,o,r,c,l]),a.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"6px"}},a.createElement("div",{ref:b,onMouseDown:function(e){e.preventDefault(),_(!0),v({x:e.clientX,y:e.clientY,value:t})},style:{width:"40px",height:"40px",borderRadius:"50%",background:"conic-gradient(from 45deg, ".concat(u," ").concat(100*y,"%, #374151 ").concat(100*y,"%)"),border:"2px solid #475569",position:"relative",cursor:m?"grabbing":"grab",transform:"rotate(".concat(k,"deg)"),transition:m?"none":"transform 0.1s ease"}},a.createElement("div",{style:{position:"absolute",width:"2px",height:"12px",backgroundColor:"#ffffff",top:"2px",left:"50%",transform:"translateX(-50%)",borderRadius:"1px"}})),a.createElement("div",{style:{fontSize:"11px",fontWeight:"600",color:u,textAlign:"center",minWidth:"50px"}},n),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",textAlign:"center",fontFamily:"monospace"}},t,d))};const yn=function(e){var n=e.params,t=e.onUpdateParam,o=e.moduleId,r=e.module,i=e.onClose,c=e.fullscreen,l=void 0!==c&&c,s=n||(null==r?void 0:r.params)||{},u=o||(null==r?void 0:r.id),p=(0,a.useRef)(null),d=gn((0,a.useState)(null),2),f=d[0],m=d[1],_=gn((0,a.useState)({x:0,y:0}),2),g=(_[0],_[1]),h=gn((0,a.useState)(!1),2),v=h[0],b=h[1],y=gn((0,a.useState)("ADSR"),2),k=y[0],S=y[1],x=gn((0,a.useState)(!1),2),E=x[0],w=x[1],P=s.attack_ms||10,C=s.decay_ms||120,R=s.sustain||.6,L=s.release_ms||200,I=s.loop_mode||"oneshot",M=s.timescale||1,D=s.trigger_mode||"gate",A=s.attack_curve||"linear",T=s.decay_curve||"exp",O=s.release_curve||"exp",B=s.sustain_mod_enabled||!1,z=s.sustain_lfo_rate||1,F=s.sustain_lfo_depth||.2,N=s.sustain_lfo_wave||"sine",G=s.sustain_mod_source||"internal",q=s.breakpoints||[{time:0,level:0,curve:.5},{time:.1,level:1,curve:.3},{time:.3,level:.6,curve:.7},{time:.8,level:.6,curve:.5},{time:1,level:0,curve:.8}],U=l?800:280,W=l?320:100,V=20,j=200,H=P+C+j,$=Math.max(1e3,H+L);(0,a.useEffect)(function(){K()},[P,C,R,L,f,k,q,I,M,A,T,O]);var K=function(){var e=p.current;if(e){var n=e.getContext("2d"),t=e.getBoundingClientRect(),a=window.devicePixelRatio||1;e.width=t.width*a,e.height=t.height*a,e.style.width=t.width+"px",e.style.height=t.height+"px",n.scale(a,a);var o=t.width,r=t.height,i=o-40,c=r-40,l=V+P/$*i,s=V+(P+C)/$*i,u=V+(P+C+j+L/2e3*200)/$*i,d=V+(P+C+j+L)/$*i,f=V+(1-R)*c,m=r-V;n.textRenderingOptimization="optimizeLegibility",n.imageSmoothingEnabled=!1,n.fillStyle="#0f172a",n.fillRect(0,0,o,r),n.strokeStyle="#374151",n.lineWidth=1,n.setLineDash([2,2]);for(var _=0;_<=4;_++){var g=V+_*c/4;n.beginPath(),n.moveTo(V,g),n.lineTo(o-V,g),n.stroke()}for(var h=0;h<=4;h++){var v=V+h*i/4;n.beginPath(),n.moveTo(v,V),n.lineTo(v,r-V),n.stroke()}n.setLineDash([]),"ADSR"===k?X(n,o,r,i,c,l,s,u,d,20,f,m):Z(n,o,r,i,c),"oneshot"!==I&&(n.strokeStyle="#f59e0b",n.lineWidth=2,n.setLineDash([5,5]),n.strokeRect(V,V,i,c),n.setLineDash([]),n.fillStyle="#f59e0b",n.font="bold 10px monospace",n.textAlign="left",n.fillText("".concat(I.toUpperCase()),25,35));var b=M<.01?"".concat((1e3*M).toFixed(1),"µs"):M<1?"".concat((1e3*M).toFixed(0),"ms"):M<60?"".concat(M.toFixed(1),"s"):"".concat((M/60).toFixed(1),"m");n.fillStyle="#94a3b8",n.font="10px monospace",n.textAlign="right",n.fillText("×".concat(b),U-V-5,W-V-5)}},Y=function(e,n,t,a,o,r,i){for(var c=0;c<=20;c++){var l=c/20,s=void 0;switch(r){case"linear":default:s=l;break;case"exp":s=i?(1-Math.exp(-5*l))/(1-Math.exp(-5)):1-(1-Math.exp(-5*(1-l)))/(1-Math.exp(-5));break;case"log":s=i?Math.log(1+9*l)/Math.log(10):1-Math.log(1+9*(1-l))/Math.log(10);break;case"sine":s=i?Math.sin(l*Math.PI/2):1-Math.sin((1-l)*Math.PI/2);break;case"quad":s=i?l*l:1-(1-l)*(1-l)}var u=n+(a-n)*l,p=t+(o-t)*s;0===c?e.moveTo(u,p):e.lineTo(u,p)}},X=function(e,n,t,a,o,r,i,c,l,s,u,p){e.strokeStyle="#22c55e",e.lineWidth=3,e.beginPath(),e.moveTo(V,W-V),Y(e,V,W-V,r,s,A,!0),Y(e,r,s,i,u,T,!1),e.lineTo(c,u),Y(e,c,u,l,p,O,!1),e.stroke(),J(e,r,s,0,"#22c55e","A"),J(e,i,s,1,"#f59e0b","D"),J(e,c,u,2,"#3b82f6","S"),J(e,l,p,3,"#ef4444","R"),e.fillStyle="#cbd5e1",e.font='bold 11px "SF Mono", "Monaco", "Inconsolata", "Fira Code", "Droid Sans Mono", "Source Code Pro", monospace',e.textAlign="center",e.textBaseline="alphabetic";var d=P*M,f=C*M,m=L*M;e.fillText("A: ".concat(Q(d)),Math.round(r),Math.round(t-5)),e.fillText("D: ".concat(Q(f)),Math.round((r+i)/2),Math.round(t-5)),e.fillText("S: ".concat(Math.round(100*R),"%"),Math.round((i+c)/2),Math.round(t-5)),e.fillText("R: ".concat(Q(m)),Math.round((c+l)/2),Math.round(t-5))},Z=function(e,n,t,a,o){if(!(q.length<2)){e.strokeStyle="#22c55e",e.lineWidth=3,e.beginPath();for(var r=0;r<q.length;r++){var i=q[r],c=V+i.time*a,l=V+(1-i.level)*o;if(0===r)e.moveTo(c,l);else{var s=q[r-1],u=V+s.time*a,p=V+(1-s.level)*o,d=s.curve,m=u+(c-u)*d,_=p+(l-p)*(1-d);e.quadraticCurveTo(m,_,c,l)}}if(e.stroke(),q.forEach(function(n,t){var r=V+n.time*a,i=V+(1-n.level)*o;J(e,r,i,t,["#22c55e","#f59e0b","#3b82f6","#ef4444","#8b5cf6"][t%5],"".concat(t+1))}),null!==f&&f<q.length-1){var g=q[f],h=q[f+1],v=V+g.time*a,b=V+(1-g.level)*o,y=V+h.time*a,k=V+(1-h.level)*o,S=v+(y-v)*g.curve,x=b+(k-b)*(1-g.curve);e.strokeStyle="#94a3b8",e.lineWidth=1,e.setLineDash([2,2]),e.beginPath(),e.moveTo(v,b),e.lineTo(S,x),e.lineTo(y,k),e.stroke(),e.setLineDash([]),e.fillStyle="#94a3b8",e.strokeStyle="#ffffff",e.lineWidth=1,e.beginPath(),e.arc(S,x,4,0,2*Math.PI),e.fill(),e.stroke()}}},Q=function(e){return e<1?"".concat((1e3*e).toFixed(0),"µs"):e<1e3?"".concat(e.toFixed(0),"ms"):e<6e4?"".concat((e/1e3).toFixed(1),"s"):"".concat((e/6e4).toFixed(1),"m")},J=function(e,n,t,a,o,r){var i=f===a?8:6;e.fillStyle=o,e.strokeStyle="#ffffff",e.lineWidth=2,e.beginPath(),e.arc(n,t,i,0,2*Math.PI),e.fill(),e.stroke(),e.fillStyle="#000000",e.font="bold 10px monospace",e.textAlign="center",e.fillText(r,n,t+3)},ee=function(e){console.log("🖱️ MOUSE DOWN EVENT FIRED!",{type:e.type,button:e.button,clientX:e.clientX,clientY:e.clientY});var n=p.current;if(n){var a=n.getBoundingClientRect(),o=e.clientX-a.left,r=e.clientY-a.top;console.log("📐 Mouse coordinates:",{mouseX:o,mouseY:r,editMode:k});var i=a.width-40,c=a.height-40,l=15;if("ADSR"===k){var s=V+P/$*i,d=V+(P+C)/$*i,_=V+(P+C+j+L/2e3*200)/$*i,h=V+(P+C+j+L)/$*i,v=V,b=V+(1-R)*c,y=a.height-V;console.log("🎛️ ADSR Click Detection:",{mouseX:o,mouseY:r,tolerance:l,editMode:k,attack_ms:P,decay_ms:C,sustain:R,release_ms:L,timescale:M,totalTime:$,margin:V,plotWidth:i,plotHeight:c,attackX:s,attackY:v,decayX:d,sustainY:b,sustainX:_,releaseX:h,releaseY:y,attackDist:Math.abs(o-s)+Math.abs(r-v),decayDist:Math.abs(o-d)+Math.abs(r-v),sustainDist:Math.abs(o-_)+Math.abs(r-b),releaseDist:Math.abs(o-h)+Math.abs(r-y)}),Math.abs(o-s)<l&&Math.abs(r-v)<l?(console.log("🟢 ATTACK point clicked"),m(0)):Math.abs(o-d)<l&&Math.abs(r-v)<l?(console.log("🟡 DECAY point clicked"),m(1)):Math.abs(o-_)<l&&Math.abs(r-b)<l?(console.log("🔵 SUSTAIN point clicked"),m(2)):Math.abs(o-h)<l&&Math.abs(r-y)<l?(console.log("🔴 RELEASE point clicked"),m(3)):console.log("❌ No control point hit")}else{for(var S=0;S<q.length;S++){var x=q[S],E=V+x.time*i,w=V+(1-x.level)*c;if(Math.abs(o-E)<l&&Math.abs(r-w)<l){m(S),g({x:o-E,y:r-w});break}}if(null===f&&2===e.detail){var I=(o-V)/i,D=1-(r-V)/c;if(I>=0&&I<=1&&D>=0&&D<=1){var A=[].concat(_n(q),[{time:I,level:D,curve:.5}]).sort(function(e,n){return e.time-n.time});t(u,"breakpoints",A)}}}e.preventDefault()}else console.log("❌ No canvas ref!")};return(0,a.useEffect)(function(){if(null!==f){var e=function(e){p.current&&function(e){if(null!==f&&console.log("🖱️ MOUSE MOVE while dragging:",{isDragging:f,editMode:k}),null!==f){var n=p.current.getBoundingClientRect(),a=e.clientX-n.left,o=e.clientY-n.top,r=n.width-40,i=n.height-40,c=Math.max(0,Math.min(1,(a-V)/r)),l=Math.max(0,Math.min(1,1-(o-V)/i));if("ADSR"===k){console.log("🎛️ ADSR drag detected:",{isDragging:f,timeRatio:c,levelRatio:l});var s=2e3;switch(f){case 0:var d=4e3*M,m=Math.max(1,Math.min(d,c*d));console.log("🟢 Attack update:",{newAttack:m,timeRatio:c,maxAttackTime:d,actualModuleId:u}),t(u,"attack_ms",Math.round(m));break;case 1:var _=4e3*M,g=Math.max(1,Math.min(_,c*_));console.log("🟡 Decay update:",{newDecay:g,timeRatio:c,maxDecayTime:_,actualModuleId:u}),t(u,"decay_ms",Math.round(g));break;case 2:console.log("🔵 Sustain update:",{levelRatio:l,timeRatio:c,actualModuleId:u}),t(u,"sustain",l);var h=V+(P+C)/$*r,v=.8*r,b=Math.max(0,Math.min(1,(a-h)/v));b=Math.pow(b,.5);var y=Math.max(50,Math.min(s,50+1950*b));t(u,"release_ms",Math.round(y));break;case 3:var S=V+(P+C+j)/$*r,x=Math.max(0,Math.min(1,(a-S)/(.3*r))),E=Math.max(10,Math.min(s,x*s));console.log("🔴 Release update:",{mouseX:a,sustainX:S,releaseTimeRatio:x,newReleaseTime:E,actualModuleId:u}),t(u,"release_ms",Math.round(E))}}else if(f<q.length){var w=_n(q),R=0,L=1;f>0&&(R=q[f-1].time+.01),f<q.length-1&&(L=q[f+1].time-.01),w[f]=fn(fn({},w[f]),{},{time:Math.max(R,Math.min(L,c)),level:l}),t(u,"breakpoints",w)}e.preventDefault()}}(fn(fn({},e),{},{clientX:e.clientX,clientY:e.clientY,preventDefault:function(){}}))},n=function(e){console.log("🖱️ GLOBAL MOUSE UP - ending drag"),null!==f&&console.log("🖱️ MOUSE UP - ending drag for:",f),m(null)};return document.addEventListener("mousemove",e),document.addEventListener("mouseup",n),function(){document.removeEventListener("mousemove",e),document.removeEventListener("mouseup",n)}}},[f,k,q,P,C,R,L,M,u]),(0,a.useEffect)(function(){var e=function(e){"Escape"===e.key&&i()};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[i]),l?a.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.8)",zIndex:2e3,display:"flex",alignItems:"center",justifyContent:"center"}},a.createElement("div",{style:{backgroundColor:"#0c1428",border:"1px solid #1f2937",borderRadius:"12px",width:"95vw",height:"90vh",padding:"20px",display:"flex",flexDirection:"column",overflow:"auto"}},a.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between",marginBottom:"20px",paddingBottom:"12px",borderBottom:"1px solid #334155"}},a.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between",width:"100%"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("h2",{style:{color:"#22c55e",fontWeight:"bold",fontSize:"24px",margin:0}},"📈 Advanced Envelope Generator"),a.createElement("div",{style:{color:"#94a3b8",fontSize:"16px"}},null==r?void 0:r.type," - ",null==r?void 0:r.id))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"16px"}},a.createElement("div",{style:{display:"flex",border:"1px solid #374151",borderRadius:"6px",overflow:"hidden"}},a.createElement("button",{onClick:function(){return S("ADSR")},style:{padding:"8px 16px",background:"ADSR"===k?"#22c55e":"#374151",color:"ADSR"===k?"#000":"#cbd5e1",border:"none",fontSize:"14px",fontWeight:"700",cursor:"pointer"}},"ADSR MODE"),a.createElement("button",{onClick:function(){return S("Freeform")},style:{padding:"8px 16px",background:"Freeform"===k?"#22c55e":"#374151",color:"Freeform"===k?"#000":"#cbd5e1",border:"none",fontSize:"14px",fontWeight:"700",cursor:"pointer"}},"FREEFORM MODE")),a.createElement("button",{onClick:i,style:{width:"32px",height:"32px",borderRadius:"4px",border:"none",background:"#dc2626",color:"#fff",fontSize:"18px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.3)"},title:"Close Editor (ESC)"},"✕"))),a.createElement("div",{style:{flex:1,display:"flex",gap:"20px",overflow:"auto",minHeight:0}},a.createElement("div",{style:{flex:1,display:"flex",flexDirection:"column",justifyContent:"center"}},a.createElement("canvas",{ref:p,width:U,height:W,onMouseDown:ee,style:{border:"2px solid #374151",borderRadius:"8px",cursor:null!==f?"grabbing":"crosshair",backgroundColor:"#0f172a",display:"block",width:l?"800px":"280px",height:l?"320px":"100px"}}),a.createElement("div",{style:{fontSize:"14px",color:"#94a3b8",textAlign:"center",marginTop:"12px",lineHeight:"1.4"}},"ADSR"===k?"🎛️ Drag control points to adjust envelope • Sustain: ↕️ level, ↔️ release time • Switch to FREEFORM mode for unlimited breakpoints":"🖱️ Drag breakpoints to shape envelope • Double-click to add points • Right-click to delete points"),"ADSR"===k&&a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",width:l?"800px":"280px",marginTop:"20px",padding:"16px 20px",backgroundColor:"#0f172a",border:"1px solid #334155",borderRadius:"8px",boxSizing:"border-box"}},a.createElement(bn,{label:"Attack",value:P,min:1,max:2e3,step:1,onChange:function(e){return t(u,"attack_ms",e)},color:"#22c55e",unit:"ms"}),a.createElement(bn,{label:"Decay",value:C,min:1,max:2e3,step:1,onChange:function(e){return t(u,"decay_ms",e)},color:"#f59e0b",unit:"ms"}),a.createElement(bn,{label:"Sustain",value:Math.round(100*R),min:0,max:100,step:1,onChange:function(e){return t(u,"sustain",e/100)},color:"#3b82f6",unit:"%"}),a.createElement(bn,{label:"Release",value:L,min:10,max:3e3,step:1,onChange:function(e){return t(u,"release_ms",e)},color:"#ef4444",unit:"ms"}))),a.createElement("div",{style:{width:"300px",display:"flex",flexDirection:"column",gap:"20px",overflowY:"auto",paddingRight:"10px"}},a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"16px",fontSize:"14px"}},a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"8px"}},a.createElement("label",{style:{color:"#22c55e",fontWeight:"700",fontSize:"16px"}},"Loop Mode"),a.createElement("select",{value:I,onChange:function(e){return t(u,"loop_mode",e.target.value)},style:{padding:"8px 12px",background:"#0f172a",border:"2px solid #374151",borderRadius:"6px",color:"#cbd5e1",fontSize:"14px"}},a.createElement("option",{value:"oneshot"},"🎯 One-Shot"),a.createElement("option",{value:"loop"},"🔄 Loop"),a.createElement("option",{value:"pingpong"},"⚡ Ping-Pong"))),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"8px"}},a.createElement("label",{style:{color:"#22c55e",fontWeight:"700",fontSize:"16px"}},"Trigger Mode"),a.createElement("select",{value:D,onChange:function(e){return t(u,"trigger_mode",e.target.value)},style:{padding:"8px 12px",background:"#0f172a",border:"2px solid #374151",borderRadius:"6px",color:"#cbd5e1",fontSize:"14px"}},a.createElement("option",{value:"gate"},"🚪 Gate"),a.createElement("option",{value:"trigger"},"⚡ Trigger"),a.createElement("option",{value:"lfo"},"🌊 LFO"))),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"8px"}},a.createElement("label",{style:{color:"#22c55e",fontWeight:"700",fontSize:"16px"}},"⏱️ Timescale: ",M<.01?"".concat((1e3*M).toFixed(1),"µs"):M<1?"".concat((1e3*M).toFixed(0),"ms"):M<60?"".concat(M.toFixed(1),"s"):"".concat((M/60).toFixed(1),"m")),a.createElement("input",{type:"range",min:"-3",max:"2",step:"0.1",value:Math.log10(M),onChange:function(e){return t(u,"timescale",Math.pow(10,parseFloat(e.target.value)))},style:{width:"100%",height:"8px",background:"#374151",outline:"none",borderRadius:"4px"}}),a.createElement("div",{style:{display:"flex",justifyContent:"space-between",fontSize:"12px",color:"#6b7280"}},a.createElement("span",null,"1ms"),a.createElement("span",null,"1s"),a.createElement("span",null,"100s"))),"ADSR"===k&&a.createElement("div",{style:{backgroundColor:"#111827",border:"1px solid #374151",borderRadius:"8px",padding:"16px"}},a.createElement("h3",{style:{color:"#3b82f6",marginBottom:"12px",fontSize:"16px"}},"🎛️ Response Curves"),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"12px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#22c55e",fontSize:"12px",width:"60px"}},"Attack:"),a.createElement("select",{value:A,onChange:function(e){return t(u,"attack_curve",e.target.value)},style:{flex:1,padding:"4px 8px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"12px"}},a.createElement("option",{value:"linear"},"Linear"),a.createElement("option",{value:"exp"},"Exponential"),a.createElement("option",{value:"log"},"Logarithmic"),a.createElement("option",{value:"sine"},"Sine"),a.createElement("option",{value:"quad"},"Quadratic"))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#f59e0b",fontSize:"12px",width:"60px"}},"Decay:"),a.createElement("select",{value:T,onChange:function(e){return t(u,"decay_curve",e.target.value)},style:{flex:1,padding:"4px 8px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"12px"}},a.createElement("option",{value:"linear"},"Linear"),a.createElement("option",{value:"exp"},"Exponential"),a.createElement("option",{value:"log"},"Logarithmic"),a.createElement("option",{value:"sine"},"Sine"),a.createElement("option",{value:"quad"},"Quadratic"))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#ef4444",fontSize:"12px",width:"60px"}},"Release:"),a.createElement("select",{value:O,onChange:function(e){return t(u,"release_curve",e.target.value)},style:{flex:1,padding:"4px 8px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"12px"}},a.createElement("option",{value:"linear"},"Linear"),a.createElement("option",{value:"exp"},"Exponential"),a.createElement("option",{value:"log"},"Logarithmic"),a.createElement("option",{value:"sine"},"Sine"),a.createElement("option",{value:"quad"},"Quadratic"))))),"ADSR"===k&&a.createElement("div",{style:{backgroundColor:"#111827",border:"1px solid #374151",borderRadius:"8px",overflow:"hidden"}},a.createElement("button",{onClick:function(){return w(!E)},style:{width:"100%",padding:"12px 16px",background:"#1e293b",border:"none",color:"#94a3b8",fontSize:"14px",fontWeight:"600",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"space-between"}},a.createElement("span",{style:{color:"#a78bfa"}},"🌊 Sustain Modulation"),a.createElement("span",{style:{transform:E?"rotate(180deg)":"rotate(0deg)",transition:"transform 0.2s"}},"▼")),E&&a.createElement("div",{style:{padding:"16px"}},a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px",marginBottom:"12px"}},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"8px",cursor:"pointer"}},a.createElement("input",{type:"checkbox",checked:B,onChange:function(e){return t(u,"sustain_mod_enabled",e.target.checked)},style:{width:"16px",height:"16px"}}),a.createElement("span",{style:{color:"#cbd5e1",fontSize:"12px"}},"Enable Modulation")),a.createElement("select",{value:G,onChange:function(e){return t(u,"sustain_mod_source",e.target.value)},disabled:!B,style:{marginLeft:"auto",padding:"4px 8px",background:B?"#0f172a":"#1e293b",border:"1px solid #374151",borderRadius:"4px",color:B?"#cbd5e1":"#64748b",fontSize:"12px"}},a.createElement("option",{value:"internal"},"Internal LFO"),a.createElement("option",{value:"external"},"External CV")))),"internal"===G&&B&&a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"12px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#a78bfa",fontSize:"12px",width:"60px"}},"Wave:"),a.createElement("select",{value:N,onChange:function(e){return t(u,"sustain_lfo_wave",e.target.value)},style:{flex:1,padding:"4px 8px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"12px"}},a.createElement("option",{value:"sine"},"∿ Sine"),a.createElement("option",{value:"triangle"},"⏶ Triangle"),a.createElement("option",{value:"square"},"⊓ Square"),a.createElement("option",{value:"saw"},"⧸ Sawtooth"),a.createElement("option",{value:"random"},"? Random"))),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#a78bfa",fontSize:"12px",width:"60px"}},"Rate:"),a.createElement("input",{type:"range",min:"0.1",max:"20",step:"0.1",value:z,onChange:function(e){return t(u,"sustain_lfo_rate",parseFloat(e.target.value))},style:{flex:1,height:"6px",background:"#374151",outline:"none",borderRadius:"3px"}}),a.createElement("span",{style:{color:"#cbd5e1",fontSize:"11px",width:"50px",textAlign:"right"}},z.toFixed(1)," Hz")),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("label",{style:{color:"#a78bfa",fontSize:"12px",width:"60px"}},"Depth:"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:F,onChange:function(e){return t(u,"sustain_lfo_depth",parseFloat(e.target.value))},style:{flex:1,height:"6px",background:"#374151",outline:"none",borderRadius:"3px"}}),a.createElement("span",{style:{color:"#cbd5e1",fontSize:"11px",width:"50px",textAlign:"right"}},Math.round(100*F),"%"))),"external"===G&&B&&a.createElement("div",{style:{padding:"12px",background:"#0f172a",borderRadius:"6px",fontSize:"12px",color:"#94a3b8"}},"Connect a control signal to the Sustain CV input to modulate the sustain level. The incoming CV (0-1) will be multiplied by the sustain level."))),a.createElement("div",{style:{backgroundColor:"#111827",border:"1px solid #374151",borderRadius:"8px",padding:"16px"}},a.createElement("h3",{style:{color:"#f59e0b",marginBottom:"12px",fontSize:"16px"}},"📊 Current Values"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"8px",fontSize:"12px"}},a.createElement("div",null,a.createElement("span",{style:{color:"#22c55e"}},"Attack:")," ",Q(P*M)),a.createElement("div",null,a.createElement("span",{style:{color:"#f59e0b"}},"Decay:")," ",Q(C*M)),a.createElement("div",null,a.createElement("span",{style:{color:"#3b82f6"}},"Sustain:")," ",Math.round(100*R),"%"),a.createElement("div",null,a.createElement("span",{style:{color:"#ef4444"}},"Release:")," ",Q(L*M))))))))):v?a.createElement("div",{style:{marginBottom:"16px"}},a.createElement("div",{style:{border:"1px solid #334155",borderRadius:"8px",background:"#111827",padding:"12px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between",marginBottom:"12px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("div",{style:{color:"#22c55e",fontWeight:"bold",fontSize:"14px"}},"Envelope Generator"),a.createElement("div",{style:{display:"flex",border:"1px solid #374151",borderRadius:"4px",overflow:"hidden"}},a.createElement("button",{onClick:function(){return S("ADSR")},style:{padding:"4px 8px",background:"ADSR"===k?"#22c55e":"#374151",color:"ADSR"===k?"#000":"#cbd5e1",border:"none",fontSize:"10px",fontWeight:"600",cursor:"pointer"}},"ADSR"),a.createElement("button",{onClick:function(){return S("Freeform")},style:{padding:"4px 8px",background:"Freeform"===k?"#22c55e":"#374151",color:"Freeform"===k?"#000":"#cbd5e1",border:"none",fontSize:"10px",fontWeight:"600",cursor:"pointer"}},"FREE"))),a.createElement("button",{onClick:function(){return b(!1)},style:{background:"none",border:"none",color:"#94a3b8",cursor:"pointer",fontSize:"16px"}},"×")),a.createElement("div",{style:{display:"flex",gap:"12px",marginBottom:"12px",fontSize:"11px",flexWrap:"wrap"}},a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"4px"}},a.createElement("label",{style:{color:"#cbd5e1",fontWeight:"600"}},"Loop Mode"),a.createElement("select",{value:I,onChange:function(e){return t(u,"loop_mode",e.target.value)},style:{padding:"4px 6px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"10px"}},a.createElement("option",{value:"oneshot"},"One-Shot"),a.createElement("option",{value:"loop"},"Loop"),a.createElement("option",{value:"pingpong"},"Ping-Pong"))),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"4px"}},a.createElement("label",{style:{color:"#cbd5e1",fontWeight:"600"}},"Trigger"),a.createElement("select",{value:D,onChange:function(e){return t(u,"trigger_mode",e.target.value)},style:{padding:"4px 6px",background:"#0f172a",border:"1px solid #374151",borderRadius:"4px",color:"#cbd5e1",fontSize:"10px"}},a.createElement("option",{value:"gate"},"Gate"),a.createElement("option",{value:"trigger"},"Trigger"),a.createElement("option",{value:"lfo"},"LFO"))),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"4px",flex:"1",minWidth:"120px"}},a.createElement("label",{style:{color:"#cbd5e1",fontWeight:"600"}},"Timescale: ",M<.01?"".concat((1e3*M).toFixed(1),"µs"):M<1?"".concat((1e3*M).toFixed(0),"ms"):M<60?"".concat(M.toFixed(1),"s"):"".concat((M/60).toFixed(1),"m")),a.createElement("input",{type:"range",min:"-3",max:"2",step:"0.1",value:Math.log10(M),onChange:function(e){return t(u,"timescale",Math.pow(10,parseFloat(e.target.value)))},style:{width:"100%",height:"4px",background:"#374151",outline:"none",borderRadius:"2px"}}),a.createElement("div",{style:{display:"flex",justifyContent:"space-between",fontSize:"9px",color:"#6b7280"}},a.createElement("span",null,"1ms"),a.createElement("span",null,"1s"),a.createElement("span",null,"100s")))),a.createElement("div",{style:{border:"1px solid #374151",borderRadius:"6px",overflow:"hidden",marginBottom:"8px"}},a.createElement("canvas",{ref:p,width:U,height:W,onMouseDown:ee,style:{display:"block",cursor:null!==f?"grabbing":"crosshair"}})),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",textAlign:"center"}},"ADSR"===k?"Drag control points • Sustain: ↕️ level, ↔️ release time • Switch to FREE mode for custom breakpoints":"Drag breakpoints to shape envelope • Double-click to add points • Right-click to delete"),"ADSR"===k&&a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",width:"280px",marginTop:"8px",padding:"8px 20px",backgroundColor:"#0f172a",border:"1px solid #334155",borderRadius:"4px",boxSizing:"border-box"}},a.createElement("div",{style:{transform:"scale(0.8)"}}," ",a.createElement(bn,{label:"Attack",value:P,min:1,max:2e3,step:1,onChange:function(e){return t(u,"attack_ms",e)},color:"#22c55e",unit:"ms"})),a.createElement("div",{style:{transform:"scale(0.8)"}},a.createElement(bn,{label:"Decay",value:C,min:1,max:2e3,step:1,onChange:function(e){return t(u,"decay_ms",e)},color:"#f59e0b",unit:"ms"})),a.createElement("div",{style:{transform:"scale(0.8)"}},a.createElement(bn,{label:"Sustain",value:Math.round(100*R),min:0,max:100,step:1,onChange:function(e){return t(u,"sustain",e/100)},color:"#3b82f6",unit:"%"})),a.createElement("div",{style:{transform:"scale(0.8)"}},a.createElement(bn,{label:"Release",value:L,min:10,max:3e3,step:1,onChange:function(e){return t(u,"release_ms",e)},color:"#ef4444",unit:"ms"}))))):a.createElement("div",{style:{marginBottom:"16px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px",cursor:"pointer",padding:"8px",borderRadius:"8px",border:"1px solid #334155",background:"#111827"},onClick:function(){return b(!0)}},a.createElement("div",{style:{color:"#22c55e",fontWeight:"bold"}},"ADSR"===k?"ADSR":"ENV","oneshot"!==I&&a.createElement("span",{style:{color:"#f59e0b"}}," ⟳")),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8"}},"ADSR"===k?"A:".concat(Q(P*M)," D:").concat(Q(C*M)," S:").concat(Math.round(100*R),"% R:").concat(Q(L*M)):"".concat(q.length," points, ").concat(Q(1e3*M)," scale")),a.createElement("div",{style:{marginLeft:"auto",color:"#94a3b8"}},"▶")))};function kn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}const Sn=function(e){var n,t,o,r,i,c=e.module,l=e.onUpdateParam,s=e.onClose,u=e.fullscreen,p=void 0!==u&&u,d=(r=(0,a.useState)(1),i=2,function(e){if(Array.isArray(e))return e}(r)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(r,i)||function(e,n){if(e){if("string"==typeof e)return kn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?kn(e,n):void 0}}(r,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),f=d[0],m=d[1],_=(null==c?void 0:c.params)||{},g=function(e){return{1:1,2:2,3:4,4:8,5:2,6:3,7:4,8:8}[e]||e},h=function(e){return _["div".concat(e)]||g(e)},v=function(e){return _["steps".concat(e)]||function(e){return g(e)}(e)},b=function(e){return _["gate_mode".concat(e)]||!1},y=function(e,n){l&&l(c.id,e,n)},k=function(e){var n=h(e),t=v(e),o=b(e),r=f===e;return a.createElement("div",{key:e,style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"8px"}},a.createElement("div",{onClick:function(){return m(e)},style:{width:"80px",height:"80px",borderRadius:"50%",border:"3px solid ".concat(r?"#22c55e":"#374151"),background:r?"#064e3b":"#111827",display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",cursor:"pointer",position:"relative",transition:"all 0.2s ease"}},a.createElement("div",{style:{color:"#22c55e",fontSize:"24px",fontWeight:"bold",lineHeight:"1"}},n),t!==n&&a.createElement("div",{style:{color:"#fbbf24",fontSize:"12px",fontWeight:"600",lineHeight:"1"}},t,"s"),a.createElement("div",{style:{position:"absolute",top:"4px",right:"4px",width:"12px",height:"12px",borderRadius:"50%",backgroundColor:o?"#ef4444":"#3b82f6",fontSize:"8px",color:"white",display:"flex",alignItems:"center",justifyContent:"center",fontWeight:"bold"}},o?"G":"C")),a.createElement("div",{style:{color:"#94a3b8",fontSize:"12px",fontWeight:"600"}},"OUT",e))};return a.createElement("div",{style:{position:p?"fixed":"absolute",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.9)",zIndex:1e3,display:"flex",alignItems:"flex-start",justifyContent:"center",padding:"20px",overflow:"auto"}},a.createElement("div",{style:{width:"100%",maxWidth:"800px",maxHeight:"calc(100vh - 40px)",backgroundColor:"#1f2937",borderRadius:"12px",padding:"24px",border:"1px solid #374151",overflow:"auto"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"24px"}},a.createElement("h2",{style:{color:"#8b5cf6",margin:0,fontSize:"24px",fontWeight:"bold"}},"Clock Sequencer"),a.createElement("button",{onClick:s,style:{background:"none",border:"none",color:"#94a3b8",fontSize:"24px",cursor:"pointer",padding:"4px",borderRadius:"4px"}},"X")),a.createElement("div",{style:{marginBottom:"20px",padding:"16px",backgroundColor:"#0f172a",borderRadius:"8px",border:"1px solid #374151"}},a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr 1fr",gap:"16px",alignItems:"center"}},a.createElement("div",null,a.createElement("label",{style:{display:"block",color:"#e2e8f0",fontSize:"14px",fontWeight:"600",marginBottom:"8px"}},"BPM: ",_.bpm||120),a.createElement("input",{type:"range",min:"30",max:"300",value:_.bpm||120,onChange:function(e){return y("bpm",parseInt(e.target.value))},style:{width:"100%",accentColor:"#8b5cf6"}})),a.createElement("div",null,a.createElement("label",{style:{display:"block",color:"#e2e8f0",fontSize:"14px",fontWeight:"600",marginBottom:"8px"}},"Swing: ",(100*(_.swing||0)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"0.3",step:"0.01",value:_.swing||0,onChange:function(e){return y("swing",parseFloat(e.target.value))},style:{width:"100%",accentColor:"#f59e0b"}})),a.createElement("div",null,a.createElement("button",{onClick:function(){return y("running",!(!1!==_.running))},style:{width:"100%",padding:"12px",borderRadius:"6px",border:"none",backgroundColor:!1!==_.running?"#22c55e":"#ef4444",color:"white",fontSize:"14px",fontWeight:"600",cursor:"pointer"}},!1!==_.running?"RUNNING":"STOPPED")))),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(4, 1fr)",gap:"20px",justifyItems:"center",marginBottom:"20px",padding:"20px",backgroundColor:"#0f172a",borderRadius:"8px",border:"1px solid #374151"}},[1,2,3,4].map(k),[5,6,7,8].map(k)),(n=h(f),t=v(f),o=b(f),a.createElement("div",{style:{marginTop:"20px",padding:"16px",backgroundColor:"#0f172a",borderRadius:"8px",border:"1px solid #374151"}},a.createElement("h3",{style:{color:"#22c55e",margin:"0 0 16px 0",fontSize:"16px",fontWeight:"bold"}},"Output ",f," Controls"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"16px",alignItems:"center"}},a.createElement("div",null,a.createElement("label",{style:{display:"block",color:"#e2e8f0",fontSize:"14px",fontWeight:"600",marginBottom:"8px"}},"Division: ",n),a.createElement("input",{type:"range",min:"1",max:"16",value:n,onChange:function(e){return y("div".concat(f),parseInt(e.target.value))},style:{width:"100%",accentColor:"#22c55e"}}),a.createElement("div",{style:{color:"#94a3b8",fontSize:"12px",marginTop:"4px"}},"Every ",n," master beat",n>1?"s":"")),a.createElement("div",null,a.createElement("label",{style:{display:"block",color:"#e2e8f0",fontSize:"14px",fontWeight:"600",marginBottom:"8px"}},"Steps: ",t," / ",n),a.createElement("input",{type:"range",min:"1",max:Math.max(16,n),value:t,onChange:function(e){return y("steps".concat(f),parseInt(e.target.value))},style:{width:"100%",accentColor:"#fbbf24"}}),a.createElement("div",{style:{color:"#94a3b8",fontSize:"12px",marginTop:"4px"}},"Euclidean: ",t," hits in ",n," steps")),a.createElement("div",{style:{gridColumn:"1 / -1",marginTop:"8px"}},a.createElement("button",{onClick:function(){return y("gate_mode".concat(f),!o)},style:{width:"100%",padding:"12px",borderRadius:"6px",border:"none",backgroundColor:o?"#ef4444":"#3b82f6",color:"white",fontSize:"14px",fontWeight:"600",cursor:"pointer",transition:"all 0.2s ease"}},o?"GATE Mode":"CLOCK Mode"),a.createElement("div",{style:{color:"#94a3b8",fontSize:"12px",textAlign:"center",marginTop:"4px"}},o?"Outputs gate pulses":"Outputs clock/toggle signals"))))),a.createElement("div",{style:{marginTop:"20px",padding:"16px",backgroundColor:"#0f172a",borderRadius:"8px",border:"1px solid #374151",color:"#94a3b8",fontSize:"12px"}},a.createElement("strong",{style:{color:"#22c55e"}},"Instructions:")," Click circles to select outputs. Division = how often it triggers. Steps = Euclidean rhythm hits. Gate mode outputs pulses, Clock mode outputs toggles.")))};function xn(e){return function(e){if(Array.isArray(e))return Pn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||wn(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function En(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||wn(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wn(e,n){if(e){if("string"==typeof e)return Pn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Pn(e,n):void 0}}function Pn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}var Cn=function(e){var n=e.module,t=e.onUpdateParam,o=e.onClose,r=(0,a.useRef)(null),i=En((0,a.useState)(0),2),c=i[0],l=i[1],s=En((0,a.useState)("custom"),2),u=s[0],p=s[1],d=En((0,a.useState)(!1),2),f=d[0],m=d[1],_=En((0,a.useState)(!1),2),g=_[0],h=_[1],v=En((0,a.useState)(256),1)[0],b=En((0,a.useState)(function(){var e=n.params.wavetables||[];if(0===e.length){for(var t=[],a=0;a<4;a++){var o=new Float32Array(v);if(0===a)for(var r=0;r<v;r++)o[r]=Math.sin(r/v*2*Math.PI);t.push(o)}return t}return e.map(function(e){return e instanceof Float32Array?e:new Float32Array(e)})}),2),y=b[0],k=b[1],S=(0,a.useCallback)(function(e){for(var n=new Float32Array(v),t=0;t<v;t++){var a=t/v*2*Math.PI;switch(e){case"sine":n[t]=Math.sin(a);break;case"saw":n[t]=t/v*2-1;break;case"square":n[t]=t<v/2?1:-1;break;case"triangle":n[t]=t<v/4?t/v*4:t<3*v/4?2-t/v*4:t/v*4-4;break;case"noise":n[t]=2*Math.random()-1;break;case"pulse25":n[t]=t<v/4?1:-1;break;case"pulse12":n[t]=t<v/8?1:-1;break;default:n[t]=0}}return n},[v]),x=(0,a.useCallback)(function(){var e=r.current;if(e){var n=e.getContext("2d"),t=e.width,a=e.height;n.fillStyle="#1e293b",n.fillRect(0,0,t,a),n.strokeStyle="#334155",n.lineWidth=1,n.beginPath(),n.moveTo(0,a/2),n.lineTo(t,a/2),n.stroke();for(var o=0;o<=8;o++)n.beginPath(),n.moveTo(t/8*o,0),n.lineTo(t/8*o,a),n.stroke();var i=y[c];if(i&&0!==i.length){n.strokeStyle="#22c55e",n.lineWidth=2,n.beginPath();for(var l=0;l<v;l++){var s=l/v*t,u=a/2-i[l]*a*.4;0===l?n.moveTo(s,u):n.lineTo(s,u)}if(n.stroke(),g)for(var p=0;p<y.length;p++)if(p!==c){var d=y[p];if(d&&0!==d.length){n.strokeStyle="rgba(148, 163, 184, 0.3)",n.lineWidth=1,n.beginPath();for(var f=0;f<v;f++){var m=f/v*t,_=a/2-d[f]*a*.4;0===f?n.moveTo(m,_):n.lineTo(m,_)}n.stroke()}}for(var h=0;h<4;h++)n.fillStyle=h===c?"#22c55e":"#475569",n.fillRect(10+25*h,10,20,20),n.fillStyle="#fff",n.font="12px monospace",n.textAlign="center",n.fillText((h+1).toString(),20+25*h,24)}}},[y,c,v,g]),E=(0,a.useCallback)(function(e){if("custom"===u){m(!0);var n=r.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=n.height/t.height,i=(e.clientX-t.left)*a,l=(e.clientY-t.top)*o,s=Math.floor(i/n.width*v),p=1-l/n.height*2;if(s>=0&&s<v){var d=xn(y),f=new Float32Array(d[c]);f[s]=Math.max(-1,Math.min(1,p)),d[c]=f,k(d),x()}}},[u,v,y,c,x]),w=(0,a.useCallback)(function(e){if(f&&"custom"===u){var n=r.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=n.height/t.height,i=(e.clientX-t.left)*a,l=(e.clientY-t.top)*o,s=Math.floor(i/n.width*v),p=1-l/n.height*2;if(s>=0&&s<v){var d=xn(y),m=new Float32Array(d[c]);m[s]=Math.max(-1,Math.min(1,p)),s>0&&(m[s-1]=(m[s-1]+p)/2),s<v-1&&(m[s+1]=(m[s+1]+p)/2),d[c]=m,k(d),x()}}},[f,u,v,y,c,x]),P=(0,a.useCallback)(function(){f&&(m(!1),t(n.id,"wavetables",y))},[f,y,n.id,t]),C=(0,a.useCallback)(function(e){var a=S(e),o=xn(y);o[c]=a,k(o),t(n.id,"wavetables",o),x()},[c,y,S,x,n.id,t]),R=(0,a.useCallback)(function(){for(var e=xn(y),a=e[c],o=0,r=0;r<v;r++)o=Math.max(o,Math.abs(a[r]));if(o>0){for(var i=new Float32Array(v),l=0;l<v;l++)i[l]=a[l]/o;e[c]=i}k(e),t(n.id,"wavetables",e),x()},[c,y,v,x,n.id,t]),L=(0,a.useCallback)(function(){for(var e=xn(y),a=e[c],o=new Float32Array(v),r=0;r<v;r++){var i=a[(r-1+v)%v],l=a[r],s=a[(r+1)%v];o[r]=(i+2*l+s)/4}e[c]=o,k(e),t(n.id,"wavetables",e),x()},[c,y,v,x,n.id,t]),I=(0,a.useCallback)(function(){var e=y[c];localStorage.setItem("wavetable_clipboard",JSON.stringify(Array.from(e)))},[c,y]),M=(0,a.useCallback)(function(){var e=localStorage.getItem("wavetable_clipboard");if(e)try{var a=JSON.parse(e),o=xn(y);o[c]=new Float32Array(a),k(o),t(n.id,"wavetables",o),x()}catch(e){console.error("Failed to paste wavetable:",e)}},[c,y,x,n.id,t]);return(0,a.useEffect)(function(){x()},[x,y,c]),(0,a.useEffect)(function(){var e=function(){return x()};return window.addEventListener("resize",e),function(){return window.removeEventListener("resize",e)}},[x]),(0,a.useEffect)(function(){y&&y.length>0&&t(n.id,"wavetables",y)},[y,n.id,t]),(0,a.useEffect)(function(){var e=function(e){"Escape"===e.key&&o()};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[o]),a.createElement("div",{className:"modal-overlay",onClick:o},a.createElement("div",{className:"modal-content wavetable-editor",onClick:function(e){return e.stopPropagation()}},a.createElement("div",{className:"modal-header",style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"12px",paddingBottom:"12px",borderBottom:"1px solid #334155"}},a.createElement("h2",{style:{margin:0,color:"#22c55e",fontSize:"18px"}},"🌊 Wavetable Editor - ",n.id),a.createElement("button",{onClick:o,style:{width:"32px",height:"32px",borderRadius:"4px",border:"none",background:"#dc2626",color:"#fff",fontSize:"18px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.3)"},title:"Close Editor (ESC)"},"✕")),a.createElement("div",{className:"wavetable-canvas-container"},a.createElement("canvas",{ref:r,width:800,height:300,onMouseDown:E,onMouseMove:w,onMouseUp:P,onMouseLeave:P,style:{cursor:"custom"===u?"crosshair":"default",width:"100%",height:"300px"}})),a.createElement("div",{className:"wavetable-controls"},a.createElement("div",{className:"control-section"},a.createElement("label",null,"Table Slot:"),a.createElement("div",{className:"table-selector"},[0,1,2,3].map(function(e){return a.createElement("button",{key:e,className:"table-btn ".concat(c===e?"active":""),onClick:function(){return l(e)}},e+1)}))),a.createElement("div",{className:"control-section"},a.createElement("label",null,"Presets:"),a.createElement("div",{className:"preset-buttons"},a.createElement("button",{onClick:function(){return C("sine")}},"Sine"),a.createElement("button",{onClick:function(){return C("saw")}},"Saw"),a.createElement("button",{onClick:function(){return C("square")}},"Square"),a.createElement("button",{onClick:function(){return C("triangle")}},"Triangle"),a.createElement("button",{onClick:function(){return C("pulse25")}},"Pulse 25%"),a.createElement("button",{onClick:function(){return C("pulse12")}},"Pulse 12%"),a.createElement("button",{onClick:function(){return C("noise")}},"Noise"))),a.createElement("div",{className:"control-section"},a.createElement("label",null,"Tools:"),a.createElement("div",{className:"tool-buttons"},a.createElement("button",{className:"custom"===u?"active":"",onClick:function(){return p("custom")}},"Draw"),a.createElement("button",{onClick:R},"Normalize"),a.createElement("button",{onClick:L},"Smooth"),a.createElement("button",{onClick:I},"Copy"),a.createElement("button",{onClick:M},"Paste")))),a.createElement("div",{className:"morphing-section"},a.createElement("h3",null,"ADSR Morphing"),a.createElement("div",{className:"morphing-controls"},a.createElement("label",null,a.createElement("input",{type:"checkbox",checked:n.params.adsr_morph||!1,onChange:function(e){return t(n.id,"adsr_morph",e.target.checked)}}),"Enable ADSR Morphing"),n.params.adsr_morph&&a.createElement(a.Fragment,null,a.createElement("div",{className:"morph-mapping"},a.createElement("div",{className:"morph-row"},a.createElement("label",null,"Attack Table:"),a.createElement("select",{value:n.params.attack_table||0,onChange:function(e){return t(n.id,"attack_table",parseInt(e.target.value))}},[0,1,2,3].map(function(e){return a.createElement("option",{key:e,value:e},"Table ",e+1)}))),a.createElement("div",{className:"morph-row"},a.createElement("label",null,"Decay Table:"),a.createElement("select",{value:n.params.decay_table||1,onChange:function(e){return t(n.id,"decay_table",parseInt(e.target.value))}},[0,1,2,3].map(function(e){return a.createElement("option",{key:e,value:e},"Table ",e+1)}))),a.createElement("div",{className:"morph-row"},a.createElement("label",null,"Sustain Table:"),a.createElement("select",{value:n.params.sustain_table||2,onChange:function(e){return t(n.id,"sustain_table",parseInt(e.target.value))}},[0,1,2,3].map(function(e){return a.createElement("option",{key:e,value:e},"Table ",e+1)}))),a.createElement("div",{className:"morph-row"},a.createElement("label",null,"Release Table:"),a.createElement("select",{value:n.params.release_table||3,onChange:function(e){return t(n.id,"release_table",parseInt(e.target.value))}},[0,1,2,3].map(function(e){return a.createElement("option",{key:e,value:e},"Table ",e+1)})))),a.createElement("label",{style:{marginTop:"10px"}},a.createElement("input",{type:"checkbox",checked:g,onChange:function(e){return h(e.target.checked)}}),"Show All Tables (Preview Morphing)")))),a.createElement("div",{className:"wavetable-info"},a.createElement("p",null,"Table Size: ",v," samples"),a.createElement("p",null,"Click and drag to draw custom waveforms when Draw mode is active"))),a.createElement("style",{jsx:!0},"\n                .wavetable-editor {\n                    width: 900px;\n                    max-width: 90vw;\n                    max-height: 90vh;\n                    overflow-y: auto;\n                }\n                \n                .wavetable-controls {\n                    padding: 20px;\n                    background: #0f172a;\n                    border-radius: 8px;\n                    margin-bottom: 20px;\n                }\n                \n                .control-section {\n                    margin-bottom: 15px;\n                }\n                \n                .control-section label {\n                    display: block;\n                    margin-bottom: 8px;\n                    color: #94a3b8;\n                    font-size: 12px;\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                }\n                \n                .table-selector {\n                    display: flex;\n                    gap: 10px;\n                }\n                \n                .table-btn {\n                    padding: 8px 16px;\n                    background: #1e293b;\n                    border: 1px solid #334155;\n                    border-radius: 4px;\n                    color: #94a3b8;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n                \n                .table-btn.active {\n                    background: #22c55e;\n                    color: white;\n                    border-color: #22c55e;\n                }\n                \n                .preset-buttons, .tool-buttons {\n                    display: flex;\n                    gap: 8px;\n                    flex-wrap: wrap;\n                }\n                \n                .preset-buttons button, .tool-buttons button {\n                    padding: 6px 12px;\n                    background: #1e293b;\n                    border: 1px solid #334155;\n                    border-radius: 4px;\n                    color: #94a3b8;\n                    cursor: pointer;\n                    font-size: 12px;\n                    transition: all 0.2s;\n                }\n                \n                .preset-buttons button:hover, .tool-buttons button:hover {\n                    background: #334155;\n                    color: white;\n                }\n                \n                .tool-buttons button.active {\n                    background: #3b82f6;\n                    color: white;\n                    border-color: #3b82f6;\n                }\n                \n                .wavetable-canvas-container {\n                    background: #0f172a;\n                    border-radius: 8px;\n                    padding: 20px;\n                    margin-bottom: 20px;\n                }\n                \n                .morphing-section {\n                    background: #0f172a;\n                    border-radius: 8px;\n                    padding: 20px;\n                    margin-bottom: 20px;\n                }\n                \n                .morphing-section h3 {\n                    color: #22c55e;\n                    margin-bottom: 15px;\n                }\n                \n                .morphing-controls label {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                    color: #94a3b8;\n                    margin-bottom: 10px;\n                }\n                \n                .morph-mapping {\n                    margin-top: 15px;\n                    padding: 15px;\n                    background: #1e293b;\n                    border-radius: 6px;\n                }\n                \n                .morph-row {\n                    display: flex;\n                    align-items: center;\n                    gap: 10px;\n                    margin-bottom: 10px;\n                }\n                \n                .morph-row label {\n                    flex: 0 0 120px;\n                    margin-bottom: 0;\n                }\n                \n                .morph-row select {\n                    flex: 1;\n                    padding: 4px 8px;\n                    background: #0f172a;\n                    border: 1px solid #334155;\n                    border-radius: 4px;\n                    color: white;\n                }\n                \n                .wavetable-info {\n                    padding: 15px;\n                    background: #0f172a;\n                    border-radius: 8px;\n                    color: #64748b;\n                    font-size: 12px;\n                }\n                \n                .wavetable-info p {\n                    margin: 5px 0;\n                }\n            "))};function Rn(e){return Rn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rn(e)}function Ln(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function In(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Ln(Object(t),!0).forEach(function(n){Mn(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Ln(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Mn(e,n,t){return(n=function(e){var n=function(e){if("object"!=Rn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Rn(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Rn(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Dn(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||An(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function An(e,n){if(e){if("string"==typeof e)return Tn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Tn(e,n):void 0}}function Tn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}const On=function(e){var n,t,o,r,i=e.module,c=e.onUpdateParam,l=e.onClose,s=e.fullscreen,u=void 0!==s&&s,p=(0,a.useRef)(null),d=Dn((0,a.useState)((null==i||null===(n=i.params)||void 0===n?void 0:n.tuning)||"12-TET"),2),f=d[0],m=d[1],_=Dn((0,a.useState)((null==i||null===(t=i.params)||void 0===t?void 0:t.scale)||"major"),2),g=_[0],h=_[1],v=Dn((0,a.useState)((null==i||null===(o=i.params)||void 0===o?void 0:o.root_note)||"C"),2),b=v[0],y=v[1],k=Dn((0,a.useState)((null==i||null===(r=i.params)||void 0===r?void 0:r.base_octave)||4),2),S=k[0],x=k[1],E=Dn((0,a.useState)(!1),2),w=E[0],P=E[1],C=Dn((0,a.useState)([]),2),R=C[0],L=C[1],I=Dn((0,a.useState)({}),2),M=(I[0],I[1]),D=Dn((0,a.useState)(!1),2),A=D[0],T=D[1],O=Dn((0,a.useState)(""),2),B=O[0],z=O[1],F=Dn((0,a.useState)(null),2),N=F[0],G=F[1],q=Dn((0,a.useState)(.5),2),U=q[0],W=q[1],V={"12-TET":{name:"12-Tone Equal Temperament",intervals:[0,100,200,300,400,500,600,700,800,900,1e3,1100],noteNames:["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]},"19-TET":{name:"19-Tone Equal Temperament",intervals:Array.from({length:19},function(e,n){return 1200*n/19}),noteNames:["C","C+","C#","Db-","D","D+","D#","Eb-","E","E+","F","F+","F#","Gb-","G","G+","G#","Ab-","A"]},"24-TET":{name:"24-Tone Equal Temperament (Quarter-tone)",intervals:Array.from({length:24},function(e,n){return 1200*n/24}),noteNames:["C","C↑","C#","C#↑","D","D↑","D#","D#↑","E","E↑","F","F↑","F#","F#↑","G","G↑","G#","G#↑","A","A↑","A#","A#↑","B","B↑"]},"31-TET":{name:"31-Tone Equal Temperament",intervals:Array.from({length:31},function(e,n){return 1200*n/31}),noteNames:Array.from({length:31},function(e,n){return"".concat(n)})},Just:{name:"Just Intonation (5-limit)",intervals:[0,111.73,203.91,315.64,386.31,498.04,590.22,701.96,813.69,884.36,1017.6,1088.27],noteNames:["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]},Pythagorean:{name:"Pythagorean Tuning",intervals:[0,113.69,203.91,294.13,407.82,498.04,611.73,701.96,792.18,905.87,996.09,1109.78],noteNames:["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}},j={chromatic:{name:"Chromatic (All Notes)",pattern:[0,1,2,3,4,5,6,7,8,9,10,11]},major:{name:"Major (Ionian)",pattern:[0,2,4,5,7,9,11]},minor:{name:"Natural Minor (Aeolian)",pattern:[0,2,3,5,7,8,10]},dorian:{name:"Dorian",pattern:[0,2,3,5,7,9,10]},phrygian:{name:"Phrygian",pattern:[0,1,3,5,7,8,10]},lydian:{name:"Lydian",pattern:[0,2,4,6,7,9,11]},mixolydian:{name:"Mixolydian",pattern:[0,2,4,5,7,9,10]},locrian:{name:"Locrian",pattern:[0,1,3,5,6,8,10]},pentatonic:{name:"Pentatonic Major",pattern:[0,2,4,7,9]},blues:{name:"Blues",pattern:[0,3,5,6,7,10]},harmonic_minor:{name:"Harmonic Minor",pattern:[0,2,3,5,7,8,11]},whole_tone:{name:"Whole Tone",pattern:[0,2,4,6,8,10]}},H=function(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:440)*Math.pow(2,e/1200)},$=function(e,n){var t=n-80,a=440*Math.pow(2,S-4)*Math.pow(2,-.75),o=a,r=2*a,i=Math.log10(o),c=Math.log10(r);return n-40-(Math.log10(e)-i)/(c-i)*t},K=function(){for(var e=V[f],n=w?{pattern:R}:j[g],t=440*Math.pow(2,S-4),a=[],o=0;o<e.intervals.length;o++){var r=e.intervals[o]-900,i=H(r,t);a.push({freq:i,cents:r,noteIndex:o,octave:S,noteName:e.noteNames[o],inScale:n.pattern.includes(o),isCustom:w})}return a},Y=function(){if(0!==R.length)if(B.trim()){var e={name:B.trim(),pattern:R,tuningSystem:f,created:(new Date).toISOString()};M(function(n){return In(In({},n),{},Mn({},B.trim(),e))}),j[B.trim()]={name:B.trim()+" (Custom)",pattern:R},h(B.trim()),P(!1),T(!1),z(""),L([]),alert('Scale "'.concat(B.trim(),'" saved successfully!'))}else alert("Please enter a name for your scale!");else alert("Please select some notes first!")},X=function(e,n){c&&i&&c(i.id,e,n)};(0,a.useEffect)(function(){var e=function(e){"Escape"===e.key&&(A?(T(!1),z("")):l())};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[l,A]),(0,a.useEffect)(function(){!function(){var e=p.current;if(e){var n=e.getContext("2d"),t=e.width,a=e.height;n.fillStyle="#0c1428",n.fillRect(0,0,t,a);var o=40,r=t-80;n.strokeStyle="#334155",n.fillStyle="#94a3b8",n.font="10px monospace";var i=440*Math.pow(2,S-4)*Math.pow(2,-.75);[Math.round(10*i)/10,Math.round(1.25992*i*10)/10,Math.round(1.49831*i*10)/10,Math.round(2*i*10)/10].forEach(function(e){var r=$(e,a);r>=o&&r<=a-o&&(n.beginPath(),n.moveTo(o,r),n.lineTo(t-o,r),n.stroke(),n.fillText("".concat(e,"Hz"),5,r+3))});var c=o+U*r;n.strokeStyle="#22c55e",n.lineWidth=2,n.beginPath(),n.moveTo(c,o),n.lineTo(c,a-o),n.stroke();var l=K();l.forEach(function(e,t){var i=o+t/(l.length-1)*r,c=$(e.freq,a);n.strokeStyle="#10b981",n.lineWidth=1,n.beginPath(),n.moveTo(i,o),n.lineTo(i,a-o),n.stroke(),e.inScale?(n.fillStyle="#eab308",n.strokeStyle="#fbbf24"):(n.fillStyle="#10b981",n.strokeStyle="#34d399"),n.lineWidth=2,n.beginPath(),n.arc(i,c,9,0,2*Math.PI),n.fill(),n.stroke(),n.fillStyle=e.inScale?"#eab308":"#10b981",n.font="12px monospace";var s=n.measureText(e.noteName+e.octave).width;n.fillText(e.noteName+e.octave,i-s/2,c-15)}),n.strokeStyle="#22c55e",n.lineWidth=3,n.beginPath();var s=l.filter(function(e){return e.inScale});s.forEach(function(e,t){var i=o+s.indexOf(e)/(s.length-1)*r,c=$(e.freq,a);0===t?n.moveTo(i,c):n.lineTo(i,c)}),n.stroke();var u=Math.floor(U*(s.length-1)),d=s[u];if(d){var f=o+U*r,m=$(d.freq,a);n.fillStyle="#f59e0b",n.beginPath(),n.arc(f,m,6,0,2*Math.PI),n.fill(),n.fillStyle="#f59e0b",n.font="12px monospace",n.fillText("".concat(d.noteName).concat(d.octave,": ").concat(d.freq.toFixed(1),"Hz"),f+10,m-10)}N&&(n.fillStyle="#ffffff",n.font="11px monospace",n.fillText("".concat(N.noteName).concat(N.octave,": ").concat(N.freq.toFixed(1),"Hz (").concat(N.cents.toFixed(1)," cents)"),10,a-10))}}()},[f,g,S,w,R,U,N]),(0,a.useEffect)(function(){X("tuning",f)},[f]),(0,a.useEffect)(function(){X("scale",g)},[g]),(0,a.useEffect)(function(){X("base_octave",S)},[S]),(0,a.useEffect)(function(){X("root_note",b)},[b]);var Z=a.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",gap:"12px"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",paddingBottom:"12px",borderBottom:"1px solid #334155"}},a.createElement("h3",{style:{color:"#22c55e",margin:0,fontSize:"18px"}},"📊 Scale & Tuning Visualizer"),a.createElement("button",{onClick:l,style:{width:"32px",height:"32px",borderRadius:"4px",border:"none",background:"#dc2626",color:"#fff",fontSize:"18px",fontWeight:"bold",cursor:"pointer",display:"flex",alignItems:"center",justifyContent:"center",boxShadow:"0 2px 4px rgba(0, 0, 0, 0.3)"},title:"Close Editor (ESC)"},"✕")),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"16px",marginBottom:"12px"}},a.createElement("div",null,a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Tuning System"),a.createElement("select",{value:f,onChange:function(e){return m(e.target.value)},style:{width:"100%",padding:"6px",borderRadius:"4px",border:"1px solid #334155",background:"#0f172a",color:"#e2e8f0",fontSize:"12px"}},Object.entries(V).map(function(e){var n=Dn(e,2),t=n[0],o=n[1];return a.createElement("option",{key:t,value:t},o.name)}))),a.createElement("div",null,w?a.createElement("div",{style:{display:"flex",gap:"4px",marginBottom:"8px"}},a.createElement("button",{onClick:function(){R.length>0?T(!0):alert("Please select some notes first!")},style:{flex:1,padding:"8px",borderRadius:"4px",border:"1px solid #334155",background:R.length>0?"#eab308":"#374151",color:R.length>0?"#0f172a":"#9ca3af",fontSize:"12px",cursor:R.length>0?"pointer":"not-allowed",fontWeight:"bold"},disabled:0===R.length},"💾 Save Scale (",R.length,")"),a.createElement("button",{onClick:function(){P(!1),L([])},style:{padding:"8px 12px",borderRadius:"4px",border:"1px solid #334155",background:"#dc2626",color:"#fff",fontSize:"12px",cursor:"pointer",fontWeight:"bold"}},"✕")):a.createElement("button",{onClick:function(){P(!0),L([])},style:{width:"100%",padding:"8px",borderRadius:"4px",border:"1px solid #334155",background:"#0f172a",color:"#e2e8f0",fontSize:"12px",cursor:"pointer",fontWeight:"bold",marginBottom:"8px"}},"📝 Create Custom Scale")),!w&&a.createElement("div",null,a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Scale Pattern"),a.createElement("select",{value:g,onChange:function(e){return h(e.target.value)},style:{width:"100%",padding:"6px",borderRadius:"4px",border:"1px solid #334155",background:"#0f172a",color:"#e2e8f0",fontSize:"12px"}},Object.entries(j).map(function(e){var n=Dn(e,2),t=n[0],o=n[1];return a.createElement("option",{key:t,value:t},o.name)}))),w&&a.createElement("div",null,a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Custom Scale: ",R.length," notes selected"),a.createElement("div",{style:{padding:"8px",background:"#0f172a",border:"1px solid #334155",borderRadius:"4px",fontSize:"11px",color:"#94a3b8",fontStyle:"italic"}},"Click on green tuning intervals below to build your custom scale. Selected notes will turn yellow."),R.length>0&&a.createElement("div",{style:{marginTop:"4px",fontSize:"11px",color:"#22c55e"}},"Selected intervals: ",R.join(", "))),a.createElement("div",null,a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Root Note"),a.createElement("select",{value:b,onChange:function(e){return y(e.target.value)},style:{width:"100%",padding:"6px",borderRadius:"4px",border:"1px solid #334155",background:"#0f172a",color:"#e2e8f0",fontSize:"12px"}},["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"].map(function(e){return a.createElement("option",{key:e,value:e},e)}))),a.createElement("div",null,a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Base Octave: ",S),a.createElement("input",{type:"range",min:"0",max:"8",value:S,onChange:function(e){return x(parseInt(e.target.value))},style:{width:"100%"}}))),A&&a.createElement("div",{style:{position:"absolute",top:0,left:0,right:0,bottom:0,background:"rgba(0, 0, 0, 0.8)",display:"flex",alignItems:"center",justifyContent:"center",zIndex:1e3}},a.createElement("div",{style:{background:"#1e293b",border:"1px solid #334155",borderRadius:"8px",padding:"20px",minWidth:"300px",maxWidth:"400px"}},a.createElement("h3",{style:{color:"#e2e8f0",marginTop:0,marginBottom:"16px"}},"Save Custom Scale"),a.createElement("div",{style:{marginBottom:"16px"}},a.createElement("label",{style:{color:"#cbd5e1",fontSize:"12px",display:"block",marginBottom:"4px"}},"Scale Name:"),a.createElement("input",{type:"text",value:B,onChange:function(e){return z(e.target.value)},placeholder:"Enter scale name...",style:{width:"100%",padding:"8px",borderRadius:"4px",border:"1px solid #334155",background:"#0f172a",color:"#e2e8f0",fontSize:"14px"},onKeyDown:function(e){"Enter"===e.key?Y():"Escape"===e.key&&(T(!1),z(""))},autoFocus:!0})),a.createElement("div",{style:{marginBottom:"16px",fontSize:"12px",color:"#94a3b8"}},a.createElement("div",null,"Tuning System: ",a.createElement("span",{style:{color:"#22c55e"}},V[f].name)),a.createElement("div",null,"Selected Notes: ",a.createElement("span",{style:{color:"#eab308"}},R.join(", ")))),a.createElement("div",{style:{display:"flex",gap:"8px"}},a.createElement("button",{onClick:Y,style:{flex:1,padding:"8px 16px",borderRadius:"4px",border:"1px solid #334155",background:"#22c55e",color:"#0f172a",fontSize:"12px",cursor:"pointer",fontWeight:"bold"}},"💾 Save Scale"),a.createElement("button",{onClick:function(){T(!1),z("")},style:{padding:"8px 16px",borderRadius:"4px",border:"1px solid #334155",background:"#374151",color:"#e2e8f0",fontSize:"12px",cursor:"pointer"}},"Cancel")))),a.createElement("div",{style:{flex:1,border:"1px solid #334155",borderRadius:"8px",overflow:"hidden",minHeight:"400px"}},a.createElement("canvas",{ref:p,width:800,height:400,onMouseMove:function(e){var n=p.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=n.height/t.height,r=(e.clientX-t.left)*a,i=(e.clientY-t.top)*o,c=n.width-80;if(r>=40&&r<=n.width-40){var l=(r-40)/c;W(Math.max(0,Math.min(1,l)))}var s=K(),u=null,d=1/0;s.forEach(function(e,t){var a=40+t/(s.length-1)*c,o=$(e.freq,n.height),l=Math.sqrt(Math.pow(r-a,2)+Math.pow(i-o,2));l<15&&l<d&&(d=l,u=e)}),G(u)},onClick:function(e){if(w){var n=p.current,t=n.getBoundingClientRect(),a=n.width/t.width,o=n.height/t.height,r=(e.clientX-t.left)*a,i=(e.clientY-t.top)*o,c=n.width-80,l=K(),s=null,u=1/0;if(l.forEach(function(e,t){var a=40+t/(l.length-1)*c,o=$(e.freq,n.height),p=Math.sqrt(Math.pow(r-a,2)+Math.pow(i-o,2));p<20&&p<u&&(u=p,s=e)}),s){var d=s.noteIndex;R.includes(d)?L(function(e){return e.filter(function(e){return e!==d})}):L(function(e){return[].concat((n=e,function(e){if(Array.isArray(e))return Tn(e)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||An(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),[d]).sort(function(e,n){return e-n});var n})}}},style:{width:"100%",height:"100%",display:"block",cursor:w?"pointer":"crosshair"}})),a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8",display:"flex",gap:"16px",flexWrap:"wrap"}},a.createElement("span",null,"🟩 ",a.createElement("span",{style:{color:"#10b981"}},"Tuning System Intervals")),a.createElement("span",null,"🟡 ",a.createElement("span",{style:{color:"#eab308"}},"Scale Notes")),a.createElement("span",null,"🟢 ",a.createElement("span",{style:{color:"#22c55e"}},"S&H Input Position")),N&&a.createElement("span",null,"🎵 ",a.createElement("span",{style:{color:"#22c55e"}},N.noteName,N.octave,": ",Math.round(10*N.freq)/10,"Hz"))));return u?a.createElement("div",{className:"modal-overlay"},a.createElement("div",{className:"modal-content",style:{maxWidth:"95vw",maxHeight:"90vh"}},Z)):Z},Bn=function(e){var n=e.module,t=e.modules,o=e.onUpdateParam,r=e.onClose,i=e.fullscreen;return a.createElement(Je,{module:n,modules:t,onUpdateParam:o,onClose:r,fullscreen:i})};function zn(e){return zn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zn(e)}function Fn(e){return function(e){if(Array.isArray(e))return Vn(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Wn(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nn(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function Gn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Nn(Object(t),!0).forEach(function(n){qn(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Nn(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function qn(e,n,t){return(n=function(e){var n=function(e){if("object"!=zn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=zn(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zn(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Un(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||Wn(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wn(e,n){if(e){if("string"==typeof e)return Vn(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Vn(e,n):void 0}}function Vn(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}const jn=function(e){var n=e.module,t=(e.modules,e.onUpdateParam),o=e.onClose,r=e.fullscreen,i=Un((0,a.useState)(void 0!==n.params.harmonic_linking&&n.params.harmonic_linking),2),c=i[0],l=i[1],s=Un((0,a.useState)(n.params.harmonic_follow_steps||[-1,-1,-1,-1]),2),u=s[0],p=s[1],d=Un((0,a.useState)(n.params.harmonic_intervals||[7,7,7,7]),2),f=d[0],m=d[1];(0,a.useEffect)(function(){console.log("HarmonicSequencer module.params changed:",n.params);var e,t=n.params.bank0_steps;t&&console.log("bank0_steps step 0 pitchRandomness:",null===(e=t[0])||void 0===e?void 0:e.pitchRandomness)},[n.params]);var _,g,h,v,b,y,k,S=Un((0,a.useState)(n.params.show_individual_outputs||!1),2),x=S[0],E=S[1],w=function(){return(n.params.steps||[{pitch:0,duration:1,muted:!1,active:!0,pattern:"static",interval:2,probability:.5},{pitch:.25,duration:1,muted:!1,active:!0,pattern:"up_down",interval:3,probability:.7},{pitch:.5,duration:1,muted:!1,active:!0,pattern:"chord",interval:4,probability:.8},{pitch:.75,duration:1,muted:!1,active:!0,pattern:"static",interval:1,probability:.3}]).map(function(e){return Gn(Gn({},e),{},{pitchRandomness:void 0!==e.pitchRandomness?e.pitchRandomness:0,probability:void 0!==e.probability?e.probability:1,patternProbability:void 0!==e.patternProbability?e.patternProbability:1,pattern:e.pattern||"static",interval:void 0!==e.interval?e.interval:2,glissando_time:void 0!==e.glissando_time?e.glissando_time:0,glissando_probability:void 0!==e.glissando_probability?e.glissando_probability:0,glissando_curve:void 0!==e.glissando_curve?e.glissando_curve:"linear"})})},P=function(e,a){var o=Fn(w());o[e]=Gn(Gn({},o[e]),a),console.log("updateStep: step ".concat(e,", updates:"),a),console.log("newSteps[stepIndex]:",o[e]),t(n.id,"steps",o)},C=function(e,n){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];console.log("updateStepPitch: step=".concat(e,", pitch=").concat(n));var a=Math.max(0,Math.min(1,n));if(P(e,{pitch:a}),t&&c&&e===harmonicMasterStep){var o=Math.round(12*a);harmonicSlaveSteps.forEach(function(e,n){if(e&&n!==harmonicMasterStep){var t=(o+harmonicInterval)%12/12;P(n,{pitch:Math.max(0,Math.min(1,t))}),console.log("Harmonic link: Step ".concat(harmonicMasterStep+1,"→").concat(n+1,", interval=").concat(harmonicInterval," semitones, slavePitch=").concat(t.toFixed(3)))}})}};return a.createElement("div",{style:{position:r?"fixed":"absolute",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.9)",zIndex:1e3,display:"flex",alignItems:"flex-start",justifyContent:"center",padding:"40px 20px 20px 20px",overflow:"auto"}},a.createElement("div",{style:{width:"100%",maxWidth:"800px",maxHeight:"calc(100vh - 40px)",backgroundColor:"#0f172a",border:"1px solid #3b82f6",borderRadius:"8px",color:"#e2e8f0",padding:"20px",overflow:"auto"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"20px"}},a.createElement("h3",{style:{margin:0,color:"#3b82f6"}},"Harmonic Sequencer"),a.createElement("div",{style:{display:"flex",gap:"8px"}},o&&a.createElement("button",{onClick:o,style:{padding:"4px 8px",backgroundColor:"#6b7280",color:"white",border:"none",borderRadius:"4px",cursor:"pointer",fontSize:"12px"}},"×"))),(h=w(),a.createElement("div",{style:{marginBottom:"20px"}},a.createElement("div",{style:{marginBottom:"20px"}},a.createElement("div",{style:{padding:"16px",backgroundColor:"#1e293b",border:"2px solid #3b82f6",borderRadius:"8px"}},a.createElement("div",{style:{marginBottom:"12px",fontSize:"16px",fontWeight:"bold",color:"#3b82f6"}},"Sequencer Controls"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(4, 1fr)",gap:"12px"}},a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"Clock Div: 1/",n.params.clock_div||4),a.createElement("input",{type:"range",min:"1",max:"16",value:n.params.clock_div||4,onChange:function(e){return t(n.id,"clock_div",parseInt(e.target.value))},style:{width:"100%"}})),a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"Gate: ",(100*(n.params.gate_length||.7)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0.1",max:"0.9",step:"0.05",value:n.params.gate_length||.7,onChange:function(e){return t(n.id,"gate_length",parseFloat(e.target.value))},style:{width:"100%"}})),a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"Mode: ",n.params.playback_mode||"iteration"),a.createElement("select",{value:n.params.playback_mode||"iteration",onChange:function(e){return t(n.id,"playback_mode",e.target.value)},style:{width:"100%",padding:"4px",backgroundColor:"#374151",color:"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"12px"}},a.createElement("option",{value:"iteration"},"Iteration (active steps only)"),a.createElement("option",{value:"rest"},"Rest (linear 4 steps)"),a.createElement("option",{value:"reverse"},"Reverse (active steps reversed)"))),a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"BPM: ",n.params.bpm||120),a.createElement("input",{type:"range",min:"60",max:"200",value:n.params.bpm||120,onChange:function(e){return t(n.id,"bpm",parseInt(e.target.value))},style:{width:"100%",accentColor:"#8b5cf6"}}),a.createElement("div",{style:{color:"#6b7280",fontSize:"10px",marginTop:"2px",textAlign:"center"}},"Auto: Internal when no clock input")),a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"flex",alignItems:"center",gap:"8px",cursor:"pointer",padding:"4px 0"}},a.createElement("input",{type:"checkbox",checked:c,onChange:function(e){var a=e.target.checked;l(a),t(n.id,"harmonic_linking",a)},style:{accentColor:"#8b5cf6"}}),a.createElement("span",null,"Harmonic Linking")),a.createElement("div",{style:{color:"#6b7280",fontSize:"10px",marginTop:"2px"}},"Master step controls slave steps")),a.createElement("div",null,a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"flex",alignItems:"center",gap:"8px",cursor:"pointer",padding:"4px 0"}},a.createElement("input",{type:"checkbox",checked:n.params.pattern_enabled||!1,onChange:function(e){t(n.id,"pattern_enabled",e.target.checked)},style:{accentColor:"#f59e0b"}}),a.createElement("span",null,"Melodic Patterns")),a.createElement("div",{style:{color:"#6b7280",fontSize:"10px",marginTop:"2px"}},"Patterns around pot position with intervals"))))),a.createElement("div",{style:{marginBottom:"12px",fontSize:"14px",fontWeight:"bold",color:"#e2e8f0"}},"4 Steps"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(4, 1fr)",gap:"12px"}},h.map(function(e,o){return a.createElement("div",{key:o,style:{padding:"12px",backgroundColor:e.active?"#1e293b":"#111827",border:"2px solid",borderColor:e.active?"#3b82f6":"#374151",borderRadius:"8px",position:"relative",opacity:e.muted?.5:1}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"8px"}},a.createElement("div",{style:{fontSize:"12px",fontWeight:"bold",color:"#e2e8f0"}},"Step ",o+1),a.createElement("div",{style:{display:"flex",gap:"4px"}},a.createElement("button",{onClick:function(){return function(e){var a=w(),o=!a[e].active;P(e,{active:o});var r=a.filter(function(e){return e.active}).length;t(n.id,"sequence_length",Math.max(1,r))}(o)},style:{width:"16px",height:"16px",backgroundColor:e.active?"#10b981":"#6b7280",border:"none",borderRadius:"2px",cursor:"pointer"},title:e.active?"Step active":"Step inactive"}),a.createElement("button",{onClick:function(){return function(e){var n=!w()[e].muted;P(e,{muted:n})}(o)},style:{width:"16px",height:"16px",backgroundColor:e.muted?"#ef4444":"#6b7280",border:"none",borderRadius:"2px",cursor:"pointer"},title:e.muted?"Step muted":"Step unmuted"}))),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Pitch: ",(100*e.pitch).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:e.pitch,onChange:function(n){console.log("Pitch slider onChange: ".concat(n.target.value,", current step.pitch: ").concat(e.pitch)),C(o,parseFloat(n.target.value))},onInput:function(n){console.log("Pitch slider onInput: ".concat(n.target.value,", current step.pitch: ").concat(e.pitch)),C(o,parseFloat(n.target.value))},style:{width:"100%",height:"4px",backgroundColor:"#374151",borderRadius:"2px",outline:"none"}})),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Duration: ",e.duration.toFixed(2),"×"),a.createElement("input",{type:"range",min:"0.25",max:"4",step:"0.25",value:e.duration,onChange:function(e){return function(e,n){console.log("updateStepDuration: step=".concat(e,", duration=").concat(n)),P(e,{duration:Math.max(.25,Math.min(4,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"4px",backgroundColor:"#374151",borderRadius:"2px",outline:"none"}})),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Pitch Random: ",(100*(e.pitchRandomness||0)).toFixed(0),"% (val: ",e.pitchRandomness,")"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:e.pitchRandomness||0,onChange:function(e){console.log("Pitch randomness slider onChange: ".concat(e.target.value)),function(e,n){console.log("updateStepPitchRandomness: step=".concat(e,", randomness=").concat(n)),P(e,{pitchRandomness:Math.max(0,Math.min(1,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"20px",backgroundColor:"#374151",borderRadius:"2px",outline:"none",cursor:"pointer",appearance:"auto"}})),n.params.pattern_enabled&&a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Pattern: ",e.pattern||"static"),a.createElement("select",{value:e.pattern||"static",onChange:function(e){var n=e.target.value;P(o,{pattern:n})},style:{width:"100%",padding:"2px 4px",backgroundColor:"#374151",color:"#d1d5db",border:"1px solid #4b5563",borderRadius:"4px",fontSize:"10px"}},a.createElement("option",{value:"static"},"Static"),a.createElement("option",{value:"up_down"},"Up/Down Alt"),a.createElement("option",{value:"chord"},"Chord Arpegg"),a.createElement("option",{value:"random"},"Random Jump"),a.createElement("option",{value:"octave"},"Octave Jump"),a.createElement("option",{value:"fifth"},"Fifth Jump")),e.pattern&&"static"!==e.pattern&&"chord"!==e.pattern&&a.createElement(a.Fragment,null,a.createElement("div",{style:{marginTop:"4px"}},a.createElement("label",{style:{fontSize:"9px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Interval: ±",e.interval||2," semitones"),a.createElement("input",{type:"range",min:"1",max:"12",step:"1",value:e.interval||2,onChange:function(e){P(o,{interval:parseInt(e.target.value)})},style:{width:"100%",height:"3px",backgroundColor:"#374151",borderRadius:"2px",outline:"none"}})),a.createElement("div",{style:{marginTop:"4px"}},a.createElement("label",{style:{fontSize:"9px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Pattern Prob: ",(100*(e.patternProbability||1)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.05",value:e.patternProbability||1,onChange:function(e){!function(e,n){console.log("updateStepPatternProbability: step=".concat(e,", patternProbability=").concat(n)),P(e,{patternProbability:Math.max(0,Math.min(1,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"3px",backgroundColor:"#374151",borderRadius:"2px",outline:"none"}}))),"chord"===e.pattern&&a.createElement("div",{style:{marginTop:"8px",padding:"8px",backgroundColor:"#1f2937",borderRadius:"4px",border:"1px solid #374151"}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"4px",fontWeight:"bold"}},"Chord Intervals (semitones from root)"),a.createElement("div",{style:{marginBottom:"6px"}},a.createElement("label",{style:{fontSize:"9px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Presets:"),a.createElement("div",{style:{display:"flex",gap:"4px",flexWrap:"wrap"}},[{name:"Maj",intervals:[0,4,7]},{name:"Min",intervals:[0,3,7]},{name:"Dim",intervals:[0,3,6]},{name:"Aug",intervals:[0,4,8]},{name:"Maj7",intervals:[0,4,7,11]},{name:"Min7",intervals:[0,3,7,10]},{name:"Dom7",intervals:[0,4,7,10]},{name:"Maj9",intervals:[0,4,7,11,14]},{name:"Min9",intervals:[0,3,7,10,14]}].map(function(e){return a.createElement("button",{key:e.name,onClick:function(){P(o,{chordIntervals:e.intervals})},style:{padding:"2px 6px",backgroundColor:"#374151",color:"#d1d5db",border:"1px solid #4b5563",borderRadius:"3px",fontSize:"9px",cursor:"pointer"},onMouseEnter:function(e){return e.target.style.backgroundColor="#4b5563"},onMouseLeave:function(e){return e.target.style.backgroundColor="#374151"}},e.name)}))),a.createElement("div",{style:{marginBottom:"6px"}},a.createElement("label",{style:{fontSize:"9px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Custom: [",(e.chordIntervals||[0,4,7]).join(", "),"]"),a.createElement("input",{type:"text",value:(e.chordIntervals||[0,4,7]).join(", "),onChange:function(e){var n=e.target.value.split(",").map(function(e){var n=parseInt(e.trim());return isNaN(n)?0:Math.max(-12,Math.min(24,n))}).filter(function(e){return!isNaN(e)});n.length>0&&P(o,{chordIntervals:n})},placeholder:"0, 4, 7",style:{width:"100%",padding:"2px 4px",backgroundColor:"#111827",color:"#d1d5db",border:"1px solid #374151",borderRadius:"3px",fontSize:"9px",fontFamily:"monospace"}})),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"6px"}},a.createElement("input",{type:"checkbox",id:"diatonic-".concat(o),checked:!1!==e.chordDiatonic,onChange:function(e){P(o,{chordDiatonic:e.target.checked})},style:{cursor:"pointer"}}),a.createElement("label",{htmlFor:"diatonic-".concat(o),style:{fontSize:"9px",color:"#9ca3af",cursor:"pointer"}},"Diatonic (scale-aware)")))),a.createElement("div",null,a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Step Prob: ",(100*(e.probability||1)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:e.probability||1,onChange:function(e){console.log("Probability slider onChange: ".concat(e.target.value)),function(e,n){console.log("updateStepProbability: step=".concat(e,", probability=").concat(n)),P(e,{probability:Math.max(0,Math.min(1,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"20px",backgroundColor:"#374151",borderRadius:"2px",outline:"none",cursor:"pointer",appearance:"auto"}})),c&&a.createElement("div",{style:{marginTop:"8px"}},a.createElement("div",{style:{display:"flex",gap:"8px"}},a.createElement("div",{style:{flex:1}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Follows: ",-1===u[o]?"None":"Step ".concat(u[o]+1)),a.createElement("select",{value:u[o],onChange:function(e){var a=Fn(u);a[o]=parseInt(e.target.value),p(a),t(n.id,"harmonic_follow_steps",a)},style:{width:"100%",padding:"2px 4px",backgroundColor:"#374151",color:"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"10px"}},a.createElement("option",{value:-1},"None"),function(e){return[0,1,2,3].filter(function(n){return n!==e&&!function(e,n){if(-1===n)return!1;if(n===e)return!0;for(var t=new Set,a=n;-1!==a&&!t.has(a);){if(t.add(a),a===e)return!0;a=u[a]}return!1}(e,n)})}(o).map(function(e){return a.createElement("option",{key:e,value:e},"Step ",e+1)}))),a.createElement("div",{style:{flex:1}},a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Interval: ",7===f[o]?"+5th":5===f[o]?"+4th":12===f[o]?"+Oct":-7===f[o]?"-5th":"".concat(f[o]>0?"+":"").concat(f[o])),a.createElement("select",{value:f[o],onChange:function(e){var a=Fn(f);a[o]=parseInt(e.target.value),m(a),t(n.id,"harmonic_intervals",a)},disabled:-1===u[o],style:{width:"100%",padding:"2px 4px",backgroundColor:-1===u[o]?"#4b5563":"#374151",color:-1===u[o]?"#9ca3af":"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"10px"}},a.createElement("option",{value:-12},"-Octave"),a.createElement("option",{value:-7},"-5th"),a.createElement("option",{value:-5},"-4th"),a.createElement("option",{value:-4},"-M3rd"),a.createElement("option",{value:-3},"-m3rd"),a.createElement("option",{value:0},"Unison"),a.createElement("option",{value:3},"+m3rd"),a.createElement("option",{value:4},"+M3rd"),a.createElement("option",{value:5},"+4th"),a.createElement("option",{value:7},"+5th"),a.createElement("option",{value:12},"+Octave"))))),a.createElement("div",null,a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Gliss Time: ",(100*(e.glissando_time||0)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:e.glissando_time||0,onChange:function(e){console.log("Glissando time slider onChange: ".concat(e.target.value)),function(e,n){console.log("updateStepGlissandoTime: step=".concat(e,", time=").concat(n)),P(e,{glissando_time:Math.max(0,Math.min(1,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"20px",backgroundColor:"#374151",borderRadius:"2px",outline:"none",cursor:"pointer",appearance:"auto"}})),a.createElement("div",null,a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Gliss Prob: ",(100*(e.glissando_probability||0)).toFixed(0),"%"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:e.glissando_probability||0,onChange:function(e){console.log("Glissando probability slider onChange: ".concat(e.target.value)),function(e,n){console.log("updateStepGlissandoProbability: step=".concat(e,", probability=").concat(n)),P(e,{glissando_probability:Math.max(0,Math.min(1,n))})}(o,parseFloat(e.target.value))},style:{width:"100%",height:"20px",backgroundColor:"#374151",borderRadius:"2px",outline:"none",cursor:"pointer",appearance:"auto"}})),a.createElement("div",null,a.createElement("label",{style:{fontSize:"10px",color:"#9ca3af",display:"block",marginBottom:"2px"}},"Gliss Curve: ",e.glissando_curve||"linear"),a.createElement("select",{value:e.glissando_curve||"linear",onChange:function(e){console.log("Glissando curve select onChange: ".concat(e.target.value)),function(e,n){console.log("updateStepGlissandoCurve: step=".concat(e,", curve=").concat(n)),P(e,{glissando_curve:n})}(o,e.target.value)},style:{width:"100%",padding:"4px 8px",backgroundColor:"#374151",color:"#e2e8f0",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"11px"}},a.createElement("option",{value:"linear"},"Linear"),a.createElement("option",{value:"exponential"},"Exponential"),a.createElement("option",{value:"logarithmic"},"Logarithmic"))))})))),(_={chromatic:{name:"Chromatic (12 notes)",intervals:[0,1,2,3,4,5,6,7,8,9,10,11]},major:{name:"Major",intervals:[0,2,4,5,7,9,11]},minor:{name:"Natural Minor",intervals:[0,2,3,5,7,8,10]},dorian:{name:"Dorian",intervals:[0,2,3,5,7,9,10]},phrygian:{name:"Phrygian",intervals:[0,1,3,5,7,8,10]},lydian:{name:"Lydian",intervals:[0,2,4,6,7,9,11]},mixolydian:{name:"Mixolydian",intervals:[0,2,4,5,7,9,10]},pentatonic_major:{name:"Pentatonic Major",intervals:[0,2,4,7,9]},pentatonic_minor:{name:"Pentatonic Minor",intervals:[0,3,5,7,10]},blues:{name:"Blues Scale",intervals:[0,3,5,6,7,10]},wholetone:{name:"Whole Tone",intervals:[0,2,4,6,8,10]},diminished:{name:"Diminished",intervals:[0,2,3,5,6,8,9,11]}},g=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],a.createElement("div",{style:{marginBottom:"20px"}},a.createElement("div",{style:{padding:"16px",backgroundColor:"#1e293b",border:"2px solid #8b5cf6",borderRadius:"8px"}},a.createElement("div",{style:{marginBottom:"12px",fontSize:"16px",fontWeight:"bold",color:"#8b5cf6"}},"Musical Scale System"),a.createElement("div",{style:{marginBottom:"16px",fontSize:"12px",color:"#94a3b8",fontStyle:"italic"}},"Step pitches are automatically quantized to musical intervals"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr 1fr",gap:"16px"}},a.createElement("div",null,a.createElement("label",{style:{fontSize:"14px",color:"#e2e8f0",display:"block",marginBottom:"8px",fontWeight:"bold"}},"Scale"),a.createElement("select",{value:n.params.quantization_scale||"major",onChange:function(e){return t(n.id,"quantization_scale",e.target.value)},style:{width:"100%",padding:"8px 12px",backgroundColor:"#374151",color:"#e2e8f0",border:"2px solid #6b7280",borderRadius:"6px",fontSize:"13px"}},Object.entries(_).map(function(e){var n=Un(e,2),t=n[0],o=n[1];return a.createElement("option",{key:t,value:t},o.name)}))),a.createElement("div",null,a.createElement("label",{style:{fontSize:"14px",color:"#e2e8f0",display:"block",marginBottom:"8px",fontWeight:"bold"}},"Root Note"),a.createElement("select",{value:n.params.quantization_root||"C",onChange:function(e){return t(n.id,"quantization_root",e.target.value)},style:{width:"100%",padding:"8px 12px",backgroundColor:"#374151",color:"#e2e8f0",border:"2px solid #6b7280",borderRadius:"6px",fontSize:"13px"}},g.map(function(e){return a.createElement("option",{key:e,value:e},e)}))),a.createElement("div",null,a.createElement("label",{style:{fontSize:"14px",color:"#e2e8f0",display:"block",marginBottom:"8px",fontWeight:"bold"}},"Tuning System"),a.createElement("select",{value:n.params.quantization_tuning||"12tet",onChange:function(e){return t(n.id,"quantization_tuning",e.target.value)},style:{width:"100%",padding:"8px 12px",backgroundColor:"#374151",color:"#e2e8f0",border:"2px solid #6b7280",borderRadius:"6px",fontSize:"13px"}},Object.entries({"12tet":{name:"12TET (Equal Temperament)",cents:100},just:{name:"Just Intonation",cents:null},pythagorean:{name:"Pythagorean",cents:null},quarter_tone:{name:"Quarter Tone (24TET)",cents:50},gamelan5:{name:"Gamelan Slendro (5-tone)",cents:240},gamelan7:{name:"Gamelan Pelog (7-tone)",cents:null}}).map(function(e){var n=Un(e,2),t=n[0],o=n[1];return a.createElement("option",{key:t,value:t},o.name)}))),a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"4px",flex:"1"}},a.createElement("label",{style:{fontSize:"11px",fontWeight:"600",color:"#9ca3af",textTransform:"uppercase",letterSpacing:"0.5px"}},"Center Octave"),a.createElement("select",{value:n.params.octave_center||4,onChange:function(e){return t(n.id,"octave_center",parseInt(e.target.value))},style:{width:"100%",padding:"8px 12px",backgroundColor:"#374151",color:"#e2e8f0",border:"2px solid #6b7280",borderRadius:"6px",fontSize:"13px"}},a.createElement("option",{value:2},"Octave 2 (C2-C3)"),a.createElement("option",{value:3},"Octave 3 (C3-C4)"),a.createElement("option",{value:4},"Octave 4 (C4-C5)"),a.createElement("option",{value:5},"Octave 5 (C5-C6)"),a.createElement("option",{value:6},"Octave 6 (C6-C7)")))),a.createElement("div",{style:{marginTop:"12px",padding:"12px",backgroundColor:"#0f172a",borderRadius:"6px"}},a.createElement("div",{style:{fontSize:"12px",fontWeight:"bold",color:"#8b5cf6",marginBottom:"8px"}},"Scale Preview:"),a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8"}},(v=_[n.params.quantization_scale||"major"],b=n.params.quantization_root||"C",y=g.indexOf(b),k=v.intervals.map(function(e){return g[(y+e)%12]}),"".concat(b," ").concat((n.params.quantization_scale||"major").replace("_"," "),": ").concat(k.join(" - ")))))))),a.createElement("div",{style:{marginBottom:"20px"}},a.createElement("div",{style:{marginBottom:"12px",fontSize:"14px",fontWeight:"bold",color:"#e2e8f0"}},"Output Configuration"),a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px",marginBottom:"8px"}},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"6px",fontSize:"12px",color:"#d1d5db"}},a.createElement("input",{type:"checkbox",checked:x,onChange:function(e){var a=e.target.checked;E(a),t(n.id,"show_individual_outputs",a),t(n.id,"individual_outputs_enabled",a)}}),"Show Individual Step Outputs")),x&&a.createElement("div",{style:{padding:"12px",backgroundColor:"#111827",borderRadius:"6px",fontSize:"11px",color:"#9ca3af"}},a.createElement("div",{style:{marginBottom:"8px",fontWeight:"bold",color:"#d1d5db"}},"Individual Step Outputs:"),a.createElement("div",{style:{display:"grid",gridTemplateColumns:"repeat(4, 1fr)",gap:"8px"}},Array.from({length:16},function(e,n){return a.createElement("div",{key:n,style:{textAlign:"center"}},a.createElement("div",null,"Step ",n+1),a.createElement("div",{style:{fontSize:"9px"}},"pitch_step",n+1),a.createElement("div",{style:{fontSize:"9px"}},"gate_step",n+1))})))),a.createElement("div",{style:{marginTop:"20px",padding:"12px",backgroundColor:"#1e293b",borderRadius:"6px",fontSize:"11px",color:"#94a3b8"}},a.createElement("div",{style:{fontWeight:"bold",marginBottom:"6px",color:"#e2e8f0"}},"Hardware Control:"),a.createElement("ul",{style:{margin:0,paddingLeft:"16px"}},a.createElement("li",null,"Knobs control pitch for each step in current bank"),a.createElement("li",null,"Buttons toggle step active/inactive (short press) or mute (long press)"),a.createElement("li",null,"Hold button + turn knob to adjust step duration"),a.createElement("li",null,"Encoder navigates banks, encoder button starts/stops"),a.createElement("li",null,"Hold multiple buttons for loop regions")))))};function Hn(e){return Hn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Hn(e)}function $n(){var e,n,t="function"==typeof Symbol?Symbol:{},a=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function r(t,a,o,r){var l=a&&a.prototype instanceof c?a:c,s=Object.create(l.prototype);return Kn(s,"_invoke",function(t,a,o){var r,c,l,s=0,u=o||[],p=!1,d={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return r=n,c=0,l=e,d.n=t,i}};function f(t,a){for(c=t,l=a,n=0;!p&&s&&!o&&n<u.length;n++){var o,r=u[n],f=d.p,m=r[2];t>3?(o=m===a)&&(l=r[(c=r[4])?5:(c=3,3)],r[4]=r[5]=e):r[0]<=f&&((o=t<2&&f<r[1])?(c=0,d.v=a,d.n=r[1]):f<m&&(o=t<3||r[0]>a||a>m)&&(r[4]=t,r[5]=a,d.n=m,c=0))}if(o||t>1)return i;throw p=!0,a}return function(o,u,m){if(s>1)throw TypeError("Generator is already running");for(p&&1===u&&f(u,m),c=u,l=m;(n=c<2?e:l)||!p;){r||(c?c<3?(c>1&&(d.n=-1),f(c,l)):d.n=l:d.v=l);try{if(s=2,r){if(c||(o="next"),n=r[o]){if(!(n=n.call(r,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,c<2&&(c=0)}else 1===c&&(n=r.return)&&n.call(r),c<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),c=1);r=e}else if((n=(p=d.n<0)?l:t.call(a,d))!==i)break}catch(n){r=e,c=1,l=n}finally{s=1}}return{value:n,done:p}}}(t,o,r),!0),s}var i={};function c(){}function l(){}function s(){}n=Object.getPrototypeOf;var u=[][a]?n(n([][a]())):(Kn(n={},a,function(){return this}),n),p=s.prototype=c.prototype=Object.create(u);function d(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,Kn(e,o,"GeneratorFunction")),e.prototype=Object.create(p),e}return l.prototype=s,Kn(p,"constructor",s),Kn(s,"constructor",l),l.displayName="GeneratorFunction",Kn(s,o,"GeneratorFunction"),Kn(p),Kn(p,o,"Generator"),Kn(p,a,function(){return this}),Kn(p,"toString",function(){return"[object Generator]"}),($n=function(){return{w:r,m:d}})()}function Kn(e,n,t,a){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Kn=function(e,n,t,a){function r(n,t){Kn(e,n,function(e){return this._invoke(n,t,e)})}n?o?o(e,n,{value:t,enumerable:!a,configurable:!a,writable:!a}):e[n]=t:(r("next",0),r("throw",1),r("return",2))},Kn(e,n,t,a)}function Yn(e,n,t,a,o,r,i){try{var c=e[r](i),l=c.value}catch(e){return void t(e)}c.done?n(l):Promise.resolve(l).then(a,o)}function Xn(e){return function(){var n=this,t=arguments;return new Promise(function(a,o){var r=e.apply(n,t);function i(e){Yn(r,a,o,i,c,"next",e)}function c(e){Yn(r,a,o,i,c,"throw",e)}i(void 0)})}}function Zn(e){return function(e){if(Array.isArray(e))return at(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||tt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Qn(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function Jn(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Qn(Object(t),!0).forEach(function(n){et(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Qn(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function et(e,n,t){return(n=function(e){var n=function(e){if("object"!=Hn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Hn(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Hn(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function nt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,i,c=[],l=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=r.call(t)).done)&&(c.push(a.value),c.length!==n);l=!0);}catch(e){s=!0,o=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw o}}return c}}(e,n)||tt(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function tt(e,n){if(e){if("string"==typeof e)return at(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?at(e,n):void 0}}function at(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}var ot=function(e){var n=e.onGenerateCode,t=e.onCodePreview,o=e.onLoadPatch,r=e.onSavePatch,i=e.onClearCanvas,c=e.onZoomToFit,l=e.copyButtonState,s=Be(),u=s.hasActiveTransfers,p=(0,s.getOverallProgress)(),d=u();return a.createElement("div",{className:"toolbar"},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"16px",flex:1}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px"}},a.createElement("div",{style:{fontSize:"20px",fontWeight:"bold",color:"#e5e7eb",fontFamily:"Arial, sans-serif"}},"Soniphorm"),a.createElement("h1",{style:{margin:0,fontSize:"24px",color:"#e5e7eb"}},"Gen Patcher")),d&&a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"12px",flex:1,maxWidth:"400px"}},a.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px",fontSize:"12px",color:"#fbbf24",fontWeight:"500"}},a.createElement("span",null,"📤"),a.createElement("span",null,"Transferring ",p.current,"/",p.total)),a.createElement("div",{style:{flex:1,height:"4px",backgroundColor:"#374151",borderRadius:"2px",overflow:"hidden",position:"relative"}},a.createElement("div",{style:{width:"".concat(p.percentage,"%"),height:"100%",backgroundColor:"#fbbf24",borderRadius:"2px",transition:"width 0.3s ease"}})),a.createElement("div",{style:{fontSize:"11px",color:"#cbd5e1",minWidth:"40px",textAlign:"right"}},p.percentage.toFixed(0),"%"),p.currentFile&&a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8",maxWidth:"100px",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}},p.currentFile))),a.createElement("div",{className:"toolbar-actions"},a.createElement("button",{className:"btn btn-ghost",onClick:c},"Zoom to Fit"),a.createElement("button",{className:"btn btn-red",onClick:i},"Clear Canvas"),a.createElement("button",{className:"btn btn-ghost",onClick:o},"Load Patch"),a.createElement("button",{className:"btn btn-ghost",onClick:r},"Save Patch"),a.createElement("button",{className:"btn btn-green",onClick:n},"copied"===l?"Code Copied!":"Generate Code"),a.createElement("button",{className:"btn btn-ghost",onClick:t},"Code Preview")))},rt=function(e){var n=e.onAddModule,t=function(e){try{n(e)}catch(e){alert(e.message)}};return a.createElement("div",{className:"module-palette"},a.createElement("h2",null,"Modules"),a.createElement("div",{className:"module-categories"},a.createElement("div",{className:"category"},a.createElement("h3",null,"Audio Sources"),a.createElement("div",{className:"module-list"},I.AUDIO_SOURCES.map(function(e){return a.createElement("div",{key:e,className:"module-item",onClick:function(){return t(e)}},L[e].label)}))),a.createElement("div",{className:"category"},a.createElement("h3",null,"Audio Effects"),a.createElement("div",{className:"module-list"},I.AUDIO_EFFECTS.map(function(e){return a.createElement("div",{key:e,className:"module-item",onClick:function(){return t(e)}},L[e].label)}))),a.createElement("div",{className:"category"},a.createElement("h3",null,"Audio IO"),a.createElement("div",{className:"module-list"},I.AUDIO_IO.map(function(e){return a.createElement("div",{key:e,className:"module-item",onClick:function(){return t(e)}},L[e].label)}))),a.createElement("div",{className:"category"},a.createElement("h3",null,"Control Modules"),a.createElement("div",{className:"module-list"},I.CTRL.map(function(e){return a.createElement("div",{key:e,className:"module-item",onClick:function(){return t(e)}},L[e].label)}))),a.createElement("div",{className:"category"},a.createElement("h3",null,"Hardware"),a.createElement("div",{className:"module-list"},I.HW.map(function(e){return a.createElement("div",{key:e,className:"module-item",onClick:function(){return t(e)}},L[e].label)})))))},it=["#dc2626","#16a34a","#2563eb","#ca8a04","#0891b2","#9333ea","#f8fafc","#ea580c"],ct=function(e){return"Pot"!==e.type&&"LEDButton"!==e.type||!e.params||"number"!=typeof e.params.bank?"#1e293b":it[e.params.bank-1]||"#1e293b"},lt=function(e,n,t){if(!n)return console.warn('Module type "'.concat(e.type,'" not found in CATALOG for module ').concat(e.id)),"".concat(e.type," (UNKNOWN)");var a=t.filter(function(n){return n.type===e.type}),o=a.length;if(("Pot"===e.type||"LEDButton"===e.type)&&e.params){var r=e.params.bank||1,i=e.params.index||1,c="Pot"===e.type?"Pot":"Button";return"".concat(c," ").concat(i," (Bank ").concat(r,")")}if("HarmonicSequencer"===e.type&&e.params){var l=e.params.start_bank||1;if(o>1){var s=a.sort(function(e,n){return parseInt(e.id.match(/\d+$/)[0])-parseInt(n.id.match(/\d+$/)[0])}).findIndex(function(n){return n.id===e.id})+1;return"".concat(n.label," ").concat(s," (B").concat(l,")")}return"".concat(n.label," (B").concat(l,")")}if(o>1){var u=a.sort(function(e,n){return parseInt(e.id.match(/\d+$/)[0])-parseInt(n.id.match(/\d+$/)[0])}).findIndex(function(n){return n.id===e.id})+1;return"".concat(n.label," ").concat(u)}return n.label},st=function(e){var n=e.module,t=e.isSelected,o=(e.isGroupSelected,e.onSelect),r=e.onMove,i=e.onPortClick,c=e.onPortRightClick,l=e.connectingFrom,s=e.allModules,u=e.onDelete,p=e.onUpdateParam,d=e.canvasRef,f=e.canvasTransform,m=e.onOpenClockSequencer,_=e.onOpenHarmonicSequencer,g=nt((0,a.useState)(!1),2),h=g[0],v=g[1],b=nt((0,a.useState)({x:0,y:0}),2),y=b[0],k=b[1],S=nt((0,a.useState)({x:0,y:0}),2),x=S[0],E=S[1],w=nt((0,a.useState)(!1),2),P=w[0],C=w[1],R=nt((0,a.useState)(!1),2),I=R[0],M=R[1],D=(0,a.useRef)(),A=O(n),T=L[n.type];if(!T)return a.createElement("g",{transform:"translate(".concat(n.x,", ").concat(n.y,")")},a.createElement("rect",{x:-150,y:-40,width:300,height:80,fill:"#ff0000",stroke:"#ffffff",strokeWidth:"2",rx:8}),a.createElement("text",{x:0,y:0,textAnchor:"middle",fill:"#ffffff",fontSize:"14",fontWeight:"bold"},'ERROR: Module type "',n.type,'" not found'),a.createElement("text",{x:0,y:20,textAnchor:"middle",fill:"#ffffff",fontSize:"12"},"Delete this module (module ID: ",n.id,")"));var B=(0,a.useCallback)(function(e){if(e.stopPropagation(),e.preventDefault(),M(e.ctrlKey||e.metaKey),d.current){var t=d.current.getBoundingClientRect(),a=e.clientX-t.left,o=e.clientY-t.top,r=(a-f.x)/f.scale,i=(o-f.y)/f.scale;k({x:r-n.x,y:i-n.y}),E({x:r,y:i})}v(!0),C(!1)},[n.x,n.y,n.type,d,f]),z=(0,a.useCallback)(function(e){if(h&&d.current){var t=d.current.getBoundingClientRect(),a=e.clientX-t.left,o=e.clientY-t.top,i=(a-f.x)/f.scale,c=(o-f.y)/f.scale;Math.sqrt(Math.pow(i-x.x,2)+Math.pow(c-x.y,2))>5&&C(!0);var l=i-y.x,s=c-y.y;r(n.id,l,s)}},[h,y.x,y.y,x.x,x.y,r,n.id,d,f]),F=(0,a.useCallback)(function(){P||o(Jn(Jn({},n),{},{openEditor:!1,ctrlKey:I})),v(!1),C(!1),M(!1)},[P,I,o,n]);return(0,a.useEffect)(function(){if(h)return document.addEventListener("mousemove",z),document.addEventListener("mouseup",F),function(){document.removeEventListener("mousemove",z),document.removeEventListener("mouseup",F)}},[h,z,F]),a.createElement("g",{ref:D,className:"node ".concat(t?"selected":"")},a.createElement("rect",{x:n.x,y:n.y,width:A.width,height:A.height,fill:"#0b1220",stroke:t?"#22c55e":"#1f2937",strokeWidth:t?"2":"1",rx:"10",onMouseDown:B,style:{cursor:h?"grabbing":"grab"},filter:t?"drop-shadow(0 6px 16px rgba(0,0,0,0.35)) drop-shadow(0 0 0 2px #22c55e)":"drop-shadow(0 6px 16px rgba(0,0,0,0.35))"}),a.createElement("rect",{x:n.x,y:n.y,width:A.width,height:"24",fill:ct(n),rx:"10",ry:"10",onMouseDown:B,style:{cursor:h?"grabbing":"grab"}}),a.createElement("rect",{x:n.x,y:n.y+12,width:A.width,height:"12",fill:ct(n),onMouseDown:B,style:{cursor:h?"grabbing":"grab"}}),a.createElement("text",{x:n.x+A.width/2,y:n.y+16,fill:"#e2e8f0",fontSize:"12",fontWeight:"600",textAnchor:"middle",style:{pointerEvents:"auto",cursor:"pointer",userSelect:"none"},onClick:function(e){e.stopPropagation(),e.preventDefault(),"Clock"===n.type&&m?m(n):"HarmonicSequencer"===n.type&&_?_(n):o(Jn(Jn({},n),{},{openEditor:!0}))}},lt(n,T,s)),a.createElement("g",{className:"delete-btn",onClick:function(e){e.stopPropagation(),u&&u(n.id)},style:{cursor:"pointer"}},a.createElement("rect",{x:n.x+A.width-20,y:n.y+4,width:"16",height:"16",fill:"#1f2937",stroke:"#374151",strokeWidth:"1",rx:"3",ry:"3",opacity:"0.9"}),a.createElement("text",{x:n.x+A.width-12,y:n.y+14,fill:"#e2e8f0",fontSize:"11",fontWeight:"700",textAnchor:"middle",style:{pointerEvents:"none"}},"×")),A.left.map(function(e){return a.createElement("g",{key:e.id},a.createElement("circle",{cx:e.x,cy:e.y,r:"6",fill:"audio"===e.kind?"#34d399":"#9333ea",stroke:"#1f2937",strokeWidth:"2",className:"jack jack-".concat("audio"===e.kind?"audio":"ctrl"),onClick:function(n){n.stopPropagation(),i&&i(e)},onContextMenu:function(t){c&&c(t,e,n.id)},style:{cursor:"pointer"}}),a.createElement("text",{x:e.x+12,y:e.y+4,fill:"#e2e8f0",fontSize:"10",textAnchor:"start",className:"jack-label",style:{pointerEvents:"none"}},e.port))}),A.right.map(function(e,t){var o,r=l&&l.id===e.id,s="HarmonicSequencer"===n.type&&"gate_sum"===e.port;return a.createElement(a.Fragment,{key:e.id},a.createElement("g",null,a.createElement("circle",{cx:e.x,cy:e.y,r:"6",fill:"audio"===e.kind?"#34d399":"#9333ea",stroke:r?"#22d3ee":"#1f2937",strokeWidth:r?"3":"2",className:"jack jack-".concat("audio"===e.kind?"audio":"ctrl"),onClick:function(n){n.stopPropagation(),i&&i(e)},onContextMenu:function(t){c&&c(t,e,n.id)},style:{cursor:"pointer"}}),a.createElement("text",{x:e.x-12,y:e.y+4,fill:"#e2e8f0",fontSize:"10",textAnchor:"end",className:"jack-label",style:{pointerEvents:"none"}},e.port)),s&&a.createElement("g",{onClick:function(e){var t;e.stopPropagation(),p&&p(n.id,"show_individual_outputs",!(null!==(t=n.params)&&void 0!==t&&t.show_individual_outputs))},style:{cursor:"pointer"}},a.createElement("rect",{x:e.x-20,y:e.y+12,width:"16",height:"12",fill:"#374151",stroke:"#6b7280",strokeWidth:"1",rx:"2",opacity:"0.8"}),a.createElement("text",{x:e.x-12,y:e.y+21,fill:"#e2e8f0",fontSize:"8",fontWeight:"600",textAnchor:"middle",style:{pointerEvents:"none"}},null!==(o=n.params)&&void 0!==o&&o.show_individual_outputs?"▲":"▼")))}))},ut=(0,a.forwardRef)(function(e,n){var t=e.modules,o=e.connections,r=e.selectedModule,i=e.selectedModules,c=e.onSelectModule,l=e.onSelectModules,s=e.onMoveModule,u=e.onPortClick,p=e.onPortRightClick,d=e.connectingFrom,f=e.selectedConnection,m=e.onConnectionClick,_=e.mousePos,g=e.onMouseMove,h=e.onDeleteModule,v=e.onUpdateParam,b=e.onClearSelections,y=e.onOpenClockSequencer,k=e.onOpenHarmonicSequencer,S=e.groups,x=e.selectedGroup,E=e.onSelectGroup,w=e.onMoveGroup,P=e.onToggleGroupCollapse,C=e.onDeleteGroup,R=e.onUpdateGroupLabel,L=e.onEnterGroup,I=e.onExitToRoot,M=e.onMoveStub,D=e.currentContext,A=(0,a.useRef)(),T=nt((0,a.useState)({x:0,y:0,scale:1}),2),B=T[0],z=T[1],F=nt((0,a.useState)(!1),2),N=F[0],G=F[1],q=nt((0,a.useState)({x:0,y:0}),2),U=q[0],W=q[1],V=nt((0,a.useState)(!1),2),j=V[0],H=V[1],$=nt((0,a.useState)({x:0,y:0}),2),K=$[0],Y=$[1],X=nt((0,a.useState)(null),2),Z=X[0],Q=X[1],J=nt((0,a.useState)(null),2),ee=J[0],ne=J[1],te=nt((0,a.useState)(""),2),ae=te[0],oe=te[1],re=(0,a.useCallback)(function(){if(A.current&&0!==t.length){console.log("Zoom to fit: calculating bounding box for",t.length,"modules");var e=1/0,n=1/0,a=-1/0,o=-1/0;t.forEach(function(t){var r=O(t);e=Math.min(e,t.x),n=Math.min(n,t.y),a=Math.max(a,t.x+r.width),o=Math.max(o,t.y+r.height)}),console.log("Bounding box:",{minX:e,minY:n,maxX:a,maxY:o});var r=100;e-=r,n-=r,a+=r,o+=r;var i=A.current.getBoundingClientRect(),c=i.width,l=i.height;console.log("Canvas dimensions:",{canvasWidth:c,canvasHeight:l});var s=a-e,u=o-n,p=c/s,d=l/u,f=Math.min(p,d,1),m=(c-s*f)/2-e*f,_=(l-u*f)/2-n*f;console.log("New transform:",{x:m,y:_,scale:f}),z({x:m,y:_,scale:f})}else console.log("Zoom to fit: no canvas or no modules",{canvasRef:!!A.current,moduleCount:t.length})},[t]),ie=(0,a.useCallback)(function(e){if(!A.current)return!0;var n=A.current.getBoundingClientRect(),t=B.x,a=B.y,o=B.scale,r=(e.x+t)*o,i=(e.y+a)*o,c=O(e),l=c.width*o,s=c.height*o;return r<n.width&&i<n.height&&r+l>0&&i+s>0},[B]);(0,a.useImperativeHandle)(n,function(){return{zoomToFit:re,isModuleVisible:ie}},[re,ie]);var ce,le,se,ue,pe,de,fe,me=function(e){if(j){var n=A.current.getBoundingClientRect(),a=(e.clientX-n.left-B.x)/B.scale,o=(e.clientY-n.top-B.y)/B.scale,r=Math.min(a,K.x),i=Math.min(o,K.y),c=Math.abs(a-K.x),s=Math.abs(o-K.y);Q({x:r,y:i,width:c,height:s});var u=t.filter(function(e){var n=O(e),t=e.x+n.width,a=e.y+n.height;return!(e.x>r+c||t<r||e.y>i+s||a<i)});l&&l(u)}else N&&z(function(n){return Jn(Jn({},n),{},{x:e.clientX-U.x,y:e.clientY-U.y})});if(g){var p=A.current.getBoundingClientRect(),d=(e.clientX-p.left-B.x)/B.scale,f=(e.clientY-p.top-B.y)/B.scale;g({x:d,y:f})}},_e=function(){if(j&&Z){var e=Z.x,n=Z.y,a=Z.width,o=Z.height,r=t.filter(function(t){var r=O(t),i=t.x+r.width,c=t.y+r.height;return!(t.x>e+a||i<e||t.y>n+o||c<n)});l&&r.length>0&&l(r)}G(!1),H(!1),Q(null)};return(0,a.useEffect)(function(){if(N)return document.addEventListener("mousemove",me),document.addEventListener("mouseup",_e),function(){document.removeEventListener("mousemove",me),document.removeEventListener("mouseup",_e)}},[N,U]),a.createElement("div",{className:"patch-canvas ".concat(N?"panning":""," ").concat(D?"subpatch-context":""),ref:A,onMouseDown:function(e){if(e.target===e.currentTarget||"svg"===e.target.tagName){var n=A.current.getBoundingClientRect(),t=(e.clientX-n.left-B.x)/B.scale,a=(e.clientY-n.top-B.y)/B.scale;e.shiftKey?(H(!0),Y({x:t,y:a}),Q({x:t,y:a,width:0,height:0})):(G(!0),W({x:e.clientX-B.x,y:e.clientY-B.y}),!b||e.ctrlKey||e.metaKey||b())}},onMouseMove:me,onWheel:function(e){e.preventDefault();var n=e.deltaY>0?.9:1.1;z(function(e){return Jn(Jn({},e),{},{scale:Math.max(.1,Math.min(3,e.scale*n))})})},onDoubleClick:function(e){D&&(e.target.classList.contains("patch-canvas")||e.target.classList.contains("patch-svg")||"svg"===e.target.tagName||"g"===e.target.tagName)&&(e.stopPropagation(),I&&I())}},a.createElement("svg",{className:"patch-svg",width:"100%",height:"100%"},a.createElement("g",{transform:"translate(".concat(B.x,", ").concat(B.y,") scale(").concat(B.scale,")")},S&&S.map(function(e){if(null!==D)return null;if(e.collapsed){var n=Math.max(e.inputPorts.length,e.outputPorts.length),r=Math.max(80,25*n+60),i=200;return a.createElement("g",{key:e.id},a.createElement("rect",{x:e.x,y:e.y,width:i,height:r,fill:"#cbd5e1",stroke:(null==x?void 0:x.id)===e.id?"#22c55e":"#334155",strokeWidth:(null==x?void 0:x.id)===e.id?"3":"2",rx:"10",style:{cursor:"move"},onMouseDown:function(n){n.stopPropagation(),E&&E(e);var t=n.clientX,a=n.clientY,o=e.x,r=e.y,i=function(n){var i=n.clientX-t,c=n.clientY-a,l=o+i,s=r+c;w&&w(e.id,l,s)},c=function(){document.removeEventListener("mousemove",i),document.removeEventListener("mouseup",c)};document.addEventListener("mousemove",i),document.addEventListener("mouseup",c)},onDoubleClick:function(n){n.stopPropagation(),L&&L(e.id)}}),a.createElement("rect",{x:e.x,y:e.y,width:i,height:32,fill:e.color,rx:"10",style:{pointerEvents:"none"}}),a.createElement("rect",{x:e.x,y:e.y+16,width:i,height:16,fill:e.color,style:{pointerEvents:"none"}}),a.createElement("text",{x:e.x+100,y:e.y+20,fill:"#1f2937",fontSize:"14",fontWeight:"700",textAnchor:"middle",style:{userSelect:"none",pointerEvents:"none"}},e.label),a.createElement("text",{x:e.x+100,y:e.y+50,fill:"rgba(31, 41, 55, 0.7)",fontSize:"11",textAnchor:"middle",style:{userSelect:"none",pointerEvents:"none"}},e.moduleIds.length," modules"),a.createElement("g",{onClick:function(n){n.stopPropagation(),C&&C(e.id)},style:{cursor:"pointer"}},a.createElement("circle",{cx:e.x+i-12,cy:e.y+12,r:"10",fill:"rgba(220, 38, 38, 0.9)"}),a.createElement("text",{x:e.x+i-12,y:e.y+16,fill:"white",fontSize:"14",fontWeight:"700",textAnchor:"middle",style:{pointerEvents:"none"}},"×")),e.inputPorts.map(function(n,t){var o=e.y+60+25*t,r="audio"===n.kind?"#34d399":"#9333ea";return a.createElement("g",{key:"".concat(e.id,"-in-").concat(t)},a.createElement("circle",{cx:e.x,cy:o,r:"6",fill:r,stroke:"white",strokeWidth:"2",style:{cursor:"pointer"},onClick:function(t){t.stopPropagation();var a={id:"".concat(e.id,":in_").concat(n.targetPort),side:"left",port:"in_".concat(n.targetPort),kind:n.kind,x:e.x,y:o,_internalTarget:{moduleId:n.targetModuleId,port:n.targetPort}};u&&u(a)}}),a.createElement("text",{x:e.x+15,y:o+4,fill:"#1f2937",fontSize:"10",style:{userSelect:"none",pointerEvents:"none"}},n.port))}),e.outputPorts.map(function(n,t){var o=e.y+60+25*t,r="audio"===n.kind?"#34d399":"#9333ea";return a.createElement("g",{key:"".concat(e.id,"-out-").concat(t)},a.createElement("circle",{cx:e.x+i,cy:o,r:"6",fill:r,stroke:"white",strokeWidth:"2",style:{cursor:"pointer"},onClick:function(t){t.stopPropagation();var a={id:"".concat(e.id,":out_").concat(n.sourcePort),side:"right",port:"out_".concat(n.sourcePort),kind:n.kind,x:e.x+i,y:o,_internalSource:{moduleId:n.sourceModuleId,port:n.sourcePort}};u&&u(a)}}),a.createElement("text",{x:e.x+i-15,y:o+4,fill:"#1f2937",fontSize:"10",textAnchor:"end",style:{userSelect:"none",pointerEvents:"none"}},n.port))}),e.inputPorts.map(function(n,r){var i=e.y+60+25*r,c=e.x,l=i,s=o.find(function(t){var a=t.to.id.split(":")[0],o=t.to.port;return a===e.id&&o==="in_".concat(n.targetPort)||e.moduleIds.includes(a)&&o===n.targetPort&&!e.moduleIds.includes(t.from.id.split(":")[0])});if(!s)return null;var u=s.from.id.split(":")[0],p=t.find(function(e){return e.id===u});if(!p)return null;var d=O(p),_=[].concat(Zn(d.right),Zn(d.left)).find(function(e){return e.id===s.from.id});if(!_)return null;var g=_.x,h=_.y,v=c,b=l,y=v-g,k=.3*Math.abs(y),S="M ".concat(g," ").concat(h," C ").concat(g+k," ").concat(h,", ").concat(v-k," ").concat(b,", ").concat(v," ").concat(b),x="".concat(s.from.id,"-").concat(s.to.id),E=f===x;return a.createElement("path",{key:"group-cable-in-".concat(e.id,"-").concat(r),d:S,stroke:E?"#22c55e":"audio"===n.kind?"#34d399":"#9333ea",strokeWidth:E?"4":"2",fill:"none",className:"cable",style:{cursor:"pointer",filter:E?"drop-shadow(0 0 4px #22c55e)":"none",opacity:E?1:.8},onClick:function(e){e.stopPropagation(),e.preventDefault(),m&&m(x)},onMouseDown:function(e){e.stopPropagation()}})}),e.outputPorts.map(function(n,r){var c=e.y+60+25*r,l=e.x+i,s=c,u=o.find(function(t){var a=t.from.id.split(":")[0],o=t.from.port;return a===e.id&&o==="out_".concat(n.sourcePort)||e.moduleIds.includes(a)&&o===n.sourcePort&&!e.moduleIds.includes(t.to.id.split(":")[0])});if(!u)return null;console.log("✓ Rendering cable from ".concat(e.id,":out_").concat(n.sourcePort," to ").concat(u.to.id));var p=u.to.id.split(":")[0],d=t.find(function(e){return e.id===p});if(!d)return null;var _=O(d),g=[].concat(Zn(_.right),Zn(_.left)).find(function(e){return e.id===u.to.id});if(!g)return null;var h=l,v=s,b=g.x,y=g.y,k=b-h,S=.3*Math.abs(k),x="M ".concat(h," ").concat(v," C ").concat(h+S," ").concat(v,", ").concat(b-S," ").concat(y,", ").concat(b," ").concat(y),E="".concat(u.from.id,"-").concat(u.to.id),w=f===E;return a.createElement("path",{key:"group-cable-out-".concat(e.id,"-").concat(r),d:x,stroke:w?"#22c55e":"audio"===n.kind?"#34d399":"#9333ea",strokeWidth:w?"4":"2",fill:"none",className:"cable",style:{cursor:"pointer",filter:w?"drop-shadow(0 0 4px #22c55e)":"none",opacity:w?1:.8},onClick:function(e){e.stopPropagation(),e.preventDefault(),m&&m(E)},onMouseDown:function(e){e.stopPropagation()}})}))}return a.createElement("g",{key:e.id},a.createElement("rect",{x:e.x,y:e.y,width:e.width,height:e.height,fill:e.color,fillOpacity:"0.1",stroke:e.color,strokeWidth:"2",strokeDasharray:"5,5",rx:"10",style:{pointerEvents:"none"}}),a.createElement("g",null,a.createElement("rect",{x:e.x,y:e.y-25,width:Math.max(100,8*e.label.length+60),height:"22",fill:e.color,fillOpacity:"0.9",rx:"4",style:{cursor:ee===e.id?"text":"pointer"},onClick:function(n){n.stopPropagation(),ne(e.id),oe(e.label)}}),ee===e.id?a.createElement("foreignObject",{x:e.x+8,y:e.y-24,width:Math.max(100,8*e.label.length+40),height:"20"},a.createElement("input",{type:"text",value:ae,onChange:function(e){return oe(e.target.value)},onBlur:function(){R&&ae.trim()&&R(e.id,ae.trim()),ne(null)},onKeyDown:function(n){"Enter"===n.key?(R&&ae.trim()&&R(e.id,ae.trim()),ne(null)):"Escape"===n.key&&ne(null)},autoFocus:!0,style:{width:"100%",height:"18px",fontSize:"12px",fontWeight:"600",backgroundColor:"rgba(255, 255, 255, 0.95)",border:"1px solid white",borderRadius:"2px",padding:"2px 4px",color:"#1f2937"},onClick:function(e){return e.stopPropagation()}})):a.createElement("text",{x:e.x+10,y:e.y-10,fill:"white",fontSize:"12",fontWeight:"600",style:{userSelect:"none",cursor:"pointer",pointerEvents:"none"}},e.label),a.createElement("g",{onClick:function(n){n.stopPropagation(),P&&P(e.id)},style:{cursor:"pointer"}},a.createElement("rect",{x:e.x+e.width-50,y:e.y-24,width:"20",height:"20",fill:"rgba(59, 130, 246, 0.9)",rx:"3"}),a.createElement("text",{x:e.x+e.width-40,y:e.y-9,fill:"white",fontSize:"12",fontWeight:"700",textAnchor:"middle",style:{pointerEvents:"none"}},e.collapsed?"▼":"▲")),a.createElement("g",{onClick:function(n){n.stopPropagation(),C&&C(e.id)},style:{cursor:"pointer"}},a.createElement("rect",{x:e.x+e.width-25,y:e.y-24,width:"20",height:"20",fill:"rgba(220, 38, 38, 0.9)",rx:"3"}),a.createElement("text",{x:e.x+e.width-15,y:e.y-9,fill:"white",fontSize:"14",fontWeight:"700",textAnchor:"middle",style:{pointerEvents:"none"}},"×"))))}),o.map(function(e){var n=e.from.id.split(":")[0],o=e.to.id.split(":")[0],r=t.find(function(e){return e.id===n}),i=t.find(function(e){return e.id===o}),c=S&&S.find(function(e){return e.id===n}),l=S&&S.find(function(e){return e.id===o});if(!r&&!c)return null;if(!i&&!l)return null;var s,u,p,d,_=r?S&&S.find(function(e){return e.moduleIds.includes(n)}):c,g=i?S&&S.find(function(e){return e.moduleIds.includes(o)}):l;if(null===D){if(r&&_&&_.collapsed&&!c)return null;if(i&&g&&g.collapsed&&!l)return null}else{var h=_&&_.id===D,v=g&&g.id===D;if(!h||!v)return null}if(r){var b=O(r),y=[].concat(Zn(b.right),Zn(b.left)).find(function(n){return n.id===e.from.id});if(!y)return null;s=y.x,u=y.y}else{if(!c||!c.collapsed)return null;var k=c.outputPorts.findIndex(function(n){return"".concat(c.id,":out_").concat(n.sourcePort)===e.from.id});if(-1===k)return null;s=c.x+200,u=c.y+60+25*k}if(i){var x=O(i),E=[].concat(Zn(x.right),Zn(x.left)).find(function(n){return n.id===e.to.id});if(!E)return null;p=E.x,d=E.y}else{if(!l||!l.collapsed)return null;var w=l.inputPorts.findIndex(function(n){return"".concat(l.id,":in_").concat(n.targetPort)===e.to.id});if(-1===w)return null;p=l.x,d=l.y+60+25*w}var P=p-s,C=.3*Math.abs(P),R="M ".concat(s," ").concat(u," C ").concat(s+C," ").concat(u,", ").concat(p-C," ").concat(d,", ").concat(p," ").concat(d),L="".concat(e.from.id,"-").concat(e.to.id),I=f===L;return a.createElement("g",{key:"".concat(e.from.id,"-").concat(e.to.id),className:"cable",style:{cursor:"pointer"},onClick:function(e){e.stopPropagation(),e.preventDefault(),m&&m(L)},onMouseDown:function(e){e.stopPropagation()}},a.createElement("path",{d:R,stroke:"transparent",strokeWidth:"15",fill:"none",style:{pointerEvents:"stroke"}}),a.createElement("path",{d:R,stroke:I?"#22c55e":"audio"===e.from.kind?"#34d399":"#9333ea",strokeWidth:I?"4":"2",fill:"none",style:{filter:I?"drop-shadow(0 0 4px #22c55e)":"none",opacity:I?1:.8,pointerEvents:"none"}}))}),d&&_&&(ce=d.x,le=d.y,se=_.x,ue=_.y,pe=se-ce,de=.3*Math.abs(pe),fe="M ".concat(ce," ").concat(le," C ").concat(ce+de," ").concat(le,", ").concat(se-de," ").concat(ue,", ").concat(se," ").concat(ue),a.createElement("path",{d:fe,stroke:"audio"===d.kind?"#34d399":"#9333ea",strokeWidth:"2",strokeDasharray:"5,5",fill:"none",opacity:"0.6",style:{pointerEvents:"none"}})),t.map(function(e){var n=S&&S.find(function(n){return n.moduleIds.includes(e.id)});if(null===D){if(n&&n.collapsed)return null}else if(!n||n.id!==D)return null;var o=i.some(function(n){return n.id===e.id});return a.createElement(st,{key:e.id,module:e,isSelected:(null==r?void 0:r.id)===e.id||o,isGroupSelected:o,onSelect:c,onMove:s,onPortClick:u,onPortRightClick:p,connectingFrom:d,allModules:t,onDelete:h,onUpdateParam:v,canvasRef:A,canvasTransform:B,onOpenClockSequencer:y,onOpenHarmonicSequencer:k})}),D&&function(e,n){var o=S&&S.find(function(e){return e.id===D});if(!o)return null;var r=[];return null===(e=o.inputPorts)||void 0===e||e.forEach(function(e,n){var o="audio"===e.kind?"#34d399":"#9333ea",i=Math.max(100,7*"".concat(e.externalSource,":").concat(e.port).length),c=e.x||50,l=e.y||50+40*n,s=t.find(function(n){return n.id===e.targetModuleId});if(s){var u=O(s).left.find(function(n){return n.id==="".concat(s.id,":").concat(e.targetPort)});if(u){var p=u.x,d=u.y,f=c+i+20,m=l;r.push(a.createElement("path",{key:"stub-cable-in-".concat(n),d:"M ".concat(f," ").concat(m," C ").concat(f+50," ").concat(m,", ").concat(p-50," ").concat(d,", ").concat(p," ").concat(d),stroke:o,strokeWidth:"3",fill:"none",className:"cable",style:{pointerEvents:"none"}}))}}}),null===(n=o.outputPorts)||void 0===n||n.forEach(function(e,n){var o="audio"===e.kind?"#34d399":"#9333ea",i=(Math.max(100,7*"".concat(e.externalTarget,":").concat(e.port).length),e.x||1200),c=e.y||50+40*n,l=t.find(function(n){return n.id===e.sourceModuleId});if(l){var s=O(l).right.find(function(n){return n.id==="".concat(l.id,":").concat(e.sourcePort)});if(s){var u=s.x,p=s.y,d=i-20,f=c;r.push(a.createElement("path",{key:"stub-cable-out-".concat(n),d:"M ".concat(u," ").concat(p," C ").concat(u+50," ").concat(p,", ").concat(d-50," ").concat(f,", ").concat(d," ").concat(f),stroke:o,strokeWidth:"3",fill:"none",className:"cable",style:{pointerEvents:"none"}}))}}}),r}(),t.map(function(e){var n=S&&S.find(function(n){return n.moduleIds.includes(e.id)});if(null===D){if(n&&n.collapsed)return null}else if(!n||n.id!==D)return null;var o=i.some(function(n){return n.id===e.id});return a.createElement(st,{key:e.id,module:e,isSelected:(null==r?void 0:r.id)===e.id||o,isGroupSelected:o,onSelect:c,onMove:s,onPortClick:u,onPortRightClick:p,connectingFrom:d,allModules:t,onDelete:h,onUpdateParam:v,canvasRef:A,canvasTransform:B,onOpenClockSequencer:y,onOpenHarmonicSequencer:k})}),D&&function(e,n){var t=S&&S.find(function(e){return e.id===D});if(!t)return null;var o=[];return null===(e=t.inputPorts)||void 0===e||e.forEach(function(e,n){var t="audio"===e.kind?"#34d399":"#9333ea",r="".concat(e.externalSource,":").concat(e.port),i=Math.max(100,7*r.length),c=e.x||50,l=e.y||50+40*n,s=c+i+20,u=l;o.push(a.createElement("g",{key:"stub-in-".concat(n)},a.createElement("g",{style:{cursor:"move"},onMouseDown:function(e){e.stopPropagation();var t=e.clientX,a=e.clientY,o=c,r=l,i=function(e){var i=e.clientX-t,c=e.clientY-a;M&&M(D,"input",n,o+i,r+c)},s=function(){document.removeEventListener("mousemove",i),document.removeEventListener("mouseup",s)};document.addEventListener("mousemove",i),document.addEventListener("mouseup",s)}},a.createElement("rect",{x:c,y:l-10,width:i,height:20,fill:"rgba(31, 41, 55, 0.9)",stroke:t,strokeWidth:"1",rx:"3"}),a.createElement("text",{x:c+5,y:l+4,fill:"white",fontSize:"11",fontWeight:"500",style:{userSelect:"none",pointerEvents:"none"}},r),a.createElement("path",{d:"M ".concat(c+i+5," ").concat(l-5," l 8 5 l -8 5 z"),fill:t,style:{pointerEvents:"none"}}),a.createElement("circle",{cx:s,cy:u,r:"6",fill:t,stroke:"white",strokeWidth:"2",style:{cursor:"pointer"}}))))}),null===(n=t.outputPorts)||void 0===n||n.forEach(function(e,n){var t="audio"===e.kind?"#34d399":"#9333ea",r="".concat(e.externalTarget,":").concat(e.port),i=Math.max(100,7*r.length),c=e.x||1200,l=e.y||50+40*n,s=c-20,u=l;o.push(a.createElement("g",{key:"stub-out-".concat(n)},a.createElement("g",{style:{cursor:"move"},onMouseDown:function(e){e.stopPropagation();var t=e.clientX,a=e.clientY,o=c,r=l,i=function(e){var i=e.clientX-t,c=e.clientY-a;M&&M(D,"output",n,o+i,r+c)},s=function(){document.removeEventListener("mousemove",i),document.removeEventListener("mouseup",s)};document.addEventListener("mousemove",i),document.addEventListener("mouseup",s)}},a.createElement("circle",{cx:s,cy:u,r:"6",fill:t,stroke:"white",strokeWidth:"2",style:{cursor:"pointer"}}),a.createElement("path",{d:"M ".concat(c-8," ").concat(l-5," l 8 5 l -8 5 z"),fill:t,style:{pointerEvents:"none"}}),a.createElement("rect",{x:c,y:l-10,width:i,height:20,fill:"rgba(31, 41, 55, 0.9)",stroke:t,strokeWidth:"1",rx:"3"}),a.createElement("text",{x:c+5,y:l+4,fill:"white",fontSize:"11",fontWeight:"500",style:{userSelect:"none",pointerEvents:"none"}},r))))}),o}(),Z&&Z.width>0&&Z.height>0&&a.createElement("rect",{x:Z.x,y:Z.y,width:Z.width,height:Z.height,fill:"rgba(34, 197, 94, 0.1)",stroke:"#22c55e",strokeWidth:"2",strokeDasharray:"5,5",style:{pointerEvents:"none"}}))))}),pt=function(e){var n=e.selectedModule,t=e.selectedModules,o=e.selectedGroup,r=e.onUpdateParam,i=e.onUpdateGroupLabel,c=e.onUngroupModules,l=e.modules,s=e.onShowNetlist,u=e.netlistCopyState,p=e.onCreateGroup,d=e.cpuEstimate,f=nt((0,a.useState)(!1),2),m=f[0],_=f[1],g=nt((0,a.useState)(!1),2),h=g[0],v=g[1],b=nt((0,a.useState)(!1),2),y=b[0],k=b[1],S=nt((0,a.useState)(!1),2),x=S[0],E=S[1],w=nt((0,a.useState)(!1),2),P=w[0],C=w[1],R=nt((0,a.useState)(!1),2),I=R[0],M=R[1],D=nt((0,a.useState)(!1),2),A=D[0],T=D[1],O=nt((0,a.useState)(!1),2),z=O[0],F=O[1],N=nt((0,a.useState)(!1),2),G=N[0],q=N[1],U=nt((0,a.useState)(!1),2),W=U[0],V=U[1],j=n&&("SamplePlayer"===n.type||"SDPlayer"===n.type||"KickDrum"===n.type||"SnareDrum"===n.type),H=n&&"KickDrum"===n.type,$=n&&"SnareDrum"===n.type,K=n&&"ADSR"===n.type,Y=n&&"Clock"===n.type,X=n&&"Wavetable"===n.type,Z=n&&"Scale"===n.type,Q=n&&"HarmonicSequencer"===n.type,J=n&&"Distortion"===n.type;if((0,a.useEffect)(function(){n&&n.openEditor&&(j?_(!0):K?v(!0):Y?k(!0):X?C(!0):Z?M(!0):Q?q(!0):J&&V(!0))},[null==n?void 0:n.id,null==n?void 0:n.openEditor]),o)return a.createElement("div",{className:"inspector"},a.createElement("h2",null,"Group Properties"),a.createElement("div",{className:"inspector-content"},a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8",marginBottom:"8px"}},o.moduleIds.length," modules in group")),a.createElement("div",{className:"params"},a.createElement("h3",null,"Group Settings"),a.createElement("div",{className:"param"},a.createElement("label",null,"Group Name"),a.createElement("input",{type:"text",value:o.label,onChange:function(e){i&&i(o.id,e.target.value)},placeholder:"Enter group name"})),a.createElement("button",{className:"btn btn-red",onClick:function(){c&&c(o.id)},style:{width:"100%",marginTop:"12px"}},"Ungroup"),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginTop:"8px"}},"Double-click the group to enter subpatch view")));if(t.length>0)return a.createElement("div",{className:"inspector"},a.createElement("h2",null,"Group Selection"),a.createElement("div",{className:"inspector-content"},a.createElement("p",null,t.length," modules selected"),a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8",marginTop:"8px"}},t.map(function(e){var n;return(null===(n=L[e.type])||void 0===n?void 0:n.label)||e.type}).join(", "))),a.createElement("div",{className:"params"},a.createElement("h3",null,"Group Actions"),a.createElement("button",{className:"btn btn-green",onClick:p,style:{width:"100%",marginBottom:"8px"}},"Create Visual Group"),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginTop:"4px",marginBottom:"12px"}},"Group modules with colored background for organization")),a.createElement("div",{className:"params"},a.createElement("h3",null,"Keyboard Shortcuts"),a.createElement("div",{style:{fontSize:"11px",lineHeight:"1.6"}},a.createElement("div",null,a.createElement("kbd",null,"Ctrl+C")," / ",a.createElement("kbd",null,"Cmd+C")," - Copy"),a.createElement("div",null,a.createElement("kbd",null,"Ctrl+V")," / ",a.createElement("kbd",null,"Cmd+V")," - Paste"),a.createElement("div",null,a.createElement("kbd",null,"Delete")," - Delete selected"),a.createElement("div",null,a.createElement("kbd",null,"Esc")," - Clear selection"))),a.createElement("div",{className:"params"},a.createElement("h3",null,"Debug Tools"),a.createElement("button",{className:"btn ".concat("copied"===u?"btn-green":"btn-amber"),onClick:s,style:{width:"100%",marginBottom:"8px"},disabled:"copying"===u},"copied"===u?"Copied!":"copying"===u?"Copying...":"Copy Netlist")));if(!n){var ee=(null==d?void 0:d.percentage)||0,ne=ee>80?"#ef4444":ee>50?"#f59e0b":"#10b981";return a.createElement("div",{className:"inspector"},a.createElement("h2",null,"Properties"),a.createElement("div",{className:"inspector-content"},a.createElement("p",null,"Select a module to view properties"),a.createElement("div",{style:{fontSize:"11px",color:"#94a3b8",marginTop:"12px",lineHeight:"1.6"}},a.createElement("div",null,a.createElement("strong",null,"Selection:")),a.createElement("div",null,"• Click module to select"),a.createElement("div",null,"• ",a.createElement("kbd",null,"Shift+Drag")," for rectangle select"),a.createElement("div",null,"• ",a.createElement("kbd",null,"Ctrl+Click")," to toggle selection"))),a.createElement("div",{className:"params",style:{marginTop:"8px"}},a.createElement("h3",null,"CPU Usage Estimate"),a.createElement("div",{style:{marginBottom:"8px"}},a.createElement("div",{style:{display:"flex",justifyContent:"space-between",fontSize:"12px",marginBottom:"4px",color:ne}},a.createElement("span",{style:{fontWeight:"bold"}},ee.toFixed(1),"%"),a.createElement("span",{style:{fontSize:"10px",color:"#94a3b8"}},(null==d?void 0:d.estimatedCycles)||0," / ",(null==d?void 0:d.availableCycles)||5442," cycles")),a.createElement("div",{style:{width:"100%",height:"20px",backgroundColor:"#1e293b",borderRadius:"4px",overflow:"hidden",border:"1px solid #334155"}},a.createElement("div",{style:{width:"".concat(Math.min(ee,100),"%"),height:"100%",backgroundColor:ne,transition:"width 0.3s ease, background-color 0.3s ease"}})),ee>80&&a.createElement("div",{style:{fontSize:"10px",color:"#ef4444",marginTop:"4px",fontWeight:"bold"}},"⚠️ WARNING: High CPU usage!"),a.createElement("div",{style:{fontSize:"10px",color:"#64748b",marginTop:"6px",fontStyle:"italic"}},"Core 1 (Audio) • Dual-core optimized"),(null==d?void 0:d.core0ModuleCount)>0&&a.createElement("div",{style:{fontSize:"10px",color:"#64748b",marginTop:"2px",fontStyle:"italic"}},"Core 0 (Control): ",d.core0ModuleCount," modules @ 100Hz"))),a.createElement("div",{className:"params"},a.createElement("h3",null,"Debug Tools"),a.createElement("button",{className:"btn ".concat("copied"===u?"btn-green":"btn-amber"),onClick:s,style:{width:"100%",marginBottom:"8px"},disabled:"copying"===u},"copied"===u?"Copied!":"copying"===u?"Copying...":"Copy Netlist")))}var te,ae,oe,re,ie=L[n.type];return a.createElement("div",{className:"inspector"},a.createElement("h2",{style:{borderLeft:"Pot"!==n.type&&"LEDButton"!==n.type||void 0===n.params.bank?"none":"4px solid ".concat(it[n.params.bank-1]),paddingLeft:"Pot"!==n.type&&"LEDButton"!==n.type||void 0===n.params.bank?"0":"12px"}},ie.label,("Pot"===n.type||"LEDButton"===n.type)&&void 0!==n.params.bank&&a.createElement("span",{style:{fontSize:"10px",opacity:.7,marginLeft:"8px"}},"(Bank ",n.params.bank,")")),a.createElement("p",{className:"module-desc"},ie.desc),(j||H||$||K||Y||X||Z||Q||J)&&a.createElement("div",{style:{fontSize:"10px",color:"#6b7280",marginBottom:"12px",fontStyle:"italic"}},"💡 Click the module title to open the dedicated editor"),a.createElement("div",{className:"params"},a.createElement("h3",null,"Parameters"),Object.entries(n.params).map(function(e){var t=nt(e,2),o=t[0],i=t[1];if("bank"===o&&("Pot"===n.type||"LEDButton"===n.type))return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,o," (1-8):"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,parseInt(e.target.value))}},[1,2,3,4,5,6].map(function(e){return a.createElement("option",{key:e,value:e},"Bank ",e," (",["red","green","blue","yellow","cyan","magenta"][e-1],")")})));if("locked"===o&&("Pot"===n.type||"LEDButton"===n.type))return a.createElement("div",{key:o,className:"param"},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"8px"}},"Banking Mode:",a.createElement("button",{className:"btn ".concat(i?"btn-amber":"btn-ghost"),onClick:function(){r(n.id,o,!i)},style:{fontSize:"12px",padding:"4px 8px",minWidth:"80px"}},i?"🔒 Locked":"🔓 Banked")),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginTop:"2px",fontStyle:"italic"}},i?"Control active in ALL banks (persistent)":"Control only active in Bank ".concat(n.params.bank||1)),a.createElement("div",{style:{fontSize:"9px",color:"#6b7280",marginTop:"4px",padding:"4px",backgroundColor:"#1e293b",borderRadius:"3px"}},"💡 ",a.createElement("strong",null,"Lock Button:")," Essential controls (like triggers) should be locked so they're always accessible. When adding new controls, locked slots are automatically skipped."));if("Pot"===n.type&&"pin"===o||"LEDButton"===n.type&&("pin"===o||"ledPin"===o))return null;if("index"===o&&"GateIn"===n.type)return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Gate Input:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,parseInt(e.target.value))}},a.createElement("option",{value:1},"Gate In 1 (GPA4)"),a.createElement("option",{value:2},"Gate In 2 (GPA5)")));if("mode"===o&&"GateIn"===n.type)return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Mode:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,e.target.value)}},a.createElement("option",{value:"trigger"},"Trigger (pulse on rising edge)"),a.createElement("option",{value:"gate"},"Gate (sustained high)")),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginTop:"2px",fontStyle:"italic"}},"trigger"===i?"Pulse output on rising edge (for piezo/drums)":"Sustained high while input active (for CV gates)"));if("index"===o&&("Pot"===n.type||"LEDButton"===n.type)){var c=n.params.bank||1,s=l.filter(function(e){var t;return e.type===n.type&&e.id!==n.id&&((null===(t=e.params)||void 0===t?void 0:t.bank)||1)===c}).map(function(e){var n;return(null===(n=e.params)||void 0===n?void 0:n.index)||1}),u={};s.forEach(function(e){u[e]=(u[e]||0)+1});var p=l.filter(function(e){return e.type===n.type}).length;return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Physical ","Pot"===n.type?"Pot":"Button"," (1-",4,"):"),a.createElement("div",{style:{fontSize:"10px",color:"#94a3b8",marginBottom:"4px"}},"Bank ",c,": ",p,"/",24," total ",n.type,"s used"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,parseInt(e.target.value))}},Array.from({length:4},function(e,t){var o=t+1,r=u[o]||0,i=r>0?" (".concat(r," used)"):" (free)";return a.createElement("option",{key:o,value:o},"Pot"===n.type?"Pot":"Button"," ",o,i)})))}if("ADSR"===n.type&&["attack_ms","decay_ms","sustain","release_ms"].includes(o))return null;if("Clock"===n.type){var d=o.match(/^div[1-8]$/)||o.match(/^steps[1-8]$/)||o.match(/^gate_mode[1-8]$/);if(["bpm","swing","running"].includes(o)||d)return null}if("HarmonicSequencer"===n.type){if("step_count"===o){var f=i,m=n.params.start_bank||1,_=B(0,m,l.filter(function(e){return e.id!==n.id}));return a.createElement("div",{key:o,className:"param"},a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"Step Count (Inspector Only)"),a.createElement("select",{value:f,onChange:function(e){var t=parseInt(e.target.value),a=B(0,m,l.filter(function(e){return e.id!==n.id}));r(n.id,"step_count",t),r(n.id,"banks_required",a.banksRequired),r(n.id,"end_bank",a.endBank)},style:{width:"100%",padding:"4px",backgroundColor:"#374151",color:"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"12px"}},a.createElement("option",{value:4},"4 steps (1 bank)"),a.createElement("option",{value:8},"8 steps (2 banks)"),a.createElement("option",{value:12},"12 steps (3 banks)"),a.createElement("option",{value:16},"16 steps (4 banks)")),a.createElement("div",{style:{fontSize:"9px",color:_.isValid?"#22c55e":"#ef4444",marginTop:"4px",padding:"4px",backgroundColor:"#1e293b",borderRadius:"3px"}},_.isValid?a.createElement(a.Fragment,null,"✅ Will use banks ",m,"-",_.endBank):a.createElement(a.Fragment,null,"❌ Cannot fit ",f," steps starting at bank ",m),!_.isValid&&_.conflicts.length>0&&a.createElement("div",{style:{color:"#ef4444",marginTop:"2px"}},"Conflicts with: ",_.conflicts.map(function(e){return"".concat(e.type," ").concat(e.id)}).join(", ")),_.endBank>8&&a.createElement("div",{style:{color:"#ef4444",marginTop:"2px"}},"Would need bank ",_.endBank," (only 6 banks available)")))}if("start_bank"===o){n.params.step_count;var g=i,h=B(0,g,l.filter(function(e){return e.id!==n.id}));return a.createElement("div",{key:o,className:"param"},a.createElement("label",{style:{fontSize:"12px",color:"#9ca3af",display:"block",marginBottom:"4px"}},"Starting Bank"),a.createElement("select",{value:g,onChange:function(e){var t=parseInt(e.target.value),a=B(0,t,l.filter(function(e){return e.id!==n.id}));r(n.id,"start_bank",t),r(n.id,"banks_required",a.banksRequired),r(n.id,"end_bank",a.endBank)},style:{width:"100%",padding:"4px",backgroundColor:"#374151",color:"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"12px"}},[1,2,3,4,5,6].map(function(e){var t=B(0,e,l.filter(function(e){return e.id!==n.id}));return a.createElement("option",{key:e,value:e,style:{color:t.isValid?"white":"#ef4444"}},"Bank ",e," ",t.isValid?"":"(conflicts)")})),a.createElement("div",{style:{fontSize:"9px",color:h.isValid?"#22c55e":"#ef4444",marginTop:"4px",padding:"4px",backgroundColor:"#1e293b",borderRadius:"3px"}},h.isValid?a.createElement(a.Fragment,null,"✅ Will use banks ",g,"-",h.endBank):a.createElement(a.Fragment,null,"❌ Cannot place sequencer at bank ",g),!h.isValid&&h.conflicts.length>0&&a.createElement("div",{style:{color:"#ef4444",marginTop:"2px"}},"Conflicts with: ",h.conflicts.map(function(e){return"".concat(e.type," ").concat(e.id)}).join(", ")),h.endBank>8&&a.createElement("div",{style:{color:"#ef4444",marginTop:"2px"}},"Would need bank ",h.endBank," (only 6 available)")))}if(["banks_required","end_bank"].includes(o))return null;if(["hardware_pots","hardware_btns"].includes(o))return null;if(o.includes("pin")||o.includes("Pin")||o.includes("_pins"))return null;if(o.includes("encoder")||o.includes("Encoder")||o.includes("enc_")||o.includes("encBtn"))return null;if(["loop_start","loop_end","loop_active"].includes(o))return null;if(o.match(/^bank[0-3]_steps$/)||["sequence_length","steps","clock_div","swing","gate_length","playback_mode","running","current_step","show_individual_outputs","individual_outputs_enabled","scale_connected","scale_root","quantization_scale","quantization_root","quantization_tuning","octave_center"].includes(o))return null}if(["KickDrum","SnareDrum","Percussion","PercussionSynth"].includes(n.type))return null;if("SamplePlayer"===n.type){if("polyphonic"===o)return a.createElement("div",{key:o,className:"param"},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("input",{type:"checkbox",checked:i,onChange:function(e){r(n.id,o,e.target.checked)}}),o,":",a.createElement("span",{style:{fontSize:"10px",color:i?"#22c55e":"#94a3b8",fontWeight:"bold"}},i?"6-Voice PSRAM Mode":"Single Voice Mode")),i&&a.createElement("div",{style:{fontSize:"9px",color:"#6b7280",marginTop:"4px",padding:"4px",backgroundColor:"#1e293b",borderRadius:"3px"}},"💡 ",a.createElement("strong",null,"Polyphonic Mode:")," Enables concurrent voices with PSRAM sample caching. Auto-loads sample1.wav to sample8.wav into memory for instant triggering."));if("max_voices"===o&&n.params.polyphonic)return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Voice Count (affects performance):"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,parseInt(e.target.value))}},a.createElement("option",{value:1},"1 Voice (Minimal CPU)"),a.createElement("option",{value:2},"2 Voices (Light CPU)"),a.createElement("option",{value:3},"3 Voices (Low CPU)"),a.createElement("option",{value:4},"4 Voices (Medium CPU)"),a.createElement("option",{value:6},"6 Voices (Standard)"),a.createElement("option",{value:8},"8 Voices (High CPU)")),a.createElement("div",{style:{fontSize:"9px",color:"#6b7280",marginTop:"2px",fontStyle:"italic"}},"More voices = higher CPU usage but richer polyphony"));if("auto_load_samples"===o)return a.createElement("div",{key:o,className:"param"},a.createElement("label",{style:{display:"flex",alignItems:"center",gap:"8px"}},a.createElement("input",{type:"checkbox",checked:i,onChange:function(e){r(n.id,o,e.target.checked)}}),"Auto-load samples:",a.createElement("span",{style:{fontSize:"10px",color:i?"#22c55e":"#94a3b8"}},i?"Load sample1-8.wav on first trigger":"Manual loading only")));if("voice_allocation"===o)return a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Voice allocation strategy:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,e.target.value)}},a.createElement("option",{value:"round_robin"},"Round Robin (balanced)"),a.createElement("option",{value:"oldest_first"},"Oldest First (voice stealing)"),a.createElement("option",{value:"random"},"Random (chaotic)")))}return"Oscillator"===n.type&&"waveform"===o?a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Waveform:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,e.target.value)},style:{width:"100%",padding:"4px",backgroundColor:"#374151",color:"white",border:"1px solid #6b7280",borderRadius:"4px",fontSize:"12px"}},a.createElement("option",{value:"sine"},"Sine Wave"),a.createElement("option",{value:"triangle"},"Triangle Wave"),a.createElement("option",{value:"saw"},"Sawtooth Wave"),a.createElement("option",{value:"square"},"Square Wave"))):"Distortion"===n.type&&"preset"===o?a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Preset:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,e.target.value)}},a.createElement("option",{value:"clean"},"Clean (soft clipping)"),a.createElement("option",{value:"overdrive"},"Overdrive (smooth saturation)"),a.createElement("option",{value:"fuzz"},"Fuzz (hard clipping)"),a.createElement("option",{value:"speaker"},"Speaker (cabinet compression)"),a.createElement("option",{value:"bitcrush"},"Bitcrush (quantized)"),a.createElement("option",{value:"saturatorlive"},"SaturatorLive (Ableton OD+Sat)"))):"Distortion"===n.type&&"bypassMode"===o?a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Bypass Mode:"),a.createElement("select",{value:i,onChange:function(e){r(n.id,o,e.target.value)}},a.createElement("option",{value:"toggle"},"Toggle (button switches on/off)"),a.createElement("option",{value:"gate"},"Gate (active while held)"))):"Distortion"===n.type&&"presetCrossfade"===o?a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Preset Crossfade: ",i.toFixed(2)," (0=instant, 1=smooth)"),a.createElement("input",{type:"range",min:"0",max:"1",step:"0.01",value:i,onChange:function(e){r(n.id,o,parseFloat(e.target.value))},style:{width:"100%"}})):"Distortion"===n.type&&"drive"===o?a.createElement("div",{key:o,className:"param"},a.createElement("label",null,"Drive: ",i.toFixed(1)," (0-10)"),a.createElement("input",{type:"range",min:"0",max:"10",step:"0.1",value:i,onChange:function(e){r(n.id,o,parseFloat(e.target.value))},style:{width:"100%"}})):a.createElement("div",{key:o,className:"param"},a.createElement("label",null,o,":"),a.createElement("input",{type:"number"==typeof i?"number":"text",defaultValue:i,onBlur:function(e){var t="number"==typeof i?parseFloat(e.target.value)||0:e.target.value;r(n.id,o,t)},onKeyDown:function(e){if("Enter"===e.key){var t="number"==typeof i?parseFloat(e.target.value)||0:e.target.value;r(n.id,o,t),e.target.blur()}}}))})),l.some(function(e){return"Pot"===e.type||"LEDButton"===e.type})&&a.createElement("div",{className:"params"},a.createElement("h3",{style:{cursor:"pointer",display:"flex",alignItems:"center",gap:"8px",userSelect:"none"},onClick:function(){E(!x)}},x?"▼":"▶"," Hardware Banking Overview"),x&&a.createElement(a.Fragment,null,a.createElement("div",{style:{fontSize:"11px",lineHeight:"1.4"}},(oe=l.filter(function(e){return"Pot"===e.type}),re={},oe.forEach(function(e){var n,t=(null===(n=e.params)||void 0===n?void 0:n.bank)||1;re[t]||(re[t]=[]),re[t].push(e)}),a.createElement("div",{style:{marginBottom:"12px"}},a.createElement("div",{style:{fontWeight:"bold",color:"#22c55e",marginBottom:"4px"}},"🎛️ Pots: ",oe.length,"/32 total (",oe.length>32?"OVER LIMIT!":"OK",")"),[1,2,3,4,5,6].map(function(e){var t=re[e]||[],o=0===t.length;return a.createElement("div",{key:e,style:{display:"flex",alignItems:"center",marginBottom:"2px",opacity:o?.5:1}},a.createElement("div",{style:{width:"12px",height:"12px",backgroundColor:it[e-1],borderRadius:"2px",marginRight:"6px"}}),a.createElement("div",{style:{minWidth:"60px"}},"Bank ",e,":"),a.createElement("div",{style:{flex:1}},o?"empty":t.map(function(e,o){var r,i=(null===(r=e.params)||void 0===r?void 0:r.index)||1;return a.createElement("span",{key:e.id,style:{marginRight:"4px",color:e.id===(null==n?void 0:n.id)?"#22c55e":"#cbd5e1"}},"P",i,o<t.length-1?",":"")})))}))),(te=l.filter(function(e){return"LEDButton"===e.type}),ae={},te.forEach(function(e){var n,t=(null===(n=e.params)||void 0===n?void 0:n.bank)||1;ae[t]||(ae[t]=[]),ae[t].push(e)}),a.createElement("div",null,a.createElement("div",{style:{fontWeight:"bold",color:"#22c55e",marginBottom:"4px"}},"🔘 Buttons: ",te.length,"/32 total (",te.length>32?"OVER LIMIT!":"OK",")"),[1,2,3,4,5,6].map(function(e){var t=ae[e]||[],o=0===t.length;return a.createElement("div",{key:e,style:{display:"flex",alignItems:"center",marginBottom:"2px",opacity:o?.5:1}},a.createElement("div",{style:{width:"12px",height:"12px",backgroundColor:it[e-1],borderRadius:"2px",marginRight:"6px"}}),a.createElement("div",{style:{minWidth:"60px"}},"Bank ",e,":"),a.createElement("div",{style:{flex:1}},o?"empty":t.map(function(e,o){var r,i=(null===(r=e.params)||void 0===r?void 0:r.index)||1;return a.createElement("span",{key:e.id,style:{marginRight:"4px",color:e.id===(null==n?void 0:n.id)?"#22c55e":"#cbd5e1"}},"B",i,o<t.length-1?",":"")})))}))),a.createElement("div",{style:{marginTop:"8px",padding:"6px",backgroundColor:"#0f172a",borderRadius:"4px",border:"1px solid #334155"}},a.createElement("div",{style:{fontWeight:"bold",color:"#f59e0b",marginBottom:"2px"}},"🎚️ Dedicated Banking System"),a.createElement("div",null,"4 physical pots × 6 banks = 24 virtual pots max"),a.createElement("div",null,"4 physical buttons × 6 banks = 24 virtual buttons max"),a.createElement("div",{style:{marginTop:"6px",fontSize:"10px",color:"#94a3b8"}},a.createElement("div",{style:{fontWeight:"bold",color:"#22c55e",marginBottom:"2px"}},"🎛️ Encoder Navigation (clockwise):"),a.createElement("div",null,"Bank 1: Gate1 LED → Bank 2: Gate2 LED → Bank 3: MIDI-IN LED"),a.createElement("div",null,"Bank 4: MIDI-OUT LED → Bank 5: Gate3 LED → Bank 6: Gate4 LED"),a.createElement("div",null,"Bank 5: Gate3 LED → Bank 6: Gate4 LED → wraps to Bank 1"),a.createElement("div",{style:{marginTop:"4px",fontStyle:"italic"}},"• Encoder button: confirm bank selection"),a.createElement("div",{style:{fontStyle:"italic"}},"• LEDs fade back to normal operation after selection"),a.createElement("div",{style:{fontStyle:"italic"}},"• Second encoder press: show current bank")),a.createElement("div",{style:{marginTop:"6px",fontSize:"10px",padding:"4px",backgroundColor:"#1e293b",borderRadius:"3px"}},a.createElement("span",{style:{color:"#f59e0b"}},"⚡ Future:")," WS2812B LEDs under pots/buttons will match bank colors"))))),a.createElement("div",{className:"params"},a.createElement("h3",null,"Debug Tools"),a.createElement("button",{className:"btn ".concat("copied"===u?"btn-green":"btn-amber"),onClick:s,style:{width:"100%",marginBottom:"8px"},disabled:"copying"===u},"copied"===u?"Copied!":"copying"===u?"Copying...":"Copy Netlist")),m&&n&&a.createElement(un,{componentName:"Sample Editor",onRetry:function(){_(!1),setTimeout(function(){return _(!0)},100)}},a.createElement(Je,{module:n,onUpdateParam:r,onClose:function(){return _(!1)},modules:l})),h&&n&&a.createElement(yn,{module:n,onUpdateParam:r,onClose:function(){return v(!1)},fullscreen:!0}),y&&n&&a.createElement(Sn,{module:n,onUpdateParam:r,onClose:function(){return k(!1)},fullscreen:!0}),P&&n&&a.createElement(Cn,{module:n,onUpdateParam:r,onClose:function(){return C(!1)}}),I&&n&&a.createElement(On,{module:n,onUpdateParam:r,onClose:function(){return M(!1)},fullscreen:!0}),G&&n&&a.createElement(jn,{module:n,modules:l,onUpdateParam:r,onClose:function(){return q(!1)},fullscreen:!0}),A&&n&&a.createElement(Bn,{module:n,modules:l,onUpdateParam:r,onClose:function(){return T(!1)},fullscreen:!0}),z&&n&&a.createElement(Bn,{module:n,modules:l,onUpdateParam:r,onClose:function(){return F(!1)},fullscreen:!0}),W&&n&&a.createElement(tn,{module:n,onUpdateParam:r,onClose:function(){return V(!1)}}))},dt=function(){var e=[{from:{id:"LineIn1:L",port:"L",kind:"audio"},to:{id:"Looper1:inL",port:"inL",kind:"audio"}},{from:{id:"LineIn1:R",port:"R",kind:"audio"},to:{id:"Looper1:inR",port:"inR",kind:"audio"}},{from:{id:"Looper1:outL",port:"outL",kind:"audio"},to:{id:"I2SOut1:L",port:"L",kind:"audio"}},{from:{id:"Looper1:outR",port:"outR",kind:"audio"},to:{id:"I2SOut1:R",port:"R",kind:"audio"}},{from:{id:"LEDButton1:press",port:"press",kind:"ctrl"},to:{id:"Looper1:record",port:"record",kind:"ctrl"}}],n=nt((0,a.useState)([{id:"LineIn1",type:"LineIn",x:250,y:300,params:{pin_din:8,pin_mclk:16,gain:2,dc_block:!0,rate:44100}},{id:"Looper1",type:"Looper",x:500,y:300,params:{mix:1,fade_ms:10}},{id:"LEDButton1",type:"LEDButton",x:250,y:150,params:{pin:2,ledPin:3,bank:1,index:1,locked:!1,debug:!1,mode:"latching"}},{id:"I2SOut1",type:"I2SOut",x:750,y:300,params:{pin_bck:15,pin_lrck:17,pin_data:18,rate:44100}}]),2),t=n[0],o=n[1],r=nt((0,a.useState)(function(){return console.log("Loading default connections:",e),e}),2),i=r[0],c=r[1],l=nt((0,a.useState)(null),2),s=l[0],u=l[1],p=nt((0,a.useState)([]),2),d=p[0],f=p[1],m=nt((0,a.useState)(null),2),_=m[0],g=m[1],h=nt((0,a.useState)(null),2),v=h[0],b=h[1],y=nt((0,a.useState)(null),2),k=(y[0],y[1]),S=nt((0,a.useState)([]),2),x=S[0],E=S[1],w=nt((0,a.useState)(null),2),P=w[0],C=w[1],R=nt((0,a.useState)(null),2),I=R[0],M=R[1],A=nt((0,a.useState)(!1),2),T=(A[0],A[1],nt((0,a.useState)({x:0,y:0}),2)),B=(T[0],T[1],nt((0,a.useState)(!1),2)),z=(B[0],B[1],nt((0,a.useState)(null),2)),F=z[0],N=z[1],G=nt((0,a.useState)({x:0,y:0}),2),q=G[0],U=G[1],W=nt((0,a.useState)(""),2),V=W[0],j=W[1],H=nt((0,a.useState)(!1),2),$=H[0],K=H[1],Y=nt((0,a.useState)("idle"),2),X=Y[0],Z=Y[1],Q=nt((0,a.useState)({percentage:0,breakdown:[]}),2),J=Q[0],ee=Q[1],ne=nt((0,a.useState)(!1),2),te=(ne[0],ne[1],nt((0,a.useState)(!1),2)),ae=te[0],oe=te[1],re=nt((0,a.useState)(""),2),ie=re[0],ce=re[1],le=nt((0,a.useState)(null),2),se=(le[0],le[1],nt((0,a.useState)(!1),2)),ue=(se[0],se[1],nt((0,a.useState)(null),2)),pe=(ue[0],ue[1],nt((0,a.useState)(!1),2)),de=pe[0],fe=pe[1],me=nt((0,a.useState)(null),2),_e=me[0],ge=me[1],he=nt((0,a.useState)(!1),2),ve=he[0],be=he[1],ye=nt((0,a.useState)(null),2),ke=ye[0],Se=ye[1],xe=nt((0,a.useState)(!1),2),Ee=(xe[0],xe[1],nt((0,a.useState)(null),2)),we=(Ee[0],Ee[1],nt((0,a.useState)(!1),2)),Ce=(we[0],we[1],nt((0,a.useState)(null),2)),Re=(Ce[0],Ce[1],nt((0,a.useState)("idle"),2)),Le=Re[0],Ie=Re[1],Me=(0,a.useRef)(),De=nt((0,a.useState)(null),2),Ae=De[0],Te=De[1],Oe=nt((0,a.useState)([]),2),Be=Oe[0],ze=Oe[1],Fe=nt((0,a.useState)(-1),2),Ne=Fe[0],Ge=Fe[1],qe=nt((0,a.useState)(!1),2),Ue=qe[0],We=qe[1],Ve=(0,a.useCallback)(function(){if(Ue)console.log("Skipping history save during undo/redo");else{var e={modules:JSON.parse(JSON.stringify(t)),connections:JSON.parse(JSON.stringify(i)),groups:JSON.parse(JSON.stringify(x))};console.log("Saving to history. Current index: ".concat(Ne,", Snapshot:"),{modules:e.modules.length,connections:e.connections.length,groups:e.groups.length}),ze(function(n){var t=n.slice(0,Ne+1);return t.push(e),t.length>50?(t.shift(),t):(console.log("History updated. New length: ".concat(t.length)),t)}),Ge(function(e){return Math.min(e+1,49)})}},[t,i,x,Ne,Ue]);(0,a.useEffect)(function(){var e={modules:JSON.parse(JSON.stringify(t)),connections:JSON.parse(JSON.stringify(i)),groups:JSON.parse(JSON.stringify(x))};ze([e]),Ge(0),console.log("Saved initial state to history")},[]),(0,a.useEffect)(function(){return document.addEventListener("keydown",$e),function(){return document.removeEventListener("keydown",$e)}},[_,s,d,P,v,i,t,x,Be,Ne]),(0,a.useEffect)(function(){try{var e=new Pe(t,i,x).estimateCPU();ee(e)}catch(e){console.error("CPU estimation error:",e),ee({percentage:0,breakdown:[]})}},[t,i,x]);var je=function(e,n,t){o(function(a){return a.map(function(a){if(a.id!==e)return a;var o=Jn(Jn({},a.params),{},et({},n,t));if("LEDButton"===a.type&&"index"===n){var r={1:{pin:0,ledPin:6},2:{pin:1,ledPin:7},3:{pin:2,ledPin:8},4:{pin:3,ledPin:9}}[t];r&&(o.pin=r.pin,o.ledPin=r.ledPin)}if("Pot"===a.type&&"index"===n){var i={1:7,2:3,3:4,4:5}[t];void 0!==i&&(o.pin=i)}return Jn(Jn({},a),{},{params:o})})}),(null==s?void 0:s.id)===e&&u(function(e){var a=Jn(Jn({},e.params),{},et({},n,t));if("LEDButton"===e.type&&"index"===n){var o={1:{pin:0,ledPin:6},2:{pin:1,ledPin:7},3:{pin:2,ledPin:8},4:{pin:3,ledPin:9}}[t];o&&(a.pin=o.pin,a.ledPin=o.ledPin)}if("Pot"===e.type&&"index"===n){var r={1:7,2:3,3:4,4:5}[t];void 0!==r&&(a.pin=r)}return Jn(Jn({},e),{},{params:a})})},He=function(e){console.log("Deleting module: ".concat(e)),Ve(),o(function(n){var t=n.filter(function(n){return n.id!==e});return console.log("Modules after delete: ".concat(t.length," (was ").concat(n.length,")")),t}),c(function(n){return n.filter(function(n){var t=n.from.id.split(":")[0],a=n.to.id.split(":")[0];return t!==e&&a!==e})}),E(function(n){return n.map(function(n){var t,a,o,r;if(!n.moduleIds.includes(e))return n;var i=(null===(t=n.inputPorts)||void 0===t?void 0:t.filter(function(n){return n.targetModuleId!==e}))||[],c=(null===(a=n.outputPorts)||void 0===a?void 0:a.filter(function(n){return n.sourceModuleId!==e}))||[],l=n.moduleIds.filter(function(n){return n!==e});return console.log("Cleaned up group ".concat(n.id,": removed ").concat((null===(o=n.inputPorts)||void 0===o?void 0:o.length)-i.length," input ports, ").concat((null===(r=n.outputPorts)||void 0===r?void 0:r.length)-c.length," output ports")),Jn(Jn({},n),{},{moduleIds:l,inputPorts:i,outputPorts:c})})}),(null==s?void 0:s.id)===e&&u(null)},$e=function(e){if("INPUT"!==e.target.tagName&&"SELECT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName)if(!e.ctrlKey&&!e.metaKey||"z"!==e.key||e.shiftKey)if((e.ctrlKey||e.metaKey)&&"z"===e.key&&e.shiftKey){if(e.preventDefault(),Ne<Be.length-1){var n=Be[Ne+1];We(!0),o(n.modules),c(n.connections),E(n.groups),Ge(function(e){return e+1}),u(null),f([]),g(null),C(null),setTimeout(function(){return We(!1)},100),console.log("Redo to history index ".concat(Ne+1))}}else if(!e.ctrlKey&&!e.metaKey||"c"!==e.key){if(!e.ctrlKey&&!e.metaKey||"v"!==e.key){if("Delete"===e.key||"Backspace"===e.key)if(_)r=_,Ve(),c(function(e){return e.filter(function(e){return"".concat(e.from.id,"-").concat(e.to.id)!==r})}),g(null);else if(P)Ve(),Ye(P.id);else if(d.length>0){Ve();var a=new Set(d.map(function(e){return e.id}));o(function(e){return e.filter(function(e){return!a.has(e.id)})}),c(function(e){return e.filter(function(e){var n=e.from.id.split(":")[0],t=e.to.id.split(":")[0];return!a.has(n)&&!a.has(t)})}),f([])}else s&&He(s.id);var r;"Escape"===e.key&&(N(null),g(null),u(null),f([]),k(null),C(null))}else if(e.preventDefault(),v&&v.modules.length>0){Ve();var l=50;if(v.group)for(var p=v.group.x,m=v.group.y,h=!0,y=function(){var e=p+l,n=m+l;(h=x.some(function(t){return Math.abs(t.x-e)<20&&Math.abs(t.y-n)<20}))&&(l+=50)};h&&l<500;)y();else for(var S=v.modules.map(function(e){return{x:e.x,y:e.y}}),w=!0;w&&l<500;)(w=S.some(function(e){var n=e.x+l,a=e.y+l;return t.some(function(e){return Math.abs(e.x-n)<20&&Math.abs(e.y-a)<20})}))&&(l+=50);var R=new Map,L=v.modules.map(function(e){var n=D(e.type,e.x+l,e.y+l,t);return R.set(e.id,n.id),n.params=Jn({},e.params),n}),I=v.connections.map(function(e){var n=e.from.id.split(":")[0],t=e.to.id.split(":")[0],a=e.from.id.split(":")[1],o=e.to.id.split(":")[1],r=R.get(n),i=R.get(t);return r&&i?{from:{id:"".concat(r,":").concat(a),port:e.from.port,kind:e.from.kind},to:{id:"".concat(i,":").concat(o),port:e.to.port,kind:e.to.kind}}:null}).filter(function(e){return null!==e});if(o(function(e){return[].concat(Zn(e),Zn(L))}),c(function(e){return[].concat(Zn(e),Zn(I))}),v.group){var M=v.group.moduleIds.map(function(e){return R.get(e)}).filter(function(e){return e}),A=x.filter(function(e){return e.label.startsWith(v.group.label)}).length,T=A>0?"".concat(v.group.label," (").concat(A,")"):v.group.label,O={id:"group".concat(Date.now()),label:T,moduleIds:M,x:v.group.x+l,y:v.group.y+l,color:v.group.color,collapsed:v.group.collapsed,inputPorts:v.group.inputPorts?v.group.inputPorts.map(function(e){var n=R.get(e.targetModuleId)||e.targetModuleId;return{id:"".concat(n,":").concat(e.port),port:e.port,kind:e.kind,targetModuleId:n,targetPort:e.targetPort||e.port,x:e.x?e.x+l:e.x,y:e.y?e.y+l:e.y}}):[],outputPorts:v.group.outputPorts?v.group.outputPorts.map(function(e){var n=R.get(e.sourceModuleId)||e.sourceModuleId;return{id:"".concat(n,":").concat(e.port),port:e.port,kind:e.kind,sourceModuleId:n,sourcePort:e.sourcePort||e.port,x:e.x?e.x+l:e.x,y:e.y?e.y+l:e.y}}):[]};E(function(e){return[].concat(Zn(e),[O])}),C(O),f([]),u(null),console.log("Pasted group with ".concat(L.length," modules and ").concat(I.length," connections"))}else f(L),u(null),console.log("Pasted ".concat(L.length," modules and ").concat(I.length," connections"))}}else{if(e.preventDefault(),P){var B=t.filter(function(e){return P.moduleIds.includes(e.id)}),z=new Set(B.map(function(e){return e.id})),F=i.filter(function(e){var n=e.from.id.split(":")[0],t=e.to.id.split(":")[0];return z.has(n)&&z.has(t)});return b({modules:B,connections:F,group:P}),void console.log("Copied group with ".concat(B.length," modules and ").concat(F.length," connections"))}var G=d.length>0?d:s?[s]:[];if(G.length>0){var q=new Set(G.map(function(e){return e.id})),U=i.filter(function(e){var n=e.from.id.split(":")[0],t=e.to.id.split(":")[0];return q.has(n)&&q.has(t)});b({modules:G,connections:U}),console.log("Copied ".concat(G.length," modules and ").concat(U.length," connections"))}}else if(e.preventDefault(),console.log("Undo requested. Current index: ".concat(Ne,", History length: ").concat(Be.length)),Ne>0){var W=Be[Ne-1];console.log("Restoring state from index ".concat(Ne-1,":"),{modules:W.modules.length,connections:W.connections.length,groups:W.groups.length}),We(!0),o(W.modules),c(W.connections),E(W.groups),Ge(function(e){return e-1}),u(null),f([]),g(null),C(null),setTimeout(function(){return We(!1)},100)}else console.log("Cannot undo: at oldest history state")},Ke=function(){var e=Xn($n().m(function e(){var n,a,o,r,c,l;return $n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(0!==t.length){e.n=1;break}return alert("No modules in patch. Add some modules first."),e.a(2);case 1:if(e.p=1,console.log("Generating code using frontend CodeGenerator..."),console.log("Modules: ".concat(t.length,", Connections: ").concat(i.length)),n=new Pe(t,i,x),a=n.estimateCPU(),console.log("CPU Estimate:",a),console.log("  Estimated: ".concat(a.percentage,"% (").concat(a.estimatedCycles," / ").concat(a.availableCycles," cycles)")),a.breakdown.forEach(function(e){console.log("  ".concat(e.id," (").concat(e.type,"): ").concat(e.cost," units"))}),o=n.generate(),j(o),e.p=2,!navigator.clipboard||!window.isSecureContext){e.n=4;break}return e.n=3,navigator.clipboard.writeText(o);case 3:e.n=5;break;case 4:(r=document.createElement("textarea")).value=o,r.style.position="fixed",r.style.left="-999999px",r.style.top="-999999px",document.body.appendChild(r),r.focus(),r.select(),document.execCommand("copy"),document.body.removeChild(r);case 5:console.log("✅ Code copied to clipboard successfully"),console.log("Estimated CPU: ".concat(a.percentage,"% (").concat(a.estimatedCycles," / ").concat(a.availableCycles," cycles per sample)")),a.percentage>80&&console.warn("⚠️ WARNING: High CPU usage!"),Z("copied"),setTimeout(function(){return Z("idle")},2e3),e.n=7;break;case 6:e.p=6,c=e.v,console.error("Failed to copy to clipboard:",c),alert("Failed to copy to clipboard. Use Code Preview to manually copy.");case 7:console.log("✅ Code generated successfully"),console.log("Code length: ".concat(o.length," characters")),e.n=9;break;case 8:e.p=8,l=e.v,console.error("Code generation error:",l),alert("Code generation failed: ".concat(l.message));case 9:return e.a(2)}},e,null,[[2,6],[1,8]])}));return function(){return e.apply(this,arguments)}}(),Ye=function(e){var n=x.find(function(n){return n.id===e});if(n){var t=new Set(n.moduleIds);o(function(e){return e.filter(function(e){return!t.has(e.id)})}),c(function(n){return n.filter(function(n){var a=n.from.id.split(":")[0],o=n.to.id.split(":")[0];return!t.has(a)&&!t.has(o)&&a!==e&&o!==e})}),E(function(n){return n.filter(function(n){return n.id!==e})}),(null==P?void 0:P.id)===e&&C(null),I===e&&M(null),console.log("Deleted group ".concat(e," and ").concat(t.size," contained modules"))}},Xe=function(e,n){E(function(t){return t.map(function(t){return t.id===e?Jn(Jn({},t),{},{label:n}):t})}),(null==P?void 0:P.id)===e&&C(function(e){return Jn(Jn({},e),{},{label:n})})},Ze=function(){var e=Xn($n().m(function e(){var n,a,o,r,c;return $n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(0!==t.length){e.n=1;break}return Ie("idle"),e.a(2);case 1:return Ie("copying"),n=function(e){return x.find(function(n){return n.moduleIds.includes(e)})},a="",o=[],r={},i.forEach(function(e){var a=e.from.id.split(":"),i=e.to.id.split(":"),c=a[0],l=i[0],s=a[1]||"",u=i[1]||"",p=t.find(function(e){return e.id===c}),d=t.find(function(e){return e.id===l}),f=n(c),m=n(l),_=e.from.kind||"unknown";if("unknown"===_&&(s.match(/^(L|R|left|right|outL|outR|inL|inR)$/i)||u.match(/^(L|R|left|right|outL|outR|inL|inR)$/i)?_="audio":(s.match(/^(value|press|freq|wave|fm|btn\d+)$/i)||u.match(/^(value|press|freq|wave|fm|btn\d+)$/i))&&(_="control")),f||m)if(f&&m&&f.id===m.id){r[f.id]||(r[f.id]=[]);var g=p?lt(p,L[p.type],t):c,h=d?lt(d,L[d.type],t):l;r[f.id].push("  [".concat(_,"] ").concat(g,":").concat(s," → ").concat(h,":").concat(u))}else{var v,b;if(f){var y=f.outputPorts.find(function(e){return e.sourceModuleId===c&&e.sourcePort===s});v=y?"".concat(f.label,":out_").concat(y.port):"".concat(f.label,":").concat(s)}else v=p?lt(p,L[p.type],t):c,v="".concat(v,":").concat(s);if(m){var k=m.inputPorts.find(function(e){return e.targetModuleId===l&&e.targetPort===u});b=k?"".concat(m.label,":in_").concat(k.port):"".concat(m.label,":").concat(u)}else b=d?lt(d,L[d.type],t):l,b="".concat(b,":").concat(u);o.push("[".concat(_,"] ").concat(v," → ").concat(b))}else{var S=p?lt(p,L[p.type],t):c,x=d?lt(d,L[d.type],t):l;o.push("[".concat(_,"] ").concat(S,":").concat(s," → ").concat(x,":").concat(u))}}),o.length>0&&(a+="=== EXTERNAL CONNECTIONS ===\n",a+=o.join("\n")+"\n"),Object.keys(r).length>0&&(a+="\n=== INTERNAL GROUP CONNECTIONS ===\n",Object.keys(r).forEach(function(e){var n=x.find(function(n){return n.id===e});a+="\n".concat(n?n.label:e,":\n"),a+=r[e].join("\n")+"\n"})),e.p=2,e.n=3,navigator.clipboard.writeText(a);case 3:Ie("copied"),setTimeout(function(){Ie("idle")},1e3),e.n=5;break;case 4:e.p=4,c=e.v,console.error("Failed to copy to clipboard:",c),Ie("idle"),alert("Failed to copy to clipboard. Check console for details.");case 5:return e.a(2)}},e,null,[[2,4]])}));return function(){return e.apply(this,arguments)}}(),Qe=function(){console.log("handleZoomToFit called, canvasRef:",Me.current),Me.current&&Me.current.zoomToFit?Me.current.zoomToFit():console.log("No zoomToFit function available")};return a.createElement("div",{className:"app"},a.createElement(ot,{onGenerateCode:Ke,onCodePreview:function(){if(!V){if(0===t.length)return void alert("No modules in patch. Add some modules first.");try{var e=new Pe(t,i,x).generate();j(e)}catch(e){return console.error("Code generation error:",e),void alert("Code generation failed: ".concat(e.message))}}K(!0)},onSavePatch:function(){var e=JSON.stringify({modules:t,connections:i},null,2);console.log("Patch data:",e),alert("Patch saved to console (save/load not yet implemented)")},onLoadPatch:function(){oe(!0)},onClearCanvas:function(){0!==t.length||0!==i.length||0!==x.length?window.confirm("Clear all ".concat(t.length," modules, ").concat(i.length," connections, and ").concat(x.length," groups from the canvas?\n\nThis cannot be undone."))&&(o([]),c([]),E([]),u(null),N(null),g(null),C(null),console.log("Canvas cleared")):alert("Canvas is already empty")},onZoomToFit:Qe,copyButtonState:X}),a.createElement("div",{className:"main-content"},a.createElement(rt,{onAddModule:function(e){try{Ve(),console.log("Adding ".concat(e," module. Current modules:"),t.map(function(e){return e.id}));var n=D(e,null,null,t);console.log("Created new module:",n),o(function(e){var t=[].concat(Zn(e),[n]);return console.log("Updated modules:",t.map(function(e){return e.id})),setTimeout(function(){Me.current&&Me.current.isModuleVisible&&(Me.current.isModuleVisible(n)||(console.log("New module is outside viewport, auto-zooming to fit"),Qe()))},50),t}),I&&(E(function(e){return e.map(function(e){return e.id===I?Jn(Jn({},e),{},{moduleIds:[].concat(Zn(e.moduleIds),[n.id])}):e})}),console.log("Added module ".concat(n.id," to group ").concat(I)))}catch(n){console.error("Error adding ".concat(e," module:"),n),alert("Error adding ".concat(e," module: ").concat(n.message))}}}),a.createElement(ut,{ref:Me,modules:t,connections:i,selectedModule:s,selectedModules:d,onSelectModule:function(e){if(e.ctrlKey){var n=d.some(function(n){return n.id===e.id});f(n?function(n){return n.filter(function(n){return n.id!==e.id})}:function(n){return[].concat(Zn(n),[e])}),u(null)}else u(e),f([]);g(null)},onSelectModules:function(e){f(e),u(null),g(null)},onMoveModule:function(e,n,a){if(d.some(function(n){return n.id===e})&&d.length>1){var r=t.find(function(n){return n.id===e});if(!r)return;var i=n-r.x,c=a-r.y,l=new Set(d.map(function(e){return e.id}));o(function(e){return e.map(function(e){return l.has(e.id)?Jn(Jn({},e),{},{x:e.x+i,y:e.y+c}):e})}),f(function(e){return e.map(function(e){return Jn(Jn({},e),{},{x:e.x+i,y:e.y+c})})})}else o(function(t){return t.map(function(t){return t.id===e?Jn(Jn({},t),{},{x:n,y:a}):t})}),(null==s?void 0:s.id)===e&&u(function(e){return Jn(Jn({},e),{},{x:n,y:a})})},onPortClick:function(e){if(console.log("Port clicked:",e),F){if(console.log("Completing connection. From:",F,"To:",e),console.log("Validation: port.side =",e.side,", connectingFrom.kind =",F.kind,", port.kind =",e.kind),"left"===e.side&&e.kind===F.kind){var n={id:"".concat(F.id,"->").concat(e.id),from:F,to:e},a=i.some(function(n){return n.from.id===F.id&&n.to.id===e.id});if("control"===e.kind&&i.some(function(n){return n.to.id===e.id}))return console.log("Control input already has connection"),alert("Cannot connect: Control input ".concat(e.id," already has a connection")),void N(null);if(a)console.log("Connection already exists");else{console.log("Creating new connection:",n),Ve(),c(function(e){return[].concat(Zn(e),[n])});var r=e.id.split(":")[0],l=t.find(function(e){return e.id===r});if(l&&"Automation"===l.type){var s=e.port;if(s.startsWith("in_")){var u,p=parseInt(s.split("_")[1]),d=(null===(u=l.params)||void 0===u?void 0:u.num_inputs)||1;p===d&&d<8&&(console.log("Automation ".concat(l.id,": Expanding from ").concat(d," to ").concat(d+1," inputs")),o(function(e){return e.map(function(e){return e.id===r?Jn(Jn({},e),{},{params:Jn(Jn({},e.params),{},{num_inputs:d+1})}):e})}))}}if(l&&"MIDIOut"===l.type){var f=e.port;if(f.startsWith("cc_")){var m,_=parseInt(f.split("_")[1]),g=(null===(m=l.params)||void 0===m?void 0:m.num_cc)||1;_===g&&g<8&&(console.log("MIDIOut ".concat(l.id,": Expanding from ").concat(g," to ").concat(g+1," CC ports")),o(function(e){return e.map(function(e){return e.id===r?Jn(Jn({},e),{},{params:Jn(Jn({},e.params),{},{num_cc:g+1})}):e})}))}}}}else console.log("Invalid connection - validation failed:",{portSide:e.side,expectedSide:"left",portKind:e.kind,connectingFromKind:F.kind,kindsMatch:e.kind===F.kind});N(null)}else"right"===e.side?(console.log("Starting connection from output port:",e.id),console.log("Full port object:",e),N(e)):console.log("Cannot start connection from input port")},onPortRightClick:function(e,n,t){console.log("handlePortRightClick called:",{port:n,moduleId:t,currentContext:I}),e.preventDefault(),e.stopPropagation(),I?(console.log("Port right-clicked:",n,"Module:",t,"Context:",I),Te({x:e.clientX,y:e.clientY,port:n,moduleId:t,groupId:I}),console.log("Context menu set at:",e.clientX,e.clientY)):console.log("Not inside a group - context menu not available. CurrentContext:",I)},connectingFrom:F,selectedConnection:_,onConnectionClick:function(e){g(e),u(null)},mousePos:q,onMouseMove:U,onDeleteModule:He,onUpdateParam:je,onOpenClockSequencer:function(e){ge(e),fe(!0)},onOpenHarmonicSequencer:function(e){Se(e),be(!0)},onClearSelections:function(){u(null),f([]),g(null),C(null)},groups:x,selectedGroup:P,onSelectGroup:function(e){C(e),u(null),f([]),g(null)},onMoveGroup:function(e,n,t){E(function(a){return a.map(function(a){return a.id===e?Jn(Jn({},a),{},{x:n,y:t}):a})}),(null==P?void 0:P.id)===e&&C(function(e){return Jn(Jn({},e),{},{x:n,y:t})})},onToggleGroupCollapse:function(e){E(function(n){return n.map(function(n){return n.id===e?Jn(Jn({},n),{},{collapsed:!n.collapsed}):n})})},onDeleteGroup:Ye,onUpdateGroupLabel:Xe,onEnterGroup:function(e){console.log("Entering subpatch:",e),M(e),u(null),f([])},onExitToRoot:function(){console.log("Exiting to root patch"),M(null),u(null),f([])},onMoveStub:function(e,n,t,a,o){E(function(r){return r.map(function(r){if(r.id===e){if("input"===n){var i=Zn(r.inputPorts);return i[t]=Jn(Jn({},i[t]),{},{x:a,y:o}),Jn(Jn({},r),{},{inputPorts:i})}if("output"===n){var c=Zn(r.outputPorts);return c[t]=Jn(Jn({},c[t]),{},{x:a,y:o}),Jn(Jn({},r),{},{outputPorts:c})}}return r})})},currentContext:I}),a.createElement(pt,{selectedModule:s,selectedModules:d,selectedGroup:P,onUpdateParam:je,onUpdateGroupLabel:Xe,onUngroupModules:function(e){console.log("Ungrouping:",e),E(function(n){return n.filter(function(n){return n.id!==e})}),C(null),I===e&&M(null)},modules:t,onShowNetlist:Ze,netlistCopyState:Le,onCreateGroup:function(){var e=d.length>0?d:s?[s]:[];if(0!==e.length){Ve();var n=new Set(e.map(function(e){return e.id})),a=[],o=[];i.forEach(function(r){var i=r.from.id.split(":")[0],c=r.to.id.split(":")[0],l=n.has(i),s=n.has(c);if(!l&&s){var u=e.find(function(e){return e.id===c}),p=t.find(function(e){return e.id===i}),d=u.x-180,f=u.y+20;a.push({id:"".concat(r.to.id),port:r.to.port,kind:r.to.kind,targetModuleId:c,targetPort:r.to.port,x:d,y:f,externalSource:p.type})}if(l&&!s){var m=e.find(function(e){return e.id===i}),_=t.find(function(e){return e.id===c}),g=O(m),h=m.x+g.width+50,v=m.y+20;o.push({id:"".concat(r.from.id),port:r.from.port,kind:r.from.kind,sourceModuleId:i,sourcePort:r.from.port,x:h,y:v,externalTarget:_.type})}});var r=1/0,c=1/0,l=-1/0,p=-1/0;e.forEach(function(e){var n=O(e);r=Math.min(r,e.x),c=Math.min(c,e.y),l=Math.max(l,e.x+n.width),p=Math.max(p,e.y+n.height)});var m=(r+l)/2,_=(c+p)/2,g={id:"Group".concat(x.length+1),label:"Group ".concat(x.length+1),x:m-100,y:_-75,moduleIds:e.map(function(e){return e.id}),collapsed:!0,inputPorts:a,outputPorts:o,color:"hsl(".concat(60*x.length%360,", 70%, 50%)")};E(function(e){return[].concat(Zn(e),[g])}),f([]),u(null),console.log("Created subpatch: ".concat(g.id," with ").concat(g.moduleIds.length," modules, ").concat(a.length," inputs, ").concat(o.length," outputs"))}else alert("Select modules to group first")},cpuEstimate:J})),$&&a.createElement("div",{className:"modal-backdrop",onClick:function(){return K(!1)}},a.createElement("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},style:{maxWidth:"90%",maxHeight:"90%",width:"1000px"}},a.createElement("div",{className:"modal-header"},a.createElement("h2",null,"Generated Arduino Code"),a.createElement("button",{className:"modal-close",onClick:function(){return K(!1)}},"×")),a.createElement("div",{className:"modal-body",style:{display:"flex",flexDirection:"column",height:"600px"}},a.createElement("div",{style:{display:"flex",justifyContent:"flex-end",gap:"8px",marginBottom:"12px"}},a.createElement("button",{className:"btn btn-ghost",onClick:function(){var e=new Blob([V],{type:"text/plain"}),n=URL.createObjectURL(e),t=document.createElement("a");t.href=n,t.download="2409Code.ino",document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(n)}},"💾 Download .ino"),a.createElement("button",{className:"btn ".concat("btn-green"),onClick:Xn($n().m(function e(){var n,t;return $n().w(function(e){for(;;)switch(e.p=e.n){case 0:if(e.p=0,!navigator.clipboard||!window.isSecureContext){e.n=2;break}return e.n=1,navigator.clipboard.writeText(V);case 1:e.n=3;break;case 2:(n=document.createElement("textarea")).value=V,n.style.position="fixed",n.style.left="-999999px",n.style.top="-999999px",document.body.appendChild(n),n.focus(),n.select(),document.execCommand("copy"),document.body.removeChild(n);case 3:Z("copied"),setTimeout(function(){return Z("idle")},1500),e.n=5;break;case 4:e.p=4,t=e.v,console.error("Failed to copy:",t),alert("Failed to copy to clipboard. Check console for details.");case 5:return e.a(2)}},e,null,[[0,4]])}))},"copied"===X?"✅ Code Copied!":"📋 Copy Code")),a.createElement("textarea",{value:V,readOnly:!0,style:{flex:1,fontFamily:'Monaco, "Cascadia Code", "Fira Code", Consolas, monospace',fontSize:"12px",padding:"12px",border:"1px solid #374151",borderRadius:"6px",backgroundColor:"#0f172a",color:"#e2e8f0",resize:"none",whiteSpace:"pre"}})))),ae&&a.createElement("div",{className:"modal-backdrop",onClick:function(){return oe(!1)}},a.createElement("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},style:{maxWidth:"800px",maxHeight:"80%"}},a.createElement("div",{className:"modal-header"},a.createElement("h2",null,"Load Patch from Netlist"),a.createElement("button",{className:"modal-close",onClick:function(){return oe(!1)}},"×")),a.createElement("div",{className:"modal-body",style:{display:"flex",flexDirection:"column",gap:"16px"}},a.createElement("div",{style:{color:"#94a3b8",fontSize:"13px"}},a.createElement("p",{style:{marginBottom:"8px"}},"Paste netlist from generated Arduino sketch header or manually format:"),a.createElement("pre",{style:{backgroundColor:"#0f172a",padding:"8px",borderRadius:"4px",fontSize:"11px",overflow:"auto"}},"[audio] Oscillator 1:L → VCA:inL\n[audio] Oscillator 1:R → VCA:inR\n[ctrl] Pot 1 (Bank 1):value → Oscillator 1:freq")),a.createElement("textarea",{value:ie,onChange:function(e){return ce(e.target.value)},placeholder:"Paste netlist here...",style:{minHeight:"300px",fontFamily:'Monaco, "Cascadia Code", "Fira Code", Consolas, monospace',fontSize:"12px",padding:"12px",border:"1px solid #374151",borderRadius:"6px",backgroundColor:"#1e293b",color:"#e2e8f0",resize:"vertical"}}),a.createElement("div",{style:{display:"flex",justifyContent:"flex-end",gap:"8px"}},a.createElement("button",{className:"btn btn-ghost",onClick:function(){oe(!1),ce("")}},"Cancel"),a.createElement("button",{className:"btn btn-green",onClick:function(){try{var e=function(e){var n,t=e.split("\n"),a=[],o=new Set,r=/\[(audio|ctrl|control)\]\s+([^:]+):(\S+)\s+→\s+([^:]+):(\S+)/,i=function(e){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=tt(e))){n&&(e=n);var t=0,a=function(){};return{s:a,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,i=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){i=!0,o=e},f:function(){try{r||null==n.return||n.return()}finally{if(i)throw o}}}}(t);try{for(i.s();!(n=i.n()).done;){var c=n.value.match(r);if(c){var l=nt(c,6),s=(l[0],l[1]),u=l[2],p=l[3],d=l[4],f=l[5];a.push({kind:"control"===s?"ctrl":s,from:{module:u.trim(),port:p.trim()},to:{module:d.trim(),port:f.trim()}}),o.add(u.trim()),o.add(d.trim())}}}catch(e){i.e(e)}finally{i.f()}return{connections:a,moduleNames:Array.from(o)}}(ie),n=e.connections,t=e.moduleNames;if(0===n.length)return void alert("No valid connections found in netlist. Expected format:\n[audio] Module1:port → Module2:port\n[ctrl] Module3:port → Module4:port");console.log("Parsed connections:",n),console.log("Module names:",t),Ve();var a=[],r={},i=100,l=100;t.forEach(function(e,n){for(var t=e.split(/\s+\d+/)[0].trim(),o=null,c=0,s=Object.entries(L);c<s.length;c++){var u=nt(s[c],2),p=u[0];if(u[1].label===t||p===t){o=p;break}}if(o){var d=e.match(/\s+(\d+)/),f=d?d[1]:n+1,m="".concat(o).concat(f),_=D(o,m);_.x=i,_.y=l,(i+=200)>1e3&&(i=100,l+=150),a.push(_),r[e]=m}else console.warn("Unknown module type: ".concat(e,", skipping"))});var s=[];n.forEach(function(e){var n=r[e.from.module],t=r[e.to.module];n&&t?s.push({from:{id:"".concat(n,":").concat(e.from.port),port:e.from.port,kind:e.kind},to:{id:"".concat(t,":").concat(e.to.port),port:e.to.port,kind:e.kind}}):console.warn("Skipping connection: ".concat(e.from.module,":").concat(e.from.port," → ").concat(e.to.module,":").concat(e.to.port," (module not found)"))}),o(a),c(s),oe(!1),ce(""),console.log("Loaded ".concat(a.length," modules and ").concat(s.length," connections from netlist"))}catch(e){console.error("Netlist parsing error:",e),alert("Failed to load netlist: ".concat(e.message))}},disabled:!ie.trim()},"Load Patch"))))),de&&_e&&a.createElement(Sn,{module:t.find(function(e){return e.id===_e.id})||_e,onUpdateParam:je,onClose:function(){fe(!1),ge(null)},fullscreen:!0}),ve&&ke&&a.createElement(jn,{module:t.find(function(e){return e.id===ke.id})||ke,modules:t,onUpdateParam:je,onClose:function(){be(!1),Se(null)},fullscreen:!0}),Ae&&a.createElement(a.Fragment,null,a.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999},onClick:function(){return Te(null)}}),a.createElement("div",{style:{position:"fixed",left:Ae.x,top:Ae.y,backgroundColor:"#1e293b",border:"1px solid #334155",borderRadius:"8px",padding:"4px 0",minWidth:"200px",boxShadow:"0 4px 12px rgba(0, 0, 0, 0.5)",zIndex:1e4,color:"#e2e8f0"},onClick:function(e){return e.stopPropagation()}},a.createElement("div",{style:{padding:"8px 16px",cursor:"pointer",fontSize:"14px",transition:"background 0.2s"},onMouseEnter:function(e){return e.target.style.background="#334155"},onMouseLeave:function(e){return e.target.style.background="transparent"},onClick:function(){if(Ae){var e=Ae.groupId,n=Ae.moduleId,t=Ae.port;(function(e,n,t,a,o){console.log("Exposing port ".concat(t," on group ").concat(e," from module ").concat(n)),E(function(r){return r.map(function(r){if(r.id!==e)return r;var i="".concat(n,":").concat(t);if("left"===o){if(r.inputPorts.some(function(e){return e.id===i}))return console.log("Port ".concat(i," already exposed as input")),r;var c={id:i,port:t,kind:a,targetModuleId:n,targetPort:t};return Jn(Jn({},r),{},{inputPorts:[].concat(Zn(r.inputPorts),[c])})}if(r.outputPorts.some(function(e){return e.id===i}))return console.log("Port ".concat(i," already exposed as output")),r;var l={id:i,port:t,kind:a,sourceModuleId:n,sourcePort:t};return Jn(Jn({},r),{},{outputPorts:[].concat(Zn(r.outputPorts),[l])})})}),console.log("Port exposed successfully")})(e,n,t.port,t.kind,t.side),Te(null)}}},"Expose as Group Port"),a.createElement("div",{style:{padding:"4px 16px",fontSize:"12px",color:"#94a3b8",borderTop:"1px solid #334155",marginTop:"4px"}},"left"===Ae.port.side?"Input":"Output"," • ","audio"===Ae.port.kind?"Audio":"Control"))))};o.createRoot(document.getElementById("root")).render(a.createElement(ze,null,a.createElement(dt,null)))})();